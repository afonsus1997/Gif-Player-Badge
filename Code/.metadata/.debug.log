2019-06-21 18:52:06,554 [DEBUG] Log4jSetup$StdOutErrStreamsLog:130 - [STDOUT_REDIRECT] - Configure log4j with defined file: file:C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\.metadata\log4j.properties
2019-06-21 18:52:06,619 [INFO] ApplicationProperties:181 - Using Application install path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831
2019-06-21 18:52:06,636 [INFO] DbMcusXml:68 - Set database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/mcu/
2019-06-21 18:52:06,641 [INFO] DbBoardsPdsc:54 - Set plugin database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/boardmanager/
2019-06-21 18:52:06,642 [INFO] DbMcus:262 - Set plugin images path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/images/
2019-06-21 18:52:06,642 [INFO] DbBoards:225 - Set plugin images path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/images/
2019-06-21 18:52:06,646 [INFO] APIGFXSelector:72 - Set database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/mcu/
2019-06-21 18:52:06,659 [INFO] DbMcusAds:72 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:06,660 [INFO] DbMcusDocs:90 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:06,665 [INFO] DbMcusJson:59 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:06,666 [INFO] DbBoardsDocs:82 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:06,669 [INFO] DbBoardsJson:51 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:06,780 [DEBUG] CrossReferenceDbSqlite:578 - The ST intranet updater server is unknown: mcucrossselector.codex.cro.st.com
2019-06-21 18:52:06,781 [INFO] CrossReferenceDbSqlite:197 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/cs/
2019-06-21 18:52:06,978 [INFO] RulesReader:52 - Compatibility file has been processed (156 Rules)
2019-06-21 18:52:07,006 [DEBUG] MxSystem:104 - Add memory consumption listener on emitter:null
2019-06-21 18:52:07,188 [INFO] MicroXplorer:521 - Detected Java Version = 1.8.0_202
2019-06-21 18:52:07,189 [INFO] DbMcusXml:68 - Set database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/mcu/
2019-06-21 18:52:07,189 [INFO] DbBoardsPdsc:54 - Set plugin database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/boardmanager/
2019-06-21 18:52:07,190 [INFO] DbMcus:262 - Set plugin images path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/images/
2019-06-21 18:52:07,190 [INFO] DbBoards:225 - Set plugin images path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/images/
2019-06-21 18:52:07,190 [INFO] APIGFXSelector:72 - Set database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/mcu/
2019-06-21 18:52:07,191 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,191 [INFO] DbMcusAds:72 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,192 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,192 [INFO] DbMcusDocs:90 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,192 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,192 [INFO] DbMcusJson:59 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,193 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,193 [INFO] DbBoardsDocs:82 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,194 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,194 [INFO] DbBoardsJson:51 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,194 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,195 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,195 [DEBUG] CrossReferenceDbSqlite:578 - The ST intranet updater server is unknown: mcucrossselector.codex.cro.st.com
2019-06-21 18:52:07,195 [INFO] CrossReferenceDbSqlite:197 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/cs/
2019-06-21 18:52:07,264 [DEBUG] MxSystem:282 - Added com.st.microxplorer.maingui.MenuBar@5006a697 by com.st.microxplorer.maingui.MenuBar.createListeners / Number of listeners = 1
2019-06-21 18:52:07,335 [INFO] MainPanel:211 - HeapMemory: 318767104
2019-06-21 18:52:07,375 [DEBUG] MxSystem:282 - Added com.st.microxplorer.maingui.McuScanResultList@41d8ac75 by com.st.microxplorer.maingui.McuScanResultList.<init> / Number of listeners = 2
2019-06-21 18:52:07,458 [INFO] DbMcusXml:68 - Set database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/mcu/
2019-06-21 18:52:07,459 [INFO] DbBoardsPdsc:54 - Set plugin database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/boardmanager/
2019-06-21 18:52:07,460 [INFO] DbMcus:262 - Set plugin images path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/images/
2019-06-21 18:52:07,460 [INFO] DbBoards:225 - Set plugin images path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/images/
2019-06-21 18:52:07,460 [INFO] APIGFXSelector:72 - Set database path to: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/plugins/mcufinder/mcu/
2019-06-21 18:52:07,461 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,461 [INFO] DbMcusAds:72 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,462 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,462 [INFO] DbMcusDocs:90 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,462 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,462 [INFO] DbMcusJson:59 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,463 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,463 [INFO] DbBoardsDocs:82 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,463 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,463 [INFO] DbBoardsJson:51 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/
2019-06-21 18:52:07,464 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,464 [WARN] DbFile:31 - Overriding database path with different value: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder/ => C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder
2019-06-21 18:52:07,464 [DEBUG] CrossReferenceDbSqlite:578 - The ST intranet updater server is unknown: mcucrossselector.codex.cro.st.com
2019-06-21 18:52:07,464 [INFO] CrossReferenceDbSqlite:197 - Set database path to: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/cs/
2019-06-21 18:52:07,502 [INFO] ApplicationProperties:181 - Using Application install path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831
2019-06-21 18:52:07,505 [INFO] PluginManage:178 - Search for loadable plugins [exclusion list=]
2019-06-21 18:52:07,508 [INFO] PluginManage:292 - Check plugin analytics
2019-06-21 18:52:07,510 [DEBUG] PluginManage:324 - Loading plugin analytics ...
2019-06-21 18:52:07,518 [INFO] PluginManage:342 - Loaded plugin analytics (category:tool,tabindex:-1)
2019-06-21 18:52:07,518 [INFO] PluginManage:292 - Check plugin clock
2019-06-21 18:52:07,519 [DEBUG] PluginManage:324 - Loading plugin clock ...
2019-06-21 18:52:07,532 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.clock.ClockConfigurationView@22b4ad0c by com.st.microxplorer.plugins.clock.ClockConfigurationView.<init> / Number of listeners = 3
2019-06-21 18:52:07,532 [INFO] PluginManage:342 - Loaded plugin clock (category:base,tabindex:2)
2019-06-21 18:52:07,533 [INFO] PluginManage:292 - Check plugin ddr
2019-06-21 18:52:07,533 [DEBUG] PluginManage:324 - Loading plugin ddr ...
2019-06-21 18:52:07,537 [INFO] PluginManage:342 - Loaded plugin ddr (category:tool,tabindex:6)
2019-06-21 18:52:07,538 [INFO] PluginManage:292 - Check plugin filemanager
2019-06-21 18:52:07,538 [DEBUG] PluginManage:324 - Loading plugin filemanager ...
2019-06-21 18:52:07,580 [DEBUG] ToolPreferences:49 - key=FileManager.MostRecentFiles, def=, readString=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Gif-Player-Badge\Gif-Player-Badge.ioc
2019-06-21 18:52:07,582 [DEBUG] ToolPreferences:42 - key=FileManager.MostRecentFiles, value=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Gif-Player-Badge\Gif-Player-Badge.ioc
2019-06-21 18:52:07,588 [DEBUG] ToolPreferences:49 - key=FileManager.FilePathName, def=, readString=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Gif-Player-Badge\Gif-Player-Badge.ioc
2019-06-21 18:52:07,738 [INFO] PluginManage:342 - Loaded plugin filemanager (category:base,tabindex:10)
2019-06-21 18:52:07,738 [INFO] PluginManage:292 - Check plugin ipmanager
2019-06-21 18:52:07,739 [DEBUG] PluginManage:324 - Loading plugin ipmanager ...
2019-06-21 18:52:07,757 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ipmanager.IPPluginView@29b2a94c by com.st.microxplorer.plugins.ipmanager.IPPluginView.<init> / Number of listeners = 4
2019-06-21 18:52:07,758 [INFO] PluginManage:342 - Loaded plugin ipmanager (category:base,tabindex:5)
2019-06-21 18:52:07,758 [INFO] PluginManage:292 - Check plugin pinoutandconfiguration
2019-06-21 18:52:07,759 [DEBUG] PluginManage:324 - Loading plugin pinoutandconfiguration ...
2019-06-21 18:52:07,777 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.pinoutconfig.engine.UndoRedoManager@2ac0cb64 by com.st.microxplorer.plugins.pinoutconfig.engine.UndoRedoManager.<init> / Number of listeners = 5
2019-06-21 18:52:07,777 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.pinoutandconfiguration.PinoutAndConfigurationView@7be3a837 by com.st.microxplorer.plugins.pinoutandconfiguration.PinoutAndConfigurationView.<init> / Number of listeners = 6
2019-06-21 18:52:07,777 [INFO] PluginManage:342 - Loaded plugin pinoutandconfiguration (category:base,tabindex:1)
2019-06-21 18:52:07,778 [INFO] PluginManage:292 - Check plugin pinoutconfig
2019-06-21 18:52:07,778 [DEBUG] PluginManage:324 - Loading plugin pinoutconfig ...
2019-06-21 18:52:07,810 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.pinoutconfig.PinoutConfigView@49c72fb7 by com.st.microxplorer.plugins.pinoutconfig.PinoutConfigView.<init> / Number of listeners = 7
2019-06-21 18:52:07,811 [DEBUG] ToolPreferences:49 - key=Pinout.KeepUserPlacement, def=false, readString=false
2019-06-21 18:52:07,812 [DEBUG] ToolPreferences:42 - key=Pinout.KeepUserPlacement, value=false
2019-06-21 18:52:07,813 [DEBUG] MXPropertyChangeSupport:62 - Start MXSystem Refreshing firePropertyChange: EventMcuChangeKeepUser dont care
2019-06-21 18:52:07,813 [DEBUG] Mcu:1337 - InternalPropertyChange: EventMcuChangeKeepUser  dont care
2019-06-21 18:52:07,813 [DEBUG] MXPropertyChangeSupport:66 - End MXSystem Refreshing firePropertyChange: EventMcuChangeKeepUser dont care
2019-06-21 18:52:07,814 [DEBUG] MXPropertyChangeSupport:62 - Start MXSystem Refreshing firePropertyChange: EventMcuChangeKeepUser 
2019-06-21 18:52:07,814 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMcuChangeKeepUser
2019-06-21 18:52:07,814 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMcuChangeKeepUser
2019-06-21 18:52:07,816 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMcuChangeKeepUser
2019-06-21 18:52:07,816 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMcuChangeKeepUser
2019-06-21 18:52:07,817 [DEBUG] MXPropertyChangeSupport:66 - End MXSystem Refreshing firePropertyChange: EventMcuChangeKeepUser 
2019-06-21 18:52:07,817 [INFO] PluginManage:342 - Loaded plugin pinoutconfig (category:base,tabindex:0)
2019-06-21 18:52:07,817 [INFO] PluginManage:292 - Check plugin power
2019-06-21 18:52:07,818 [DEBUG] PluginManage:324 - Loading plugin power ...
2019-06-21 18:52:07,827 [INFO] PluginManage:342 - Loaded plugin power (category:power,tabindex:4)
2019-06-21 18:52:07,828 [INFO] PluginManage:292 - Check plugin projectmanager
2019-06-21 18:52:07,828 [DEBUG] PluginManage:324 - Loading plugin projectmanager ...
2019-06-21 18:52:07,849 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.projectmanager.ProjectManagerView@23a78d2e by com.st.microxplorer.plugins.projectmanager.ProjectManagerView.<init> / Number of listeners = 8
2019-06-21 18:52:07,850 [INFO] PluginManage:342 - Loaded plugin projectmanager (category:projectmanager,tabindex:3)
2019-06-21 18:52:07,850 [INFO] PluginManage:292 - Check plugin thirdparty
2019-06-21 18:52:07,851 [DEBUG] PluginManage:324 - Loading plugin thirdparty ...
2019-06-21 18:52:07,907 [INFO] ThirdPartyDb:293 - Open Third Party DataBase File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/thirdparty/db/thirdparties_db.xml) : 25 ms. number of Sw pack : 5
2019-06-21 18:52:07,920 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.thirdparty.ThirdParty@1299fed3 by com.st.microxplorer.plugins.thirdparty.ThirdParty.<init> / Number of listeners = 9
2019-06-21 18:52:07,922 [INFO] PluginManage:342 - Loaded plugin thirdparty (category:base,tabindex:-1)
2019-06-21 18:52:07,923 [DEBUG] IntegrityCheckThread:53 - Start integrity checks thread
2019-06-21 18:52:07,923 [INFO] PluginManage:292 - Check plugin tools
2019-06-21 18:52:07,924 [DEBUG] IntegrityCheckThread:258 - Updater plugin not ready yet waiting... 0
2019-06-21 18:52:07,924 [DEBUG] PluginManage:324 - Loading plugin tools ...
2019-06-21 18:52:07,928 [INFO] PluginManage:342 - Loaded plugin tools (category:base,tabindex:7)
2019-06-21 18:52:07,928 [INFO] PluginManage:292 - Check plugin updater
2019-06-21 18:52:07,929 [DEBUG] PluginManage:324 - Loading plugin updater ...
2019-06-21 18:52:07,939 [DEBUG] Updater:96 - Start updater initialization phase1
2019-06-21 18:52:07,959 [DEBUG] Updater:653 - applicationType: CUBEIDEPLUGIN
2019-06-21 18:52:07,960 [DEBUG] Updater:105 - End updater initialization phase1
2019-06-21 18:52:07,960 [INFO] PluginManage:342 - Loaded plugin updater (category:base,tabindex:12)
2019-06-21 18:52:07,961 [INFO] PluginManage:265 - PluginManage : Loaded plugins [12]
2019-06-21 18:52:08,144 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.pinoutconfig.guiV5.PeripheralsSelectionPanel@732fa176 by com.st.microxplorer.plugins.pinoutconfig.guiV5.PeripheralsSelectionPanel.<init> / Number of listeners = 10
2019-06-21 18:52:08,287 [DEBUG] ToolPreferences:49 - key=null.displaylabel, def=true, readString=true
2019-06-21 18:52:08,316 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.pinoutconfig.gui.PinOutPanel@4f7da3a2 by com.st.microxplorer.plugins.pinoutconfig.gui.PinOutPanel.<init> / Number of listeners = 11
2019-06-21 18:52:08,321 [INFO] PinOutPanel:1361 - setPackage(No Configuration,No Configuration)
2019-06-21 18:52:08,359 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.clock.ClockTreeView@48b1b469 by com.st.microxplorer.plugins.clock.ClockTreeView.<init> / Number of listeners = 12
2019-06-21 18:52:08,425 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.power.PowerPluginView@3338d706 by com.st.microxplorer.plugins.power.PowerPluginView.getUI / Number of listeners = 13
2019-06-21 18:52:08,432 [DEBUG] PluginManager:149 - loadIPPluginJar : adc C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\adc.jar
2019-06-21 18:52:08,445 [INFO] PluginManager:200 - loadIPPluginJar : add adc
2019-06-21 18:52:08,446 [DEBUG] PluginManager:149 - loadIPPluginJar : aes C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\aes.jar
2019-06-21 18:52:08,448 [INFO] PluginManager:200 - loadIPPluginJar : add aes
2019-06-21 18:52:08,449 [DEBUG] PluginManager:149 - loadIPPluginJar : can C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\can.jar
2019-06-21 18:52:08,452 [INFO] PluginManager:200 - loadIPPluginJar : add can
2019-06-21 18:52:08,453 [DEBUG] PluginManager:149 - loadIPPluginJar : comp C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\comp.jar
2019-06-21 18:52:08,456 [INFO] PluginManager:200 - loadIPPluginJar : add comp
2019-06-21 18:52:08,456 [DEBUG] PluginManager:149 - loadIPPluginJar : cryp C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\cryp.jar
2019-06-21 18:52:08,460 [INFO] PluginManager:200 - loadIPPluginJar : add cryp
2019-06-21 18:52:08,461 [DEBUG] PluginManager:149 - loadIPPluginJar : dfsdm C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\dfsdm.jar
2019-06-21 18:52:08,464 [INFO] PluginManager:200 - loadIPPluginJar : add dfsdm
2019-06-21 18:52:08,465 [DEBUG] PluginManager:149 - loadIPPluginJar : dma C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\dma.jar
2019-06-21 18:52:08,471 [INFO] PluginManager:200 - loadIPPluginJar : add dma
2019-06-21 18:52:08,472 [DEBUG] PluginManager:149 - loadIPPluginJar : fatfs C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\fatfs.jar
2019-06-21 18:52:08,473 [INFO] PluginManager:200 - loadIPPluginJar : add fatfs
2019-06-21 18:52:08,474 [DEBUG] PluginManager:149 - loadIPPluginJar : fmc C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\fmc.jar
2019-06-21 18:52:08,479 [INFO] PluginManager:200 - loadIPPluginJar : add fmc
2019-06-21 18:52:08,480 [DEBUG] PluginManager:149 - loadIPPluginJar : freertos C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\freertos.jar
2019-06-21 18:52:08,486 [DEBUG] FreeRTOS:95 - FreeRTOS constructor
2019-06-21 18:52:08,486 [INFO] PluginManager:200 - loadIPPluginJar : add freertos
2019-06-21 18:52:08,487 [DEBUG] PluginManager:149 - loadIPPluginJar : genericplugin C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\genericplugin.jar
2019-06-21 18:52:08,489 [INFO] PluginManager:200 - loadIPPluginJar : add genericplugin
2019-06-21 18:52:08,489 [DEBUG] PluginManager:149 - loadIPPluginJar : gfxmmu C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\gfxmmu.jar
2019-06-21 18:52:08,491 [INFO] PluginManager:200 - loadIPPluginJar : add gfxmmu
2019-06-21 18:52:08,492 [DEBUG] PluginManager:149 - loadIPPluginJar : gfxsimulator C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\gfxsimulator.jar
2019-06-21 18:52:08,495 [INFO] PluginManager:200 - loadIPPluginJar : add gfxsimulator
2019-06-21 18:52:08,495 [DEBUG] PluginManager:149 - loadIPPluginJar : gic C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\gic.jar
2019-06-21 18:52:08,504 [INFO] PluginManager:200 - loadIPPluginJar : add gic
2019-06-21 18:52:08,504 [DEBUG] PluginManager:149 - loadIPPluginJar : gpio C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\gpio.jar
2019-06-21 18:52:08,509 [INFO] PluginManager:200 - loadIPPluginJar : add gpio
2019-06-21 18:52:08,510 [DEBUG] PluginManager:149 - loadIPPluginJar : hash C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\hash.jar
2019-06-21 18:52:08,513 [INFO] PluginManager:200 - loadIPPluginJar : add hash
2019-06-21 18:52:08,514 [DEBUG] PluginManager:149 - loadIPPluginJar : i2c C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\i2c.jar
2019-06-21 18:52:08,518 [INFO] PluginManager:200 - loadIPPluginJar : add i2c
2019-06-21 18:52:08,519 [DEBUG] PluginManager:149 - loadIPPluginJar : i2s C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\i2s.jar
2019-06-21 18:52:08,523 [INFO] PluginManager:200 - loadIPPluginJar : add i2s
2019-06-21 18:52:08,523 [DEBUG] PluginManager:149 - loadIPPluginJar : ipddr C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\ipddr.jar
2019-06-21 18:52:08,529 [INFO] PluginManager:200 - loadIPPluginJar : add ipddr
2019-06-21 18:52:08,529 [DEBUG] PluginManager:149 - loadIPPluginJar : ltdc C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\ltdc.jar
2019-06-21 18:52:08,531 [INFO] PluginManager:200 - loadIPPluginJar : add ltdc
2019-06-21 18:52:08,532 [DEBUG] PluginManager:149 - loadIPPluginJar : mdma C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\mdma.jar
2019-06-21 18:52:08,537 [INFO] PluginManager:200 - loadIPPluginJar : add mdma
2019-06-21 18:52:08,538 [DEBUG] PluginManager:149 - loadIPPluginJar : nvic C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\nvic.jar
2019-06-21 18:52:08,544 [INFO] PluginManager:200 - loadIPPluginJar : add nvic
2019-06-21 18:52:08,545 [DEBUG] PluginManager:149 - loadIPPluginJar : opamp C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\opamp.jar
2019-06-21 18:52:08,548 [INFO] PluginManager:200 - loadIPPluginJar : add opamp
2019-06-21 18:52:08,548 [DEBUG] PluginManager:149 - loadIPPluginJar : pdm2pcm C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\pdm2pcm.jar
2019-06-21 18:52:08,552 [INFO] PluginManager:200 - loadIPPluginJar : add pdm2pcm
2019-06-21 18:52:08,553 [DEBUG] PluginManager:149 - loadIPPluginJar : plateformsettings C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\plateformsettings.jar
2019-06-21 18:52:08,563 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ip.plateformsettings.PlateformSettings@1315d910 by com.st.microxplorer.plugins.ip.plateformsettings.PlateformSettings.<init> / Number of listeners = 14
2019-06-21 18:52:08,565 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ip.plateformsettings.model.BspModel@1eaf4e77 by com.st.microxplorer.plugins.ip.plateformsettings.model.BspModel.<init> / Number of listeners = 15
2019-06-21 18:52:08,568 [INFO] PluginManager:200 - loadIPPluginJar : add plateformsettings
2019-06-21 18:52:08,568 [DEBUG] PluginManager:149 - loadIPPluginJar : quadspi C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\quadspi.jar
2019-06-21 18:52:08,571 [INFO] PluginManager:200 - loadIPPluginJar : add quadspi
2019-06-21 18:52:08,572 [DEBUG] PluginManager:149 - loadIPPluginJar : resmgrutility C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\resmgrutility.jar
2019-06-21 18:52:08,577 [INFO] PluginManager:200 - loadIPPluginJar : add resmgrutility
2019-06-21 18:52:08,577 [DEBUG] PluginManager:149 - loadIPPluginJar : sai C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\sai.jar
2019-06-21 18:52:08,581 [INFO] PluginManager:200 - loadIPPluginJar : add sai
2019-06-21 18:52:08,581 [DEBUG] PluginManager:149 - loadIPPluginJar : spi C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\spi.jar
2019-06-21 18:52:08,585 [INFO] PluginManager:200 - loadIPPluginJar : add spi
2019-06-21 18:52:08,585 [DEBUG] PluginManager:149 - loadIPPluginJar : stm32_wpan C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\stm32_wpan.jar
2019-06-21 18:52:08,588 [INFO] PluginManager:200 - loadIPPluginJar : add stm32_wpan
2019-06-21 18:52:08,588 [DEBUG] PluginManager:149 - loadIPPluginJar : tim C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\tim.jar
2019-06-21 18:52:08,590 [INFO] PluginManager:200 - loadIPPluginJar : add tim
2019-06-21 18:52:08,591 [DEBUG] PluginManager:149 - loadIPPluginJar : touchsensing C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\touchsensing.jar
2019-06-21 18:52:08,595 [INFO] PluginManager:200 - loadIPPluginJar : add touchsensing
2019-06-21 18:52:08,596 [DEBUG] PluginManager:149 - loadIPPluginJar : tracer_emb C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\tracer_emb.jar
2019-06-21 18:52:08,598 [INFO] PluginManager:200 - loadIPPluginJar : add tracer_emb
2019-06-21 18:52:08,599 [DEBUG] PluginManager:149 - loadIPPluginJar : ts C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\ts.jar
2019-06-21 18:52:08,601 [INFO] PluginManager:200 - loadIPPluginJar : add ts
2019-06-21 18:52:08,602 [DEBUG] PluginManager:149 - loadIPPluginJar : tsc C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\tsc.jar
2019-06-21 18:52:08,604 [INFO] PluginManager:200 - loadIPPluginJar : add tsc
2019-06-21 18:52:08,604 [DEBUG] PluginManager:149 - loadIPPluginJar : ucpd C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\ucpd.jar
2019-06-21 18:52:08,607 [INFO] PluginManager:200 - loadIPPluginJar : add ucpd
2019-06-21 18:52:08,607 [DEBUG] PluginManager:149 - loadIPPluginJar : usart C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\plugins\ip\usart.jar
2019-06-21 18:52:08,611 [INFO] PluginManager:200 - loadIPPluginJar : add usart
2019-06-21 18:52:08,635 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ipmanager.gui.BlockDiagram@52cda4bd by com.st.microxplorer.plugins.ipmanager.gui.BlockDiagram.<init> / Number of listeners = 16
2019-06-21 18:52:10,924 [DEBUG] IntegrityCheckThread:258 - Updater plugin not ready yet waiting... 1
2019-06-21 18:52:12,363 [DEBUG] OsUtils:27 - [DDR PANEL] Operating System: null
2019-06-21 18:52:12,364 [DEBUG] BoardConnectionPanel:219 - [DDR PANEL] operating system: Windows
2019-06-21 18:52:12,364 [DEBUG] BoardConnectionPanel:241 - [DDR PANEL] Available data streams declared on the API :
2019-06-21 18:52:12,788 [DEBUG] DdrGenericParameters:52 - [DDR IP] There is no valid DDR configuration, reports a default (0.0.0) CubeProgrammer version to 'ddr' package
2019-06-21 18:52:12,852 [DEBUG] BoardConnectionPanel:2892 - [DDR PANEL] STM32CubeMX has not found any STM32CubeProgrammer version
2019-06-21 18:52:13,012 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ddr.MainDdr@8b93c88 by com.st.microxplorer.plugins.ddr.MainDdr.<init> / Number of listeners = 17
2019-06-21 18:52:13,012 [DEBUG] Updater:835 - Start updater initialization phase2
2019-06-21 18:52:13,013 [DEBUG] Updater:902 - waiting prerequisites to perform initialization phase2
2019-06-21 18:52:13,028 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : minimumSize
2019-06-21 18:52:13,030 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : minimumSize
2019-06-21 18:52:13,031 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : border
2019-06-21 18:52:13,031 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : border
2019-06-21 18:52:13,172 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : minimumSize
2019-06-21 18:52:13,173 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : minimumSize
2019-06-21 18:52:13,244 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.pinoutandconfiguration.PinoutAndConfigurationView@7be3a837 by com.st.microxplorer.plugins.pinoutandconfiguration.PinoutAndConfigurationView.getUI / Number of listeners = 17
2019-06-21 18:52:13,244 [DEBUG] PinoutAndConfigurationView:578 - sp_PinoutAndSystemViews - pce.getPropertyName() : dividerLocation1.0
2019-06-21 18:52:13,316 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.filemanager.FileManagerView@146b4c6c by com.st.microxplorer.plugins.filemanager.FileManagerView.addToMenuBar / Number of listeners = 18
2019-06-21 18:52:13,518 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:13,518 [FATAL] Updater:277 - Updater called before beeing initialized
2019-06-21 18:52:13,519 [DEBUG] FileManagerView:196 - iTypeTask=17, clParamTask=
2019-06-21 18:52:13,520 [DEBUG] ToolPreferences:49 - key=FileManager.MostRecentFiles, def=, readString=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Gif-Player-Badge\Gif-Player-Badge.ioc
2019-06-21 18:52:13,523 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.maingui.New_gui_LeftPanel@1ec96512 by com.st.microxplorer.maingui.New_gui_LeftPanel.<init> / Number of listeners = 18
2019-06-21 18:52:13,739 [DEBUG] MxSystem:282 - Added com.st.microxplorer.maingui.New_gui_LeftPanel@1ec96512 by com.st.microxplorer.maingui.NewUIStartupPanel.InitStartupPanel / Number of listeners = 19
2019-06-21 18:52:13,925 [DEBUG] IntegrityCheckThread:210 - get thirdparty list from updater false
2019-06-21 18:52:13,925 [DEBUG] Updater:271 - Updater getSpecificTask: 22
2019-06-21 18:52:13,925 [FATAL] Updater:277 - Updater called before beeing initialized
2019-06-21 18:52:13,926 [ERROR] IntegrityCheckThread:227 - Cannot obtain thirdParties list 21
2019-06-21 18:52:13,926 [ERROR] IntegrityCheckThread:96 - Unexpected exception IntegrityCheckThread Thread: Updater error
2019-06-21 18:52:13,928 [INFO] ThirdPartyDb:263 - Close Third Party DataBase File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/thirdparty/db/thirdparties_db.xml)
2019-06-21 18:52:14,612 [DEBUG] McuDetailPanel:175 - Proxy not ready, set default advertising image
2019-06-21 18:52:14,710 [DEBUG] McuDetailPanel:175 - Proxy not ready, set default advertising image
2019-06-21 18:52:14,820 [DEBUG] MxSystem:282 - Added com.st.microxplorer.maingui.MainPanel@33f059ad by com.st.microxplorer.maingui.MainPanel.initialization / Number of listeners = 20
2019-06-21 18:52:14,821 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemCloseProject Don't care
2019-06-21 18:52:14,821 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateRccFrequencies RCC
2019-06-21 18:52:14,821 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,821 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,822 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,822 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,822 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,823 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,823 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,824 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,824 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,824 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,825 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,825 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:52:14,825 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateRccFrequencies RCC
2019-06-21 18:52:14,825 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemCloseProject
2019-06-21 18:52:14,826 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement@6c7bc8ac by com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement.deactivateDiagram / Number of listeners = 20
2019-06-21 18:52:14,828 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemCloseProject
2019-06-21 18:52:14,828 [DEBUG] Updater:271 - Updater getSpecificTask: 7
2019-06-21 18:52:14,829 [FATAL] Updater:277 - Updater called before beeing initialized
2019-06-21 18:52:14,829 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemCloseProject
2019-06-21 18:52:14,830 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiStatus NoIPSelected
2019-06-21 18:52:14,830 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiStatus
2019-06-21 18:52:14,830 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiStatus
2019-06-21 18:52:14,831 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiStatus
2019-06-21 18:52:14,831 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiStatus
2019-06-21 18:52:14,831 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiStatus
2019-06-21 18:52:14,832 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiStatus
2019-06-21 18:52:14,832 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiStatus
2019-06-21 18:52:14,832 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiStatus
2019-06-21 18:52:14,832 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiStatus
2019-06-21 18:52:14,835 [DEBUG] PinoutAndConfigurationView:300 - sp_ModeConf_PinoutSystem - pce.getPropertyName() : dividerLocation0.0
2019-06-21 18:52:14,836 [DEBUG] PinoutAndConfigurationView:717 - sp_ModeConfig - pce.getPropertyName() : dividerLocation0.0
2019-06-21 18:52:14,836 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiStatus
2019-06-21 18:52:14,836 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiStatus
2019-06-21 18:52:14,837 [DEBUG] PinoutAndConfigurationView:1716 - Bad request to set divider to -0.6666666666666666 -> forced to 0
2019-06-21 18:52:14,837 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiStatus
2019-06-21 18:52:14,837 [DEBUG] PinoutAndConfigurationView:717 - sp_ModeConfig - pce.getPropertyName() : dividerLocation1.0
2019-06-21 18:52:14,838 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiStatus NoIPSelected
2019-06-21 18:52:14,838 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemCloseProject
2019-06-21 18:52:14,839 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemCloseProject
2019-06-21 18:52:14,839 [INFO] PinOutPanel:1361 - setPackage(No Configuration,No Configuration)
2019-06-21 18:52:14,839 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemCloseProject
2019-06-21 18:52:14,839 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemCloseProject
2019-06-21 18:52:14,840 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemCloseProject
2019-06-21 18:52:14,840 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemCloseProject
2019-06-21 18:52:14,840 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemCloseProject
2019-06-21 18:52:14,841 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemCloseProject
2019-06-21 18:52:14,841 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:14,841 [FATAL] Updater:277 - Updater called before beeing initialized
2019-06-21 18:52:14,842 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:52:14,842 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemCloseProject
2019-06-21 18:52:14,843 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemCloseProject Don't care
2019-06-21 18:52:14,843 [DEBUG] MxSystem:456 - MXSystem listeners Count: 20
2019-06-21 18:52:14,843 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.MenuBar@5006a697
2019-06-21 18:52:14,843 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.McuScanResultList@41d8ac75
2019-06-21 18:52:14,844 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.clock.ClockConfigurationView@22b4ad0c
2019-06-21 18:52:14,844 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ipmanager.IPPluginView@29b2a94c
2019-06-21 18:52:14,844 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.engine.UndoRedoManager@2ac0cb64
2019-06-21 18:52:14,844 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.PinoutConfigView@49c72fb7
2019-06-21 18:52:14,845 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.projectmanager.ProjectManagerView@23a78d2e
2019-06-21 18:52:14,845 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.thirdparty.ThirdParty@1299fed3
2019-06-21 18:52:14,845 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.guiV5.PeripheralsSelectionPanel@732fa176
2019-06-21 18:52:14,845 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.gui.PinOutPanel@4f7da3a2
2019-06-21 18:52:14,845 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.clock.ClockTreeView@48b1b469
2019-06-21 18:52:14,846 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.power.PowerPluginView@3338d706
2019-06-21 18:52:14,846 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ip.plateformsettings.PlateformSettings@1315d910
2019-06-21 18:52:14,846 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ip.plateformsettings.model.BspModel@1eaf4e77
2019-06-21 18:52:14,846 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ipmanager.gui.BlockDiagram@52cda4bd
2019-06-21 18:52:14,846 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ddr.MainDdr@8b93c88
2019-06-21 18:52:14,847 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutandconfiguration.PinoutAndConfigurationView@7be3a837
2019-06-21 18:52:14,847 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.filemanager.FileManagerView@146b4c6c
2019-06-21 18:52:14,847 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.New_gui_LeftPanel@1ec96512
2019-06-21 18:52:14,847 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.MainPanel@33f059ad
2019-06-21 18:52:14,907 [DEBUG] Updater:835 - Start updater initialization phase2
2019-06-21 18:52:14,908 [DEBUG] Updater:855 - Debug mode is: false
2019-06-21 18:52:14,908 [INFO] Updater:860 - Updater Version found : 5.2.0
2019-06-21 18:52:14,909 [DEBUG] Updater:861 - Updater Type found : 5
2019-06-21 18:52:14,909 [DEBUG] Updater:862 - Updater PackType found : MX
2019-06-21 18:52:14,943 [INFO] ApplicationProperties:181 - Using Application install path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831
2019-06-21 18:52:14,944 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:52:14,944 [DEBUG] MainUpdater:3473 - getUpdaterPath=(C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/)
2019-06-21 18:52:14,944 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:52:14,944 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 0
2019-06-21 18:52:14,948 [DEBUG] ParameterSetting:147 - Reload parameters ini : 1 ms.
2019-06-21 18:52:14,955 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 3 ms.
2019-06-21 18:52:15,000 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:52:15,057 [DEBUG] MainUpdater:2006 - Active connection check in progress...
2019-06-21 18:52:15,057 [DEBUG] MainUpdater:2027 - Last quickCheck was done too recently..
2019-06-21 18:52:15,057 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:52:15,058 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:52:15,058 [INFO] MainUpdater:2032 - connection check result : 10
2019-06-21 18:52:15,058 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 18:52:15,061 [INFO] MainUpdater:223 - Updater Check For Update Now.
2019-06-21 18:52:15,061 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 18:52:15,061 [INFO] MicroXplorer:401 - Change Database Version : DB.5.0.20
2019-06-21 18:52:15,062 [DEBUG] Updater:900 - End updater initialization phase2
2019-06-21 18:52:15,090 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 18:52:15,090 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 18:52:15,091 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 18:52:15,091 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 18:52:15,091 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 18:52:15,091 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 18:52:15,108 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 12 ms.
2019-06-21 18:52:15,111 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 18:52:15,125 [DEBUG] Updater:271 - Updater getSpecificTask: 31
2019-06-21 18:52:15,125 [DEBUG] MainUpdater:2006 - Active connection check in progress...
2019-06-21 18:52:15,129 [DEBUG] MainUpdater:2027 - Last quickCheck was done too recently..
2019-06-21 18:52:15,129 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 68 ms.
2019-06-21 18:52:15,129 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:52:15,129 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 18:52:15,129 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:52:15,130 [INFO] MainUpdater:2032 - connection check result : 10
2019-06-21 18:52:15,130 [DEBUG] MicroXplorer:577 - Successfull proxy connection.
2019-06-21 18:52:15,337 [INFO] McuFinderGlobals:40 - Set McuFinder mode to 2 (CubeIDE integrated)
2019-06-21 18:52:15,350 [DEBUG] Updater:271 - Updater getSpecificTask: 16
2019-06-21 18:52:15,351 [DEBUG] MultiScanPanel:179 - Creating MultiScanPanel autoRefreshType=1
2019-06-21 18:52:15,351 [DEBUG] MultiScanPanel:186 - Check proxy status ongoing.
2019-06-21 18:52:15,351 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 18:52:15,351 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:52:15,351 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:52:15,353 [DEBUG] McuExtendedFiltersManager:95 - Remove all MCU extended filters
2019-06-21 18:52:15,355 [INFO] FinderPluginLoader:85 - Searching for filters in installed packs
2019-06-21 18:52:15,356 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:15,356 [DEBUG] DbMcus:116 - create instance com.st.microxplorer.mcufinder.db.DbMcus@792d059d
2019-06-21 18:52:15,356 [DEBUG] DbMcus:116 - create instance com.st.microxplorer.mcufinder.db.DbMcusXml@13db4596
2019-06-21 18:52:15,357 [DEBUG] DbMcusXml:47 - create instance com.st.microxplorer.mcufinder.db.DbMcusXml@13db4596
2019-06-21 18:52:15,357 [INFO] DbMcusXml:106 - Load MCU database from C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\/mcu/families.xml
2019-06-21 18:52:15,717 [DEBUG] DbMcusXml:166 - MCU STM32F072RBIx is not supported by CubeMX
2019-06-21 18:52:15,799 [DEBUG] DbMcusXml:166 - MCU STM32F303K6Ux is not supported by CubeMX
2019-06-21 18:52:15,800 [DEBUG] DbMcusXml:166 - MCU STM32F303K8Ux is not supported by CubeMX
2019-06-21 18:52:15,805 [DEBUG] DbMcusXml:166 - MCU STM32F401CBYx is not supported by CubeMX
2019-06-21 18:52:15,814 [DEBUG] DbMcusXml:166 - MCU STM32F410C8Tx is not supported by CubeMX
2019-06-21 18:52:15,815 [DEBUG] DbMcusXml:166 - MCU STM32F410R8Ix is not supported by CubeMX
2019-06-21 18:52:15,819 [DEBUG] DbMcusXml:166 - MCU STM32F411VCHx is not supported by CubeMX
2019-06-21 18:52:15,821 [DEBUG] DbMcusXml:166 - MCU STM32F412REYxP is not supported by CubeMX
2019-06-21 18:52:15,850 [DEBUG] DbMcusXml:166 - MCU STM32F469AEYx is not supported by CubeMX
2019-06-21 18:52:15,852 [DEBUG] DbMcusXml:166 - MCU STM32F469IETx is not supported by CubeMX
2019-06-21 18:52:15,873 [DEBUG] DbMcusXml:166 - MCU STM32F479AGYx is not supported by CubeMX
2019-06-21 18:52:15,876 [DEBUG] DbMcusXml:166 - MCU STM32F479IIHx is not supported by CubeMX
2019-06-21 18:52:15,876 [DEBUG] DbMcusXml:166 - MCU STM32F479IGTx is not supported by CubeMX
2019-06-21 18:52:15,885 [DEBUG] DbMcusXml:166 - MCU STM32F723VCYx is not supported by CubeMX
2019-06-21 18:52:15,909 [DEBUG] DbMcusXml:166 - MCU STM32F768AIYx is not supported by CubeMX
2019-06-21 18:52:15,909 [DEBUG] DbMcusXml:166 - MCU STM32F769AGYx is not supported by CubeMX
2019-06-21 18:52:15,967 [DEBUG] DbMcusXml:166 - MCU STM32L011K3Tx is not supported by CubeMX
2019-06-21 18:52:15,968 [DEBUG] DbMcusXml:166 - MCU STM32L021F4Px is not supported by CubeMX
2019-06-21 18:52:15,969 [DEBUG] DbMcusXml:166 - MCU STM32L021K4Ux is not supported by CubeMX
2019-06-21 18:52:15,970 [DEBUG] DbMcusXml:166 - MCU STM32L031K4Tx is not supported by CubeMX
2019-06-21 18:52:15,970 [DEBUG] DbMcusXml:166 - MCU STM32L041C4Tx is not supported by CubeMX
2019-06-21 18:52:15,972 [DEBUG] DbMcusXml:166 - MCU STM32L071CBYx is not supported by CubeMX
2019-06-21 18:52:15,984 [DEBUG] DbMcusXml:166 - MCU STM32L071VBIx is not supported by CubeMX
2019-06-21 18:52:15,984 [DEBUG] DbMcusXml:166 - MCU STM32L071VZIx is not supported by CubeMX
2019-06-21 18:52:15,985 [DEBUG] DbMcusXml:166 - MCU STM32L071V8Ix is not supported by CubeMX
2019-06-21 18:52:15,988 [DEBUG] DbMcusXml:166 - MCU STM32L072KBTx is not supported by CubeMX
2019-06-21 18:52:15,988 [DEBUG] DbMcusXml:166 - MCU STM32L072RZHx is not supported by CubeMX
2019-06-21 18:52:15,989 [DEBUG] DbMcusXml:166 - MCU STM32L072VBIx is not supported by CubeMX
2019-06-21 18:52:15,990 [DEBUG] DbMcusXml:166 - MCU STM32L082KBTx is not supported by CubeMX
2019-06-21 18:52:15,991 [DEBUG] DbMcusXml:166 - MCU STM32L082KBUx is not supported by CubeMX
2019-06-21 18:52:15,993 [DEBUG] DbMcusXml:166 - MCU STM32L073VBIx is not supported by CubeMX
2019-06-21 18:52:15,994 [DEBUG] DbMcusXml:166 - MCU STM32L073V8Ix is not supported by CubeMX
2019-06-21 18:52:15,995 [DEBUG] DbMcusXml:166 - MCU STM32L083RBTx is not supported by CubeMX
2019-06-21 18:52:15,995 [DEBUG] DbMcusXml:166 - MCU STM32L083VBIx is not supported by CubeMX
2019-06-21 18:52:15,996 [DEBUG] DbMcusXml:166 - MCU STM32L083V8Ix is not supported by CubeMX
2019-06-21 18:52:16,009 [DEBUG] DbMcusXml:166 - MCU STM32L162VDYxX is not supported by CubeMX
2019-06-21 18:52:16,013 [DEBUG] DbMcusXml:166 - MCU STM32L451RCYx is not supported by CubeMX
2019-06-21 18:52:16,020 [DEBUG] DbMcusXml:166 - MCU STM32L452RCYx is not supported by CubeMX
2019-06-21 18:52:16,025 [DEBUG] DbMcusXml:166 - MCU STM32L485JCYx is not supported by CubeMX
2019-06-21 18:52:16,026 [DEBUG] DbMcusXml:166 - MCU STM32L485JEYx is not supported by CubeMX
2019-06-21 18:52:16,030 [DEBUG] DbMcusXml:166 - MCU STM32L496VEYx is not supported by CubeMX
2019-06-21 18:52:16,042 [DEBUG] DbMcus:116 - create instance com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0
2019-06-21 18:52:16,043 [DEBUG] DbMcusJson:38 - create instance com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0
2019-06-21 18:52:16,044 [DEBUG] DbMcusJson:77 - Get MCUs data from C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/mcusFeaturesAndDescription.json
2019-06-21 18:52:16,704 [INFO] DbMcusJson:87 - JSON generation date=Fri Jun 21 11:28:09 BST 2019 (1561112889)
2019-06-21 18:52:16,704 [DEBUG] DbMcusJson:108 - Fill MCUs features from JSON (1104 items)
2019-06-21 18:52:18,400 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F072RBIx
2019-06-21 18:52:18,414 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F334K4Ux
2019-06-21 18:52:18,415 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F334K6Ux
2019-06-21 18:52:18,418 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F303K6Ux
2019-06-21 18:52:18,418 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F303K8Ux
2019-06-21 18:52:18,420 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F401CBYx
2019-06-21 18:52:18,422 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F401CEYx
2019-06-21 18:52:18,426 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F410C8Tx
2019-06-21 18:52:18,427 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F410R8Ix
2019-06-21 18:52:18,428 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F411VCHx
2019-06-21 18:52:18,430 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F412REYxP
2019-06-21 18:52:18,435 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F469AEYx
2019-06-21 18:52:18,436 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F469IETx
2019-06-21 18:52:18,437 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F479AGYx
2019-06-21 18:52:18,438 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F479IGTx
2019-06-21 18:52:18,440 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F723VCYx
2019-06-21 18:52:18,446 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F768AIYx
2019-06-21 18:52:18,446 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32F769AGYx
2019-06-21 18:52:18,448 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G030C6Tx
2019-06-21 18:52:18,448 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G030C8Tx
2019-06-21 18:52:18,449 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G030F6Px
2019-06-21 18:52:18,450 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G030J6Mx
2019-06-21 18:52:18,450 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G030K6Tx
2019-06-21 18:52:18,450 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G030K8Tx
2019-06-21 18:52:18,451 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031C4Tx
2019-06-21 18:52:18,452 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031C6Tx
2019-06-21 18:52:18,452 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031C8Tx
2019-06-21 18:52:18,453 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031C4Ux
2019-06-21 18:52:18,453 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031C6Ux
2019-06-21 18:52:18,454 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031C8Ux
2019-06-21 18:52:18,454 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031F4Px
2019-06-21 18:52:18,455 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031F6Px
2019-06-21 18:52:18,455 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031F8Px
2019-06-21 18:52:18,456 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031G4Ux
2019-06-21 18:52:18,456 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031G6Ux
2019-06-21 18:52:18,473 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031G8Ux
2019-06-21 18:52:18,474 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031J4Mx
2019-06-21 18:52:18,474 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031J6Mx
2019-06-21 18:52:18,475 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031K4Tx
2019-06-21 18:52:18,476 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031K6Tx
2019-06-21 18:52:18,476 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031K8Tx
2019-06-21 18:52:18,477 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031K4Ux
2019-06-21 18:52:18,478 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031K6Ux
2019-06-21 18:52:18,478 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031K8Ux
2019-06-21 18:52:18,479 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G031Y8Yx
2019-06-21 18:52:18,479 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041C6Tx
2019-06-21 18:52:18,480 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041C8Tx
2019-06-21 18:52:18,480 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041C6Ux
2019-06-21 18:52:18,481 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041C8Ux
2019-06-21 18:52:18,482 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041F6Px
2019-06-21 18:52:18,482 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041F8Px
2019-06-21 18:52:18,483 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041G6Ux
2019-06-21 18:52:18,483 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041G8Ux
2019-06-21 18:52:18,484 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041J6Mx
2019-06-21 18:52:18,485 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041K6Tx
2019-06-21 18:52:18,485 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041K8Tx
2019-06-21 18:52:18,486 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041K6Ux
2019-06-21 18:52:18,486 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041K8Ux
2019-06-21 18:52:18,486 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G041Y8Yx
2019-06-21 18:52:18,487 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071C6Tx
2019-06-21 18:52:18,487 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071C6Ux
2019-06-21 18:52:18,487 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071C8Ux
2019-06-21 18:52:18,487 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071G6Ux
2019-06-21 18:52:18,488 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071K6Tx
2019-06-21 18:52:18,488 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071K6Ux
2019-06-21 18:52:18,488 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071K8TxN
2019-06-21 18:52:18,488 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071KBTxN
2019-06-21 18:52:18,488 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071K8UxN
2019-06-21 18:52:18,489 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071R6Tx
2019-06-21 18:52:18,489 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G071RBIx
2019-06-21 18:52:18,489 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G081GBUxN
2019-06-21 18:52:18,490 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G081KBTxN
2019-06-21 18:52:18,490 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G081KBUxN
2019-06-21 18:52:18,490 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G081RBIx
2019-06-21 18:52:18,491 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431C6Ux
2019-06-21 18:52:18,492 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431C8Ux
2019-06-21 18:52:18,494 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431K6Tx
2019-06-21 18:52:18,496 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431K8Ux
2019-06-21 18:52:18,497 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431M6Tx
2019-06-21 18:52:18,498 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431M8Tx
2019-06-21 18:52:18,498 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431MBTx
2019-06-21 18:52:18,499 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431R6Ix
2019-06-21 18:52:18,499 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G431R8Ix
2019-06-21 18:52:18,501 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G441CBYx
2019-06-21 18:52:18,501 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G441RBIx
2019-06-21 18:52:18,502 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471CCTx
2019-06-21 18:52:18,502 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471CETx
2019-06-21 18:52:18,503 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471CCUx
2019-06-21 18:52:18,503 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471CEUx
2019-06-21 18:52:18,504 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471MCTx
2019-06-21 18:52:18,504 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471METx
2019-06-21 18:52:18,505 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471MEYx
2019-06-21 18:52:18,505 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471QCTx
2019-06-21 18:52:18,506 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471QETx
2019-06-21 18:52:18,506 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471RCTx
2019-06-21 18:52:18,507 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471RETx
2019-06-21 18:52:18,507 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471VCHx
2019-06-21 18:52:18,508 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471VEHx
2019-06-21 18:52:18,508 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471VCIx
2019-06-21 18:52:18,509 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471VEIx
2019-06-21 18:52:18,509 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471VCTx
2019-06-21 18:52:18,510 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G471VETx
2019-06-21 18:52:18,511 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32GBK1CBTx
2019-06-21 18:52:18,511 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473CBTx
2019-06-21 18:52:18,512 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473CCTx
2019-06-21 18:52:18,512 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473MBTx
2019-06-21 18:52:18,513 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473MCTx
2019-06-21 18:52:18,514 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473METx
2019-06-21 18:52:18,514 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473MEYx
2019-06-21 18:52:18,516 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473VBHx
2019-06-21 18:52:18,516 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473VEHx
2019-06-21 18:52:18,518 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473VBIx
2019-06-21 18:52:18,519 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G473VEIx
2019-06-21 18:52:18,520 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474CBTx
2019-06-21 18:52:18,520 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474CCTx
2019-06-21 18:52:18,521 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474MBTx
2019-06-21 18:52:18,522 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474MCTx
2019-06-21 18:52:18,522 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474METx
2019-06-21 18:52:18,522 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474MEYx
2019-06-21 18:52:18,523 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474VBHx
2019-06-21 18:52:18,524 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474VCHx
2019-06-21 18:52:18,524 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474VBIx
2019-06-21 18:52:18,525 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G474VCIx
2019-06-21 18:52:18,525 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G484METx
2019-06-21 18:52:18,526 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32G484MEYx
2019-06-21 18:52:18,527 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H742IIKx
2019-06-21 18:52:18,527 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H742IGTx
2019-06-21 18:52:18,528 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H742VGHx
2019-06-21 18:52:18,528 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H742VIHx
2019-06-21 18:52:18,529 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H743IGKx
2019-06-21 18:52:18,530 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H743VGHx
2019-06-21 18:52:18,532 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32H745IGTx
2019-06-21 18:52:18,537 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L011K3Tx
2019-06-21 18:52:18,538 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L021F4Px
2019-06-21 18:52:18,539 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L021K4Ux
2019-06-21 18:52:18,541 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L031K4Tx
2019-06-21 18:52:18,542 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L041C4Tx
2019-06-21 18:52:18,545 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L071VBIx
2019-06-21 18:52:18,546 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L071VZIx
2019-06-21 18:52:18,547 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L071V8Ix
2019-06-21 18:52:18,550 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L072KBTx
2019-06-21 18:52:18,552 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L082KBTx
2019-06-21 18:52:18,554 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L073VBIx
2019-06-21 18:52:18,555 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L073V8Ix
2019-06-21 18:52:18,556 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L083VBIx
2019-06-21 18:52:18,557 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L083V8Ix
2019-06-21 18:52:18,584 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L451RCYx
2019-06-21 18:52:18,587 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L412CBTxP
2019-06-21 18:52:18,587 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L412CBUxP
2019-06-21 18:52:18,591 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L452RCYx
2019-06-21 18:52:18,597 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L485JCYx
2019-06-21 18:52:18,597 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L485JEYx
2019-06-21 18:52:18,600 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L476ZGTxP
2019-06-21 18:52:18,602 [DEBUG] DbMcusXml:372 - MCU from XML not found in JSON: STM32L496VEYx
2019-06-21 18:52:18,637 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32G483CETx
2019-06-21 18:52:18,637 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32G483CEUx
2019-06-21 18:52:18,638 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32G483QETx
2019-06-21 18:52:18,638 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32G483RETx
2019-06-21 18:52:18,639 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32G483VETx
2019-06-21 18:52:18,651 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L051C8Ux
2019-06-21 18:52:18,653 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L071CZUx
2019-06-21 18:52:18,661 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L052C8Ux
2019-06-21 18:52:18,667 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L053C8Ux
2019-06-21 18:52:18,668 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L063C8Ux
2019-06-21 18:52:18,685 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L073CZUx
2019-06-21 18:52:18,699 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L162QCHx
2019-06-21 18:52:18,700 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L162ZCTx
2019-06-21 18:52:18,703 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L471ZEJx
2019-06-21 18:52:18,703 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L471ZGJx
2019-06-21 18:52:18,709 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L476ZGJx
2019-06-21 18:52:18,715 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552CCUx
2019-06-21 18:52:18,715 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552CCTx
2019-06-21 18:52:18,715 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552CEUx
2019-06-21 18:52:18,716 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552CETx
2019-06-21 18:52:18,716 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552MEYx
2019-06-21 18:52:18,716 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552QEIx
2019-06-21 18:52:18,717 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552RCTx
2019-06-21 18:52:18,717 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552RETx
2019-06-21 18:52:18,717 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552VCTx
2019-06-21 18:52:18,718 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552VETx
2019-06-21 18:52:18,718 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552ZCTx
2019-06-21 18:52:18,718 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L552ZETx
2019-06-21 18:52:18,718 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562CETx
2019-06-21 18:52:18,718 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562CEUx
2019-06-21 18:52:18,719 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562MEYx
2019-06-21 18:52:18,719 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562QEIx
2019-06-21 18:52:18,719 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562RETx
2019-06-21 18:52:18,719 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562VETx
2019-06-21 18:52:18,720 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32L562ZETx
2019-06-21 18:52:18,721 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32WB55RCUx
2019-06-21 18:52:18,722 [DEBUG] DbMcusXml:391 - MCU from JSON not found in XML: STM32WB55REUx
2019-06-21 18:52:18,752 [INFO] DbMcus:192 - Found 1486 MCUs (1445 are supported by CubeMX, 1445 are visible in CubeMX)
2019-06-21 18:52:18,753 [INFO] ApiDb:158 - Load user favorites file C:\Users\Afonso Muralha/.stm32cubeide/favorites.mcus.txt: 0 item(s)
2019-06-21 18:52:18,753 [INFO] ApiDb:163 - User favorites MCUs=[]
2019-06-21 18:52:18,754 [INFO] DbMcus:203 - Set 0 / 0 favorites MCUs
2019-06-21 18:52:18,805 [DEBUG] DbMcus:888 - firePropertyChange Reset
2019-06-21 18:52:18,806 [DEBUG] DbMcus:1689 - --> key=BigFamily, value=STM32
2019-06-21 18:52:18,808 [DEBUG] DbMcus:1701 - firePropertyChange BigFamily
2019-06-21 18:52:19,007 [DEBUG] PeriphSelectorTable:328 - all peripherals=61 item(s)
2019-06-21 18:52:19,007 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:20,371 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mculist.hidden, def=null, readString=null
2019-06-21 18:52:20,381 [INFO] DbMcusAds:130 - JSON generation date=Wed Feb 20 16:46:15 GMT 2019 (1550681175)
2019-06-21 18:52:20,382 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:20,383 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:20,383 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 18:52:20,383 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:52:20,383 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:52:20,384 [DEBUG] Updater:271 - Updater getSpecificTask: 12
2019-06-21 18:52:20,384 [DEBUG] MainUpdater:1364 - mainStatus changed to 5
2019-06-21 18:52:20,456 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 18:52:20,458 [DEBUG] LoadUrlFilesThread:274 - Build download list (size=1)
2019-06-21 18:52:20,458 [DEBUG] LoadUrlFilesThread:369 - File already downloaded (no check for newer version) 
2019-06-21 18:52:20,459 [DEBUG] LoadUrlFilesThread:426 - Perform download list (size=1).
2019-06-21 18:52:20,459 [DEBUG] LoadUrlFilesThread:538 - Download not required for : http://stmcufinder.com/wp-content/uploads/ads/PRSTM32MP10219-01-med.jpg
2019-06-21 18:52:20,459 [INFO] LoadUrlFilesThread:147 - End of LoadServerUrlFiles without Thread
2019-06-21 18:52:20,459 [DEBUG] MainUpdater:1715 - loadUrlFile : No Thread End now
2019-06-21 18:52:20,459 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 5
2019-06-21 18:52:20,500 [INFO] McuDetailPanel:180 - Set advertising image to C:/Users/Afonso Muralha/STM32Cube/Repository/\PRSTM32MP10219-01-med.jpg
2019-06-21 18:52:20,506 [DEBUG] ResultTable:426 - column sort order changed
2019-06-21 18:52:21,019 [DEBUG] CtxDoc:155 - titleRef == Graphic Performance Score
2019-06-21 18:52:21,020 [DEBUG] CtxDoc:230 - Issue when opening and reading the contextual documentation XML file!!!
2019-06-21 18:52:21,021 [DEBUG] CtxDoc:237 - - <a href="html#https://st-videos.s3.amazonaws.com/vd_2018_MCD_for_appli_F469_quick.mp4"style="color: #293b6b">Example 1</a><br/>
2019-06-21 18:52:21,021 [DEBUG] CtxDoc:237 - - <a href="html#https://st-videos.s3.amazonaws.com/vd_2018_MCD_for_appli_F746_quick.mp4"style="color: #293b6b">Example 2</a><br/>
2019-06-21 18:52:21,022 [DEBUG] CtxDoc:186 - ctxdocTitle == Graphic Performance Score
2019-06-21 18:52:21,270 [DEBUG] CtxDoc:155 - titleRef == Required Pixel Clock
2019-06-21 18:52:21,271 [DEBUG] CtxDoc:230 - Issue when opening and reading the contextual documentation XML file!!!
2019-06-21 18:52:21,272 [DEBUG] CtxDoc:186 - ctxdocTitle == Required Pixel Clock
2019-06-21 18:52:21,385 [DEBUG] CtxDoc:155 - titleRef == Maximum System Pixel Clock
2019-06-21 18:52:21,386 [DEBUG] CtxDoc:230 - Issue when opening and reading the contextual documentation XML file!!!
2019-06-21 18:52:21,387 [DEBUG] CtxDoc:186 - ctxdocTitle == Maximum System Pixel Clock
2019-06-21 18:52:21,412 [DEBUG] CtxDoc:155 - titleRef == Required Graphic RAM
2019-06-21 18:52:21,413 [DEBUG] CtxDoc:230 - Issue when opening and reading the contextual documentation XML file!!!
2019-06-21 18:52:21,414 [DEBUG] CtxDoc:186 - ctxdocTitle == Required Graphic RAM
2019-06-21 18:52:21,423 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mcupanel.splitloc, def=null, readString=null
2019-06-21 18:52:21,806 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mculist.cols.width, def=null, readString=null
2019-06-21 18:52:21,807 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mcufilters.collapsed, def=null, readString=null
2019-06-21 18:52:21,807 [DEBUG] Updater:271 - Updater getSpecificTask: 19
2019-06-21 18:52:21,808 [DEBUG] MainUpdater:1949 - Data refresh required: false
2019-06-21 18:52:21,808 [INFO] McuFilterPanel:282 - Update 0 favorites MCUs
2019-06-21 18:52:22,184 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:22,185 [DEBUG] ResultTable:377 - event FavoritesUpdated => nbItems=1482, old=null, new=null, h=1335405812
2019-06-21 18:52:22,195 [DEBUG] Updater:271 - Updater getSpecificTask: 16
2019-06-21 18:52:22,195 [DEBUG] MultiScanPanel:179 - Creating MultiScanPanel autoRefreshType=1
2019-06-21 18:52:22,195 [DEBUG] MultiScanPanel:186 - Check proxy status ongoing.
2019-06-21 18:52:22,195 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 18:52:22,196 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:52:22,196 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:52:22,196 [DEBUG] DbBoards:79 - create instance com.st.microxplorer.mcufinder.db.DbBoards@388746a0
2019-06-21 18:52:22,197 [DEBUG] DbBoards:79 - create instance com.st.microxplorer.mcufinder.db.DbBoardsPdsc@65752a45
2019-06-21 18:52:22,197 [DEBUG] DbBoardsPdsc:40 - create instance com.st.microxplorer.mcufinder.db.DbBoardsPdsc@65752a45
2019-06-21 18:52:22,199 [DEBUG] DbBoardsPdsc:87 - Read PDSC file : C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\boardmanager\A_ST_Nucleo144BoardsList.pdsc
2019-06-21 18:52:22,214 [INFO] DbBoardsPdsc:92 - Found 18 items
2019-06-21 18:52:22,214 [DEBUG] DbBoardsPdsc:87 - Read PDSC file : C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\boardmanager\A_ST_Nucleo32BoardsList.pdsc
2019-06-21 18:52:22,217 [INFO] DbBoardsPdsc:92 - Found 9 items
2019-06-21 18:52:22,217 [DEBUG] DbBoardsPdsc:87 - Read PDSC file : C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\boardmanager\A_ST_Nucleo64BoardsList.pdsc
2019-06-21 18:52:22,223 [INFO] DbBoardsPdsc:92 - Found 27 items
2019-06-21 18:52:22,223 [DEBUG] DbBoardsPdsc:87 - Read PDSC file : C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\boardmanager\A_ST_NucleoKitsList.pdsc
2019-06-21 18:52:22,226 [INFO] DbBoardsPdsc:92 - Found 1 items
2019-06-21 18:52:22,227 [DEBUG] DbBoardsPdsc:87 - Read PDSC file : C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\boardmanager\B_ST_DiscoBoardsList.pdsc
2019-06-21 18:52:22,250 [INFO] DbBoardsPdsc:92 - Found 35 items
2019-06-21 18:52:22,250 [DEBUG] DbBoardsPdsc:87 - Read PDSC file : C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\boardmanager\C_ST_EvalBoardsList.pdsc
2019-06-21 18:52:22,261 [INFO] DbBoardsPdsc:92 - Found 37 items
2019-06-21 18:52:22,262 [DEBUG] DbBoardsPdsc:122 - Fill Boards features from PDSC (127 items)
2019-06-21 18:52:22,265 [DEBUG] DbBoardsPdsc:246 - Feature Board (name=P-NUCLEO-WB55-Nucleo) of Kit Nucleo-RF Kit
2019-06-21 18:52:22,266 [DEBUG] DbBoardsPdsc:246 - Feature ExpansionBoard (name=P-NUCLEO-WB55-USBDongle) of Kit Nucleo-RF Kit
2019-06-21 18:52:22,274 [DEBUG] DbBoardsPdsc:323 - allKitContentsList=[P-NUCLEO-WB55-Nucleo, P-NUCLEO-WB55-USBDongle]
2019-06-21 18:52:22,274 [DEBUG] DbBoardsPdsc:340 - set fromKitList=[P-NUCLEO-WB55] for kit item P-NUCLEO-WB55-Nucleo
2019-06-21 18:52:22,274 [DEBUG] DbBoardsPdsc:340 - set fromKitList=[P-NUCLEO-WB55] for kit item P-NUCLEO-WB55-USBDongle
2019-06-21 18:52:22,274 [DEBUG] DbBoards:79 - create instance com.st.microxplorer.mcufinder.db.DbBoardsJson@3e136c62
2019-06-21 18:52:22,275 [DEBUG] DbBoardsJson:31 - create instance com.st.microxplorer.mcufinder.db.DbBoardsJson@3e136c62
2019-06-21 18:52:22,275 [DEBUG] DbBoardsJson:69 - Get Boards data from C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder//mcu/boards.json
2019-06-21 18:52:22,328 [INFO] DbBoardsJson:79 - JSON generation date=Fri Jun 21 12:52:52 BST 2019 (1561117972)
2019-06-21 18:52:22,328 [DEBUG] DbBoardsJson:100 - Fill Boards features from JSON (111 items)
2019-06-21 18:52:22,334 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: NUCLEO-H743ZI2
2019-06-21 18:52:22,334 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: NUCLEO-G031K8
2019-06-21 18:52:22,335 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: P-NUCLEO-WB55-Nucleo
2019-06-21 18:52:22,335 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: P-NUCLEO-WB55-USBDongle
2019-06-21 18:52:22,335 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: P-NUCLEO-WB55
2019-06-21 18:52:22,335 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32F401C-DISCO
2019-06-21 18:52:22,335 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32F769I-DISC1
2019-06-21 18:52:22,336 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32F7308-DISCO
2019-06-21 18:52:22,336 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32L-DISCOVERY
2019-06-21 18:52:22,336 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32G0316-DISCO
2019-06-21 18:52:22,336 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32H747I-DISC1
2019-06-21 18:52:22,337 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32H743I-EVAL2
2019-06-21 18:52:22,337 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32H753I-EVAL2
2019-06-21 18:52:22,337 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32H747I-EVAL
2019-06-21 18:52:22,338 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32H757I-EVAL
2019-06-21 18:52:22,338 [DEBUG] DbBoardsPdsc:424 - Board from PDSC not found in JSON: STM32G474E-EVAL1
2019-06-21 18:52:22,340 [INFO] DbBoards:120 - Found 127 boards (126 are supported by CubeMX)
2019-06-21 18:52:22,344 [INFO] DbBoardsDocs:119 - JSON generation date=Fri Jun 21 11:28:09 BST 2019 (1561112889)
2019-06-21 18:52:22,353 [INFO] DbBoardsDocs:55 - Found 151 boards documents
2019-06-21 18:52:22,354 [WARN] DbBoards:130 - board NUCLEO-H743ZI2 has no document id list !
2019-06-21 18:52:22,355 [WARN] DbBoards:130 - board NUCLEO-G031K8 has no document id list !
2019-06-21 18:52:22,356 [WARN] DbBoards:130 - board P-NUCLEO-WB55-Nucleo has no document id list !
2019-06-21 18:52:22,356 [WARN] DbBoards:130 - board P-NUCLEO-WB55-USBDongle has no document id list !
2019-06-21 18:52:22,356 [WARN] DbBoards:130 - board P-NUCLEO-WB55 has no document id list !
2019-06-21 18:52:22,357 [WARN] DbBoards:130 - board STM32F401C-DISCO has no document id list !
2019-06-21 18:52:22,358 [WARN] DbBoards:130 - board STM32F769I-DISC1 has no document id list !
2019-06-21 18:52:22,358 [WARN] DbBoards:130 - board STM32F7308-DISCO has no document id list !
2019-06-21 18:52:22,358 [WARN] DbBoards:130 - board STM32L-DISCOVERY has no document id list !
2019-06-21 18:52:22,360 [WARN] DbBoards:130 - board STM32G0316-DISCO has no document id list !
2019-06-21 18:52:22,360 [WARN] DbBoards:130 - board STM32H747I-DISC1 has no document id list !
2019-06-21 18:52:22,361 [WARN] DbBoards:130 - board STM32303C-EVAL has no document id list !
2019-06-21 18:52:22,361 [WARN] DbBoards:130 - board STM32L152D-EVAL has no document id list !
2019-06-21 18:52:22,361 [WARN] DbBoards:130 - board STM32H743I-EVAL2 has no document id list !
2019-06-21 18:52:22,362 [WARN] DbBoards:130 - board STM32H753I-EVAL2 has no document id list !
2019-06-21 18:52:22,362 [WARN] DbBoards:130 - board STM32H747I-EVAL has no document id list !
2019-06-21 18:52:22,362 [WARN] DbBoards:130 - board STM32H757I-EVAL has no document id list !
2019-06-21 18:52:22,362 [WARN] DbBoards:130 - board STM32G474E-EVAL1 has no document id list !
2019-06-21 18:52:24,188 [INFO] ApiDb:158 - Load user favorites file C:\Users\Afonso Muralha/.stm32cubeide/favorites.boards.txt: 0 item(s)
2019-06-21 18:52:24,188 [INFO] ApiDb:163 - User favorites Boards=[]
2019-06-21 18:52:24,188 [INFO] DbBoards:202 - Set 0 / 0 favorites Boards
2019-06-21 18:52:24,190 [DEBUG] DbBoards:614 - firePropertyChange Reset
2019-06-21 18:52:24,191 [DEBUG] DbBoards:1120 - --> key=BigFamily, value=STM32
2019-06-21 18:52:24,192 [DEBUG] DbBoards:1131 - firePropertyChange BigFamily
2019-06-21 18:52:24,219 [DEBUG] PeriphSelectorTable:328 - all peripherals=38 item(s)
2019-06-21 18:52:24,220 [DEBUG] PeriphSelectorTable:343 - available peripherals=38 item(s)
2019-06-21 18:52:24,294 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardlist.hidden, def=null, readString=null
2019-06-21 18:52:24,305 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:24,305 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:52:24,305 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 18:52:24,305 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:52:24,306 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:52:24,306 [DEBUG] Updater:271 - Updater getSpecificTask: 12
2019-06-21 18:52:24,306 [DEBUG] MainUpdater:1364 - mainStatus changed to 5
2019-06-21 18:52:24,306 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 18:52:24,306 [DEBUG] LoadUrlFilesThread:274 - Build download list (size=1)
2019-06-21 18:52:24,308 [DEBUG] LoadUrlFilesThread:369 - File already downloaded (no check for newer version) 
2019-06-21 18:52:24,308 [DEBUG] LoadUrlFilesThread:426 - Perform download list (size=1).
2019-06-21 18:52:24,308 [DEBUG] LoadUrlFilesThread:538 - Download not required for : http://stmcufinder.com/wp-content/uploads/ads/PRSTM32MP10219-01-med.jpg
2019-06-21 18:52:24,308 [INFO] LoadUrlFilesThread:147 - End of LoadServerUrlFiles without Thread
2019-06-21 18:52:24,309 [DEBUG] MainUpdater:1715 - loadUrlFile : No Thread End now
2019-06-21 18:52:24,309 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 5
2019-06-21 18:52:24,309 [INFO] BoardDetailPanel:179 - Set advertising image to C:/Users/Afonso Muralha/STM32Cube/Repository/\PRSTM32MP10219-01-med.jpg
2019-06-21 18:52:24,313 [DEBUG] ResultTable:426 - column sort order changed
2019-06-21 18:52:24,333 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardpanel.splitloc, def=null, readString=null
2019-06-21 18:52:24,347 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardlist.cols.width, def=null, readString=null
2019-06-21 18:52:24,348 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardfilters.collapsed, def=null, readString=null
2019-06-21 18:52:24,348 [DEBUG] Updater:271 - Updater getSpecificTask: 19
2019-06-21 18:52:24,349 [DEBUG] MainUpdater:1949 - Data refresh required: false
2019-06-21 18:52:24,349 [INFO] BoardFilterPanel:212 - Update 0 favorites Boards
2019-06-21 18:52:24,357 [DEBUG] ResultTable:377 - event FavoritesUpdated => nbItems=127, old=null, new=null, h=828783261
2019-06-21 18:52:24,888 [INFO] CrossSelectorPresenter:1239 - Cross Selector saved comparison directory: C:\Users\Afonso Muralha\.stmcufinder\plugins\mcufinder\mcu\cs_comparisons_mx
2019-06-21 18:52:24,892 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mcupanel.splitloc, def=null, readString=null
2019-06-21 18:52:25,189 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mculist.cols.width, def=null, readString=null
2019-06-21 18:52:25,189 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.mcufilters.collapsed, def=null, readString=null
2019-06-21 18:52:25,190 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardpanel.splitloc, def=null, readString=null
2019-06-21 18:52:25,200 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardlist.cols.width, def=null, readString=null
2019-06-21 18:52:25,200 [DEBUG] ToolPreferences:49 - key=mcufinder_cubeide.boardfilters.collapsed, def=null, readString=null
2019-06-21 18:52:25,298 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:25,298 [DEBUG] DbMcus:928 - --> key=PN_search, value=
2019-06-21 18:52:25,300 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:25,302 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:25,306 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:25,310 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:25,314 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:25,316 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:25,319 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:25,321 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:25,325 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:25,327 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:25,331 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:25,333 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:25,337 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:25,337 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:25,354 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:25,355 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,355 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,357 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:25,358 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:25,359 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:25,361 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:25,362 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:25,363 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:25,366 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:25,368 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:25,370 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:25,374 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:25,376 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:25,377 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:25,378 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:25,566 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:25,567 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=1587454258
2019-06-21 18:52:25,567 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=1565878831
2019-06-21 18:52:25,568 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=1565878831
2019-06-21 18:52:25,571 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=1565878831
2019-06-21 18:52:25,574 [DEBUG] DbMcus:953 - <-- key=PN_search, value=
2019-06-21 18:52:25,582 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:25,583 [DEBUG] DbMcus:928 - --> key=PN_search, value=
2019-06-21 18:52:25,585 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:25,588 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:25,591 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:25,594 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:25,598 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:25,600 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:25,605 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:25,606 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:25,609 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:25,611 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:25,614 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:25,616 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:25,618 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:25,619 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:25,627 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:25,628 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,628 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,630 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:25,631 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:25,632 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:25,634 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:25,635 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:25,636 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:25,637 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:25,640 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:25,643 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:25,645 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:25,646 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:25,648 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:25,648 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:25,904 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:25,905 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=1708032079
2019-06-21 18:52:25,906 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=2023278216
2019-06-21 18:52:25,907 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=2023278216
2019-06-21 18:52:25,908 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=2023278216
2019-06-21 18:52:25,910 [DEBUG] DbMcus:953 - <-- key=PN_search, value=
2019-06-21 18:52:25,919 [DEBUG] BoardAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32072B-EVAL key
2019-06-21 18:52:25,919 [DEBUG] DbBoards:636 - --> key=PN_search, value=
2019-06-21 18:52:25,919 [DEBUG] DbBoards:655 - firePropertyChange PN_search
2019-06-21 18:52:25,920 [DEBUG] DbBoards:1154 - filter Price => 127 selectable items
2019-06-21 18:52:25,921 [DEBUG] DbBoards:1154 - filter OscFreq => 127 selectable items
2019-06-21 18:52:25,923 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbBoardsJson@3e136c62 value=PN_search
2019-06-21 18:52:25,925 [DEBUG] PeriphSelectorTable:343 - available peripherals=38 item(s)
2019-06-21 18:52:25,925 [DEBUG] BoardFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,926 [DEBUG] BoardFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,926 [DEBUG] DbBoards:1154 - filter Vendor => 127 selectable items
2019-06-21 18:52:25,927 [DEBUG] BoardFilterCheckList:97 - filter Vendor: selectable items=[STMicroelectronics]
2019-06-21 18:52:25,927 [DEBUG] BoardFilterCheckList:104 - filter Vendor: selected items=[STMicroelectronics]
2019-06-21 18:52:25,927 [DEBUG] DbBoards:1154 - filter Type => 127 selectable items
2019-06-21 18:52:25,928 [DEBUG] BoardFilterCheckList:97 - filter Type: selectable items=[Discovery, Evaluation Board, Nucleo USB Dongle, Nucleo-RF Kit, Nucleo144, Nucleo32, Nucleo64]
2019-06-21 18:52:25,928 [DEBUG] BoardFilterCheckList:104 - filter Type: selected items=[Discovery, Evaluation Board, Nucleo USB Dongle, Nucleo-RF Kit, Nucleo144, Nucleo32, Nucleo64]
2019-06-21 18:52:25,928 [DEBUG] DbBoards:1154 - filter McuSeries => 127 selectable items
2019-06-21 18:52:25,929 [DEBUG] BoardFilterCheckList:97 - filter McuSeries: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32MP1, STM32WB]
2019-06-21 18:52:25,929 [DEBUG] BoardFilterCheckList:104 - filter McuSeries: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32MP1, STM32WB]
2019-06-21 18:52:25,936 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=127, old=PN_search, new=Never Mind, h=838057128
2019-06-21 18:52:25,936 [DEBUG] BoardDetailPanel:734 - event from BoardResultTable: ResultSelectionChanged, old=null, new=null h=744125397
2019-06-21 18:52:25,938 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=744125397
2019-06-21 18:52:25,938 [DEBUG] DbBoards:660 - <-- key=PN_search, value=
2019-06-21 18:52:25,940 [DEBUG] BoardAutoCompleteCombo:100 - AutoCompleteCB filtering on 32F0308DISCOVERY key
2019-06-21 18:52:25,940 [DEBUG] DbBoards:636 - --> key=PN_search, value=
2019-06-21 18:52:25,941 [DEBUG] DbBoards:655 - firePropertyChange PN_search
2019-06-21 18:52:25,941 [DEBUG] DbBoards:1154 - filter Price => 127 selectable items
2019-06-21 18:52:25,942 [DEBUG] DbBoards:1154 - filter OscFreq => 127 selectable items
2019-06-21 18:52:25,943 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbBoardsJson@3e136c62 value=PN_search
2019-06-21 18:52:25,945 [DEBUG] PeriphSelectorTable:343 - available peripherals=38 item(s)
2019-06-21 18:52:25,945 [DEBUG] BoardFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,945 [DEBUG] BoardFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:25,945 [DEBUG] DbBoards:1154 - filter Vendor => 127 selectable items
2019-06-21 18:52:25,946 [DEBUG] BoardFilterCheckList:97 - filter Vendor: selectable items=[STMicroelectronics]
2019-06-21 18:52:25,946 [DEBUG] BoardFilterCheckList:104 - filter Vendor: selected items=[STMicroelectronics]
2019-06-21 18:52:25,946 [DEBUG] DbBoards:1154 - filter Type => 127 selectable items
2019-06-21 18:52:25,946 [DEBUG] BoardFilterCheckList:97 - filter Type: selectable items=[Discovery, Evaluation Board, Nucleo USB Dongle, Nucleo-RF Kit, Nucleo144, Nucleo32, Nucleo64]
2019-06-21 18:52:25,947 [DEBUG] BoardFilterCheckList:104 - filter Type: selected items=[Discovery, Evaluation Board, Nucleo USB Dongle, Nucleo-RF Kit, Nucleo144, Nucleo32, Nucleo64]
2019-06-21 18:52:25,947 [DEBUG] DbBoards:1154 - filter McuSeries => 127 selectable items
2019-06-21 18:52:25,947 [DEBUG] BoardFilterCheckList:97 - filter McuSeries: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32MP1, STM32WB]
2019-06-21 18:52:25,948 [DEBUG] BoardFilterCheckList:104 - filter McuSeries: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32MP1, STM32WB]
2019-06-21 18:52:25,955 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=127, old=PN_search, new=Never Mind, h=1547526732
2019-06-21 18:52:25,955 [DEBUG] BoardDetailPanel:734 - event from BoardResultTable: ResultSelectionChanged, old=null, new=null h=1474969822
2019-06-21 18:52:25,956 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=1474969822
2019-06-21 18:52:25,956 [DEBUG] DbBoards:660 - <-- key=PN_search, value=
2019-06-21 18:52:49,988 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:49,989 [DEBUG] DbMcus:928 - --> key=PN_search, value=S
2019-06-21 18:52:49,995 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:50,002 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:50,005 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:50,012 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:50,020 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:50,027 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:50,031 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:50,037 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:50,040 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:50,047 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:50,050 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:50,056 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:50,059 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:50,059 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:50,068 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:50,069 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:50,069 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:50,075 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:50,076 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:50,077 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:50,084 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:50,085 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:50,086 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:50,092 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:50,095 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:50,097 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:50,103 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:50,105 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:50,106 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:50,107 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:50,337 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:50,338 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=2144384163
2019-06-21 18:52:50,339 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=212431329
2019-06-21 18:52:50,340 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=212431329
2019-06-21 18:52:50,342 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=212431329
2019-06-21 18:52:50,343 [DEBUG] DbMcus:953 - <-- key=PN_search, value=S
2019-06-21 18:52:50,529 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:50,529 [DEBUG] DbMcus:928 - --> key=PN_search, value=ST
2019-06-21 18:52:50,534 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:50,539 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:50,542 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:50,547 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:50,551 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:50,556 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:50,559 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:50,563 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:50,567 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:50,572 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:50,575 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:50,579 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:50,583 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:50,583 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:50,589 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:50,589 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:50,589 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:50,594 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:50,595 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:50,596 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:50,601 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:50,602 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:50,603 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:50,608 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:50,611 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:50,614 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:50,635 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:50,637 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:50,638 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:50,639 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:50,862 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:50,862 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=2144680052
2019-06-21 18:52:50,863 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=55999030
2019-06-21 18:52:50,864 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=55999030
2019-06-21 18:52:50,865 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=55999030
2019-06-21 18:52:50,867 [DEBUG] DbMcus:953 - <-- key=PN_search, value=ST
2019-06-21 18:52:50,980 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:50,980 [DEBUG] DbMcus:928 - --> key=PN_search, value=STM
2019-06-21 18:52:50,985 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:50,990 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:50,995 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:51,000 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:51,008 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:51,014 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:51,019 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:51,025 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:51,028 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:51,033 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:51,036 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:51,041 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:51,045 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:51,045 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:51,049 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:51,050 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:51,050 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:51,055 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:51,056 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:51,057 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:51,062 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:51,064 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:51,065 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:51,070 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:51,072 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:51,075 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:51,081 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:51,082 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:51,084 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:51,084 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:51,461 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:51,461 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=2140797766
2019-06-21 18:52:51,461 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=1475793393
2019-06-21 18:52:51,462 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=1475793393
2019-06-21 18:52:51,463 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=1475793393
2019-06-21 18:52:51,465 [DEBUG] DbMcus:953 - <-- key=PN_search, value=STM
2019-06-21 18:52:51,593 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:51,593 [DEBUG] DbMcus:928 - --> key=PN_search, value=STM3
2019-06-21 18:52:51,599 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:51,604 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:51,606 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:51,613 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:51,616 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:51,621 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:51,625 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:51,630 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:51,633 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:51,639 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:51,647 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:51,652 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:51,654 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:51,655 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:51,659 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:51,659 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:51,659 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:51,664 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:51,665 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:51,666 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:51,671 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:51,672 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:51,673 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:51,679 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:51,681 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:51,683 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:51,688 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:51,690 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:51,691 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:51,691 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:51,921 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:51,922 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=1939461234
2019-06-21 18:52:51,922 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=516692696
2019-06-21 18:52:51,922 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=516692696
2019-06-21 18:52:51,923 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=516692696
2019-06-21 18:52:51,925 [DEBUG] DbMcus:953 - <-- key=PN_search, value=STM3
2019-06-21 18:52:51,993 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:51,994 [DEBUG] DbMcus:928 - --> key=PN_search, value=STM32
2019-06-21 18:52:51,998 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:52,003 [DEBUG] DbMcus:1725 - filter Price => 1482 selectable items
2019-06-21 18:52:52,006 [DEBUG] DbMcus:966 - --> key=Price, limit=0-10944
2019-06-21 18:52:52,011 [DEBUG] DbMcus:1725 - filter IO => 1482 selectable items
2019-06-21 18:52:52,015 [DEBUG] DbMcus:966 - --> key=IO, limit=11-176
2019-06-21 18:52:52,020 [DEBUG] DbMcus:1725 - filter Flash => 1482 selectable items
2019-06-21 18:52:52,022 [DEBUG] DbMcus:966 - --> key=Flash, limit=0-2048
2019-06-21 18:52:52,027 [DEBUG] DbMcus:1725 - filter Ram => 1482 selectable items
2019-06-21 18:52:52,031 [DEBUG] DbMcus:966 - --> key=Ram, limit=2-1024
2019-06-21 18:52:52,036 [DEBUG] DbMcus:1725 - filter Freq => 1482 selectable items
2019-06-21 18:52:52,039 [DEBUG] DbMcus:966 - --> key=Freq, limit=0-650
2019-06-21 18:52:52,044 [DEBUG] DbMcus:1725 - filter Eeprom => 1482 selectable items
2019-06-21 18:52:52,047 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-16384
2019-06-21 18:52:52,047 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:52,052 [DEBUG] PeriphSelectorTable:343 - available peripherals=61 item(s)
2019-06-21 18:52:52,052 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:52,053 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:52,057 [DEBUG] DbMcus:1725 - filter Core => 1482 selectable items
2019-06-21 18:52:52,058 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:52,059 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-A7 + ARM Cortex-M4, ARM Cortex-M0, ARM Cortex-M0+, ARM Cortex-M3, ARM Cortex-M33, ARM Cortex-M4, ARM Cortex-M7, ARM Cortex-M7 + ARM Cortex-M4]
2019-06-21 18:52:52,064 [DEBUG] DbMcus:1725 - filter Series => 1482 selectable items
2019-06-21 18:52:52,065 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:52,066 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7, STM32G0, STM32G4, STM32H7, STM32L0, STM32L1, STM32L4, STM32L4+, STM32L5, STM32MP1, STM32WB]
2019-06-21 18:52:52,071 [DEBUG] DbMcus:1725 - filter Line => 1482 selectable items
2019-06-21 18:52:52,072 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:52,074 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9, STM32G0x0 Value line, STM32G0x1, STM32G4x1, STM32G4x3, STM32G4x4, STM32H742, STM32H743/753, STM32H745/755, STM32H747/757, STM32H750 Value line, STM32L0x0 Value Line, STM32L0x1, STM32L0x2, STM32L0x3, STM32L100 Value Line, STM32L151/152, STM32L162, STM32L4R5/S5, STM32L4R7/S7, STM32L4R9/S9, STM32L4x1, STM32L4x2, STM32L4x3, STM32L4x5, STM32L4x6, STM32L5x2, STM32MP151, STM32MP153, STM32MP157, STM32WBx5]
2019-06-21 18:52:52,079 [DEBUG] DbMcus:1725 - filter Package => 1482 selectable items
2019-06-21 18:52:52,080 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:52,082 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP49, EWLCSP66, LFBGA100, LFBGA132, LFBGA144, LFBGA354, LFBGA448, LQFP32, LQFP48, LQFP64, LQFP80, LQFP100, LQFP128, LQFP132, LQFP144, LQFP176, LQFP208, SO8N, TFBGA64, TFBGA100, TFBGA216, TFBGA240, TFBGA257, TFBGA361, TSSOP14, TSSOP20, UFBGA64, UFBGA100, UFBGA132, UFBGA144, UFBGA169, UFBGA176, UFQFPN20, UFQFPN28, UFQFPN32, UFQFPN48, UFQFPN64, VFQFPN36, VFQFPN68, WLCSP18, WLCSP25, WLCSP36, WLCSP49, WLCSP63, WLCSP64, WLCSP66, WLCSP72, WLCSP80, WLCSP81, WLCSP90, WLCSP100, WLCSP104, WLCSP143, WLCSP144, WLCSP156, WLCSP168, WLCSP180]
2019-06-21 18:52:52,082 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:52,370 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:52,370 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=1482, old=PN_search, new=Never Mind, h=1490615836
2019-06-21 18:52:52,370 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=1360396402
2019-06-21 18:52:52,371 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=1360396402
2019-06-21 18:52:52,372 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=1360396402
2019-06-21 18:52:52,373 [DEBUG] DbMcus:953 - <-- key=PN_search, value=STM32
2019-06-21 18:52:52,434 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F030C6 key
2019-06-21 18:52:52,434 [DEBUG] DbMcus:928 - --> key=PN_search, value=STM32F
2019-06-21 18:52:52,438 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:52,446 [DEBUG] DbMcus:1725 - filter Price => 691 selectable items
2019-06-21 18:52:52,448 [DEBUG] DbMcus:966 - --> key=Price, limit=0-9259
2019-06-21 18:52:52,455 [DEBUG] DbMcus:1725 - filter IO => 691 selectable items
2019-06-21 18:52:52,456 [DEBUG] DbMcus:966 - --> key=IO, limit=14-168
2019-06-21 18:52:52,464 [DEBUG] DbMcus:1725 - filter Flash => 691 selectable items
2019-06-21 18:52:52,466 [DEBUG] DbMcus:966 - --> key=Flash, limit=16-2048
2019-06-21 18:52:52,471 [DEBUG] DbMcus:1725 - filter Ram => 691 selectable items
2019-06-21 18:52:52,473 [DEBUG] DbMcus:966 - --> key=Ram, limit=4-512
2019-06-21 18:52:52,477 [DEBUG] DbMcus:1725 - filter Freq => 691 selectable items
2019-06-21 18:52:52,478 [DEBUG] DbMcus:966 - --> key=Freq, limit=24-216
2019-06-21 18:52:52,483 [DEBUG] DbMcus:1725 - filter Eeprom => 691 selectable items
2019-06-21 18:52:52,484 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-0
2019-06-21 18:52:52,485 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:52,487 [DEBUG] PeriphSelectorTable:343 - available peripherals=41 item(s)
2019-06-21 18:52:52,487 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:52,487 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:52,492 [DEBUG] DbMcus:1725 - filter Core => 691 selectable items
2019-06-21 18:52:52,492 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-M0, ARM Cortex-M3, ARM Cortex-M4, ARM Cortex-M7]
2019-06-21 18:52:52,493 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-M0, ARM Cortex-M3, ARM Cortex-M4, ARM Cortex-M7]
2019-06-21 18:52:52,497 [DEBUG] DbMcus:1725 - filter Series => 691 selectable items
2019-06-21 18:52:52,498 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7]
2019-06-21 18:52:52,498 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F0, STM32F1, STM32F2, STM32F3, STM32F4, STM32F7]
2019-06-21 18:52:52,504 [DEBUG] DbMcus:1725 - filter Line => 691 selectable items
2019-06-21 18:52:52,505 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9]
2019-06-21 18:52:52,506 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F0x0 Value Line, STM32F0x1, STM32F0x2, STM32F0x8, STM32F100 Value Line, STM32F101, STM32F102, STM32F103, STM32F105/107, STM32F2x5, STM32F2x7, STM32F301, STM32F302, STM32F303, STM32F334, STM32F373, STM32F3x8, STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479, STM32F7x0 Value line, STM32F7x2, STM32F7x3, STM32F7x5, STM32F7x6, STM32F7x7, STM32F7x8, STM32F7x9]
2019-06-21 18:52:52,512 [DEBUG] DbMcus:1725 - filter Package => 691 selectable items
2019-06-21 18:52:52,512 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[EWLCSP66, LFBGA100, LFBGA144, LQFP32, LQFP48, LQFP64, LQFP100, LQFP144, LQFP176, LQFP208, TFBGA64, TFBGA100, TFBGA216, TSSOP20, UFBGA64, UFBGA100, UFBGA144, UFBGA169, UFBGA176, UFQFPN28, UFQFPN32, UFQFPN48, VFQFPN36, WLCSP25, WLCSP36, WLCSP49, WLCSP64, WLCSP66, WLCSP81, WLCSP90, WLCSP100, WLCSP143, WLCSP168, WLCSP180]
2019-06-21 18:52:52,512 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[EWLCSP66, LFBGA100, LFBGA144, LQFP32, LQFP48, LQFP64, LQFP100, LQFP144, LQFP176, LQFP208, TFBGA64, TFBGA100, TFBGA216, TSSOP20, UFBGA64, UFBGA100, UFBGA144, UFBGA169, UFBGA176, UFQFPN28, UFQFPN32, UFQFPN48, VFQFPN36, WLCSP25, WLCSP36, WLCSP49, WLCSP64, WLCSP66, WLCSP81, WLCSP90, WLCSP100, WLCSP143, WLCSP168, WLCSP180]
2019-06-21 18:52:52,513 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:52,588 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:52,589 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=691, old=PN_search, new=Never Mind, h=853721448
2019-06-21 18:52:52,589 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=134917644
2019-06-21 18:52:52,590 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=134917644
2019-06-21 18:52:52,590 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=134917644
2019-06-21 18:52:52,591 [DEBUG] DbMcus:953 - <-- key=PN_search, value=STM32F
2019-06-21 18:52:52,667 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F401CB key
2019-06-21 18:52:52,668 [DEBUG] DbMcus:928 - --> key=PN_search, value=STM32F4
2019-06-21 18:52:52,672 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:52,677 [DEBUG] DbMcus:1725 - filter Price => 201 selectable items
2019-06-21 18:52:52,678 [DEBUG] DbMcus:966 - --> key=Price, limit=0-8614
2019-06-21 18:52:52,681 [DEBUG] DbMcus:1725 - filter IO => 201 selectable items
2019-06-21 18:52:52,682 [DEBUG] DbMcus:966 - --> key=IO, limit=23-168
2019-06-21 18:52:52,687 [DEBUG] DbMcus:1725 - filter Flash => 201 selectable items
2019-06-21 18:52:52,688 [DEBUG] DbMcus:966 - --> key=Flash, limit=64-2048
2019-06-21 18:52:52,692 [DEBUG] DbMcus:1725 - filter Ram => 201 selectable items
2019-06-21 18:52:52,694 [DEBUG] DbMcus:966 - --> key=Ram, limit=32-384
2019-06-21 18:52:52,698 [DEBUG] DbMcus:1725 - filter Freq => 201 selectable items
2019-06-21 18:52:52,699 [DEBUG] DbMcus:966 - --> key=Freq, limit=84-180
2019-06-21 18:52:52,703 [DEBUG] DbMcus:1725 - filter Eeprom => 201 selectable items
2019-06-21 18:52:52,705 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-0
2019-06-21 18:52:52,705 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:52,706 [DEBUG] PeriphSelectorTable:343 - available peripherals=31 item(s)
2019-06-21 18:52:52,706 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:52,706 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:52,710 [DEBUG] DbMcus:1725 - filter Core => 201 selectable items
2019-06-21 18:52:52,710 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-M4]
2019-06-21 18:52:52,710 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-M4]
2019-06-21 18:52:52,714 [DEBUG] DbMcus:1725 - filter Series => 201 selectable items
2019-06-21 18:52:52,714 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F4]
2019-06-21 18:52:52,714 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F4]
2019-06-21 18:52:52,718 [DEBUG] DbMcus:1725 - filter Line => 201 selectable items
2019-06-21 18:52:52,719 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479]
2019-06-21 18:52:52,719 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479]
2019-06-21 18:52:52,723 [DEBUG] DbMcus:1725 - filter Package => 201 selectable items
2019-06-21 18:52:52,723 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[LQFP48, LQFP64, LQFP100, LQFP144, LQFP176, LQFP208, TFBGA216, UFBGA64, UFBGA100, UFBGA144, UFBGA169, UFBGA176, UFQFPN48, WLCSP36, WLCSP49, WLCSP64, WLCSP81, WLCSP90, WLCSP143, WLCSP168]
2019-06-21 18:52:52,724 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[LQFP48, LQFP64, LQFP100, LQFP144, LQFP176, LQFP208, TFBGA216, UFBGA64, UFBGA100, UFBGA144, UFBGA169, UFBGA176, UFQFPN48, WLCSP36, WLCSP49, WLCSP64, WLCSP81, WLCSP90, WLCSP143, WLCSP168]
2019-06-21 18:52:52,724 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:52,750 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:52,750 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=201, old=PN_search, new=Never Mind, h=748787304
2019-06-21 18:52:52,750 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=569808449
2019-06-21 18:52:52,751 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=569808449
2019-06-21 18:52:52,753 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=569808449
2019-06-21 18:52:52,753 [DEBUG] DbMcus:953 - <-- key=PN_search, value=STM32F4
2019-06-21 18:52:52,988 [DEBUG] McuAutoCompleteCombo:100 - AutoCompleteCB filtering on STM32F401CB key
2019-06-21 18:52:52,988 [DEBUG] DbMcus:928 - --> key=PN_search, value=STM32F4
2019-06-21 18:52:52,992 [DEBUG] DbMcus:948 - firePropertyChange PN_search
2019-06-21 18:52:52,996 [DEBUG] DbMcus:1725 - filter Price => 201 selectable items
2019-06-21 18:52:52,997 [DEBUG] DbMcus:966 - --> key=Price, limit=0-8614
2019-06-21 18:52:53,025 [DEBUG] DbMcus:1725 - filter IO => 201 selectable items
2019-06-21 18:52:53,026 [DEBUG] DbMcus:966 - --> key=IO, limit=23-168
2019-06-21 18:52:53,030 [DEBUG] DbMcus:1725 - filter Flash => 201 selectable items
2019-06-21 18:52:53,031 [DEBUG] DbMcus:966 - --> key=Flash, limit=64-2048
2019-06-21 18:52:53,036 [DEBUG] DbMcus:1725 - filter Ram => 201 selectable items
2019-06-21 18:52:53,038 [DEBUG] DbMcus:966 - --> key=Ram, limit=32-384
2019-06-21 18:52:53,042 [DEBUG] DbMcus:1725 - filter Freq => 201 selectable items
2019-06-21 18:52:53,043 [DEBUG] DbMcus:966 - --> key=Freq, limit=84-180
2019-06-21 18:52:53,047 [DEBUG] DbMcus:1725 - filter Eeprom => 201 selectable items
2019-06-21 18:52:53,048 [DEBUG] DbMcus:966 - --> key=Eeprom, limit=0-0
2019-06-21 18:52:53,049 [DEBUG] PeriphSelectorTable:496 - event setPNSearchFilter from com.st.microxplorer.mcufinder.db.DbMcusJson@1e0463a0 value=PN_search
2019-06-21 18:52:53,049 [DEBUG] PeriphSelectorTable:343 - available peripherals=31 item(s)
2019-06-21 18:52:53,050 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:53,050 [DEBUG] McuFilterToggleButton:35 - event setPNSearchFilter old=PN_search, new=Never Mind
2019-06-21 18:52:53,054 [DEBUG] DbMcus:1725 - filter Core => 201 selectable items
2019-06-21 18:52:53,054 [DEBUG] McuFilterCheckList:97 - filter Core: selectable items=[ARM Cortex-M4]
2019-06-21 18:52:53,054 [DEBUG] McuFilterCheckList:104 - filter Core: selected items=[ARM Cortex-M4]
2019-06-21 18:52:53,058 [DEBUG] DbMcus:1725 - filter Series => 201 selectable items
2019-06-21 18:52:53,059 [DEBUG] McuFilterCheckList:97 - filter Series: selectable items=[STM32F4]
2019-06-21 18:52:53,059 [DEBUG] McuFilterCheckList:104 - filter Series: selected items=[STM32F4]
2019-06-21 18:52:53,063 [DEBUG] DbMcus:1725 - filter Line => 201 selectable items
2019-06-21 18:52:53,063 [DEBUG] McuFilterCheckList:97 - filter Line: selectable items=[STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479]
2019-06-21 18:52:53,063 [DEBUG] McuFilterCheckList:104 - filter Line: selected items=[STM32F401, STM32F405/415, STM32F407/417, STM32F410, STM32F411, STM32F412, STM32F413/423, STM32F427/437, STM32F429/439, STM32F446, STM32F469/479]
2019-06-21 18:52:53,067 [DEBUG] DbMcus:1725 - filter Package => 201 selectable items
2019-06-21 18:52:53,067 [DEBUG] McuFilterCheckList:97 - filter Package: selectable items=[LQFP48, LQFP64, LQFP100, LQFP144, LQFP176, LQFP208, TFBGA216, UFBGA64, UFBGA100, UFBGA144, UFBGA169, UFBGA176, UFQFPN48, WLCSP36, WLCSP49, WLCSP64, WLCSP81, WLCSP90, WLCSP143, WLCSP168]
2019-06-21 18:52:53,068 [DEBUG] McuFilterCheckList:104 - filter Package: selected items=[LQFP48, LQFP64, LQFP100, LQFP144, LQFP176, LQFP208, TFBGA216, UFBGA64, UFBGA100, UFBGA144, UFBGA169, UFBGA176, UFQFPN48, WLCSP36, WLCSP49, WLCSP64, WLCSP81, WLCSP90, WLCSP143, WLCSP168]
2019-06-21 18:52:53,068 [DEBUG] McuFilterCheckboxGFX:74 - event from DbMcus: setPNSearchFilter, old=PN_search, new=Never Mind
2019-06-21 18:52:53,078 [DEBUG] McuResultTable:1082 - Match column doesn't exist: java.lang.IllegalArgumentException: Identifier not found
2019-06-21 18:52:53,078 [DEBUG] ResultTable:377 - event setPNSearchFilter => nbItems=201, old=PN_search, new=Never Mind, h=434954025
2019-06-21 18:52:53,079 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=null h=445606264
2019-06-21 18:52:53,079 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=null h=445606264
2019-06-21 18:52:53,080 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=null h=445606264
2019-06-21 18:52:53,080 [DEBUG] DbMcus:953 - <-- key=PN_search, value=STM32F4
2019-06-21 18:52:55,148 [DEBUG] GraphicSummaryPanel:219 - event from McuResultTable: ResultSelectionChanged value=com.st.microxplorer.mcufinder.db.McuInfo@6eadadf4 h=593805597
2019-06-21 18:52:55,149 [DEBUG] McuDetailPanel:757 - event from McuResultTable: ResultSelectionChanged, old=null, new=com.st.microxplorer.mcufinder.db.McuInfo@6eadadf4 h=593805597
2019-06-21 18:52:55,229 [INFO] DbMcusDocs:127 - JSON generation date=Fri Jun 21 11:28:09 BST 2019 (1561112889)
2019-06-21 18:52:55,410 [INFO] DbMcusDocs:59 - Found 503 MCUs documents
2019-06-21 18:52:55,424 [DEBUG] MultiScanPanel:694 - An item has been selected from ResultTable (selection click): ResultSelectionChanged value=com.st.microxplorer.mcufinder.db.McuInfo@6eadadf4 h=593805597
2019-06-21 18:52:57,694 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:57,696 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:57,697 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:57,888 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:57,890 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,117 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,118 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,242 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,242 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,368 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,368 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,463 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:52:59,463 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,882 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,883 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,884 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,885 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,886 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,887 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,888 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:01,888 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:03,285 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:03,287 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:03,288 [DEBUG] Updater:271 - Updater getSpecificTask: 1
2019-06-21 18:53:03,289 [DEBUG] MicroXplorer:577 - withoutVersionV1.24.1
2019-06-21 18:53:03,290 [DEBUG] MicroXplorer:577 - withoutVersionV1.24.0
2019-06-21 18:53:03,610 [DEBUG] MicroXplorer:577 - File copied successfully!!
2019-06-21 18:53:03,725 [DEBUG] root:363 - 3rd party IDE plugIn contribution found (cf. UC30 required properties file):
2019-06-21 18:53:03,726 [DEBUG] root:364 - 	Key name = STM32CubeIDE current
2019-06-21 18:53:03,726 [DEBUG] root:365 - 	Display name = STM32CubeIDE
2019-06-21 18:53:03,726 [DEBUG] root:366 - 	Display version = current
2019-06-21 18:53:03,733 [DEBUG] root:367 - 	Class = com.st.stm32cube.ide.mcu.ide.process.MxIdePlugInProjectGenerator
2019-06-21 18:53:03,734 [DEBUG] root:370 - 	Is under root generation mode = true

2019-06-21 18:53:07,271 [DEBUG] Updater:271 - Updater getSpecificTask: 31
2019-06-21 18:53:07,271 [DEBUG] MainUpdater:2006 - Active connection check in progress...
2019-06-21 18:53:07,272 [DEBUG] MainUpdater:2027 - Last quickCheck was done too recently..
2019-06-21 18:53:07,272 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:53:07,273 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:53:07,273 [INFO] MainUpdater:2032 - connection check result : 10
2019-06-21 18:53:07,275 [DEBUG] MicroXplorer:577 - Successfull proxy connection.
2019-06-21 18:53:07,334 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:07,334 [DEBUG] FileManagerView:196 - iTypeTask=2, clParamTask=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Test.ioc
2019-06-21 18:53:07,339 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemCloseProject Don't care
2019-06-21 18:53:07,345 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateRccFrequencies RCC
2019-06-21 18:53:07,346 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,346 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,346 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,346 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,347 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,347 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,347 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,348 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,348 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,348 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,349 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,349 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateRccFrequencies
2019-06-21 18:53:07,349 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateRccFrequencies RCC
2019-06-21 18:53:07,349 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemCloseProject
2019-06-21 18:53:07,350 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement@6c7bc8ac by com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement.deactivateDiagram / Number of listeners = 20
2019-06-21 18:53:07,350 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemCloseProject
2019-06-21 18:53:07,350 [DEBUG] Updater:271 - Updater getSpecificTask: 7
2019-06-21 18:53:07,350 [INFO] MicroXplorer:371 - Change Database Path : 
2019-06-21 18:53:07,350 [INFO] MicroXplorer:401 - Change Database Version : DB.5.0.20
2019-06-21 18:53:07,351 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemCloseProject
2019-06-21 18:53:07,351 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiStatus NoIPSelected
2019-06-21 18:53:07,351 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiStatus
2019-06-21 18:53:07,352 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiStatus
2019-06-21 18:53:07,352 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiStatus
2019-06-21 18:53:07,352 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiStatus
2019-06-21 18:53:07,352 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiStatus
2019-06-21 18:53:07,352 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiStatus
2019-06-21 18:53:07,352 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiStatus
2019-06-21 18:53:07,353 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiStatus
2019-06-21 18:53:07,353 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiStatus
2019-06-21 18:53:07,353 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiStatus
2019-06-21 18:53:07,353 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiStatus
2019-06-21 18:53:07,354 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiStatus
2019-06-21 18:53:07,354 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiStatus NoIPSelected
2019-06-21 18:53:07,357 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemCloseProject
2019-06-21 18:53:07,357 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemCloseProject
2019-06-21 18:53:07,357 [INFO] PinOutPanel:1361 - setPackage(No Configuration,No Configuration)
2019-06-21 18:53:07,358 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemCloseProject
2019-06-21 18:53:07,358 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemCloseProject
2019-06-21 18:53:07,358 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemCloseProject
2019-06-21 18:53:07,358 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemCloseProject
2019-06-21 18:53:07,359 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemCloseProject
2019-06-21 18:53:07,360 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemCloseProject
2019-06-21 18:53:07,360 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:53:07,361 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemCloseProject
2019-06-21 18:53:07,361 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemCloseProject Don't care
2019-06-21 18:53:07,361 [DEBUG] MxSystem:456 - MXSystem listeners Count: 20
2019-06-21 18:53:07,362 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.MenuBar@5006a697
2019-06-21 18:53:07,363 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.McuScanResultList@41d8ac75
2019-06-21 18:53:07,364 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.clock.ClockConfigurationView@22b4ad0c
2019-06-21 18:53:07,364 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ipmanager.IPPluginView@29b2a94c
2019-06-21 18:53:07,364 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.engine.UndoRedoManager@2ac0cb64
2019-06-21 18:53:07,364 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.PinoutConfigView@49c72fb7
2019-06-21 18:53:07,365 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.projectmanager.ProjectManagerView@23a78d2e
2019-06-21 18:53:07,365 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.thirdparty.ThirdParty@1299fed3
2019-06-21 18:53:07,365 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.guiV5.PeripheralsSelectionPanel@732fa176
2019-06-21 18:53:07,367 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutconfig.gui.PinOutPanel@4f7da3a2
2019-06-21 18:53:07,367 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.clock.ClockTreeView@48b1b469
2019-06-21 18:53:07,367 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.power.PowerPluginView@3338d706
2019-06-21 18:53:07,367 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ip.plateformsettings.PlateformSettings@1315d910
2019-06-21 18:53:07,367 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ip.plateformsettings.model.BspModel@1eaf4e77
2019-06-21 18:53:07,368 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ipmanager.gui.BlockDiagram@52cda4bd
2019-06-21 18:53:07,368 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.ddr.MainDdr@8b93c88
2019-06-21 18:53:07,368 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.pinoutandconfiguration.PinoutAndConfigurationView@7be3a837
2019-06-21 18:53:07,368 [DEBUG] MxSystem:458 - com.st.microxplorer.plugins.filemanager.FileManagerView@146b4c6c
2019-06-21 18:53:07,368 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.New_gui_LeftPanel@1ec96512
2019-06-21 18:53:07,368 [DEBUG] MxSystem:458 - com.st.microxplorer.maingui.MainPanel@33f059ad
2019-06-21 18:53:07,369 [INFO] UtilMem:74 - Begin LoadConfig() Used Memory: 284105992 Bytes (706740224)
2019-06-21 18:53:07,370 [DEBUG] Updater:271 - Updater getSpecificTask: 7
2019-06-21 18:53:07,370 [INFO] MicroXplorer:371 - Change Database Path : 
2019-06-21 18:53:07,370 [INFO] MicroXplorer:401 - Change Database Version : DB.5.0.20
2019-06-21 18:53:07,371 [INFO] OpenFileManager:269 - Change cursor
2019-06-21 18:53:07,373 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemStartLoadProject don't care
2019-06-21 18:53:07,373 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemStartLoadProject
2019-06-21 18:53:07,373 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemStartLoadProject
2019-06-21 18:53:07,373 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemStartLoadProject
2019-06-21 18:53:07,378 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemStartLoadProject
2019-06-21 18:53:07,379 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemStartLoadProject
2019-06-21 18:53:07,379 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemStartLoadProject
2019-06-21 18:53:07,379 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemStartLoadProject
2019-06-21 18:53:07,380 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemStartLoadProject
2019-06-21 18:53:07,380 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemStartLoadProject
2019-06-21 18:53:07,380 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemStartLoadProject
2019-06-21 18:53:07,380 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemStartLoadProject
2019-06-21 18:53:07,380 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemStartLoadProject
2019-06-21 18:53:07,381 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemStartLoadProject don't care
2019-06-21 18:53:08,236 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,238 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,238 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,239 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP ADC1
2019-06-21 18:53:08,306 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,306 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,306 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,306 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP CRC
2019-06-21 18:53:08,380 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,381 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,381 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,381 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP FATFS
2019-06-21 18:53:08,413 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,413 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,414 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,414 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP FREERTOS
2019-06-21 18:53:08,427 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,427 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,428 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,428 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP I2C1
2019-06-21 18:53:08,438 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,438 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,438 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,439 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP I2C2
2019-06-21 18:53:08,448 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,449 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,449 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,449 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP I2C3
2019-06-21 18:53:08,470 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,471 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,471 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,471 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP I2S2
2019-06-21 18:53:08,482 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,482 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,482 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,482 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP I2S3
2019-06-21 18:53:08,486 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,486 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,486 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,486 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP IWDG
2019-06-21 18:53:08,502 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,503 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,503 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,503 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP LIBJPEG
2019-06-21 18:53:08,647 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,647 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,647 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,647 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP MBEDTLS
2019-06-21 18:53:08,661 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,662 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,662 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,662 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP PDM2PCM
2019-06-21 18:53:08,719 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,720 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,720 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,720 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP RCC
2019-06-21 18:53:08,779 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,779 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,779 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,780 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP RTC
2019-06-21 18:53:08,812 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,812 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,813 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,813 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP SPI1
2019-06-21 18:53:08,840 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,840 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,840 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,841 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP SPI2
2019-06-21 18:53:08,865 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,865 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,865 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,866 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP SPI3
2019-06-21 18:53:08,916 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:08,916 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:08,916 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:08,916 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP SYS
2019-06-21 18:53:09,175 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,176 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,176 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,176 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM1
2019-06-21 18:53:09,363 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,363 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,364 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,364 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM2
2019-06-21 18:53:09,598 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,598 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,598 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,598 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM3
2019-06-21 18:53:09,682 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,683 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,683 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,683 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM4
2019-06-21 18:53:09,785 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,786 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,786 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,786 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM5
2019-06-21 18:53:09,861 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,861 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,861 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,861 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM9
2019-06-21 18:53:09,912 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,912 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,912 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,912 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM10
2019-06-21 18:53:09,964 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,964 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,964 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,964 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP TIM11
2019-06-21 18:53:09,988 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:09,988 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:09,988 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:09,988 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP USART1
2019-06-21 18:53:10,013 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,014 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,014 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,014 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP USART2
2019-06-21 18:53:10,071 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,072 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,072 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,072 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP USART6
2019-06-21 18:53:10,115 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,116 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,116 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,116 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP USB_DEVICE
2019-06-21 18:53:10,167 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,167 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,167 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,168 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP USB_HOST
2019-06-21 18:53:10,183 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,183 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,183 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,184 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP USB_OTG_FS
2019-06-21 18:53:10,188 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,189 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,189 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,189 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP WWDG
2019-06-21 18:53:10,217 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,218 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,218 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,218 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP GPIO
2019-06-21 18:53:10,248 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,248 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,249 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,249 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP DMA
2019-06-21 18:53:10,272 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,272 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,272 [DEBUG] ContextAllowed:286 - Setting context Cortex-M4NS as default 
2019-06-21 18:53:10,273 [DEBUG] ContextAllowed:146 - Set Initializer context Cortex-M4NS for IP NVIC
2019-06-21 18:53:10,658 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,659 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,660 [DEBUG] ContextAllowed:604 - Creating Split DefaultSplit
2019-06-21 18:53:10,660 [DEBUG] ContextAllowed:256 - Adding context Cortex-M4NS in Split DefaultSplit
2019-06-21 18:53:10,821 [INFO] ImportTextPane:162 - (OptionalMessage_ERROR) Unable to find key (Mcu.ThirdPartyNb) in loaded IOC file
2019-06-21 18:53:10,821 [INFO] ImportTextPane:162 - (OptionalMessage_ERROR) Unable to find key (Mcu.PinsNb) in loaded IOC file
2019-06-21 18:53:10,821 [INFO] ImportTextPane:162 - (OptionalMessage_ERROR) Unable to find key (Mcu.IPNb) in loaded IOC file
2019-06-21 18:53:10,822 [DEBUG] Mcu:2532 - ====> checkEnable
2019-06-21 18:53:10,875 [DEBUG] Mcu:2540 - <==== checkEnable true
2019-06-21 18:53:10,882 [DEBUG] Mcu:2532 - ====> checkEnable
2019-06-21 18:53:10,916 [DEBUG] Mcu:2540 - <==== checkEnable true
2019-06-21 18:53:11,226 [INFO] UtilMem:74 - End LoadConfig() Used Memory: 275070712 Bytes (706740224)
2019-06-21 18:53:11,227 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemChangeProject don't care
2019-06-21 18:53:11,227 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemChangeProject
2019-06-21 18:53:11,227 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemChangeProject
2019-06-21 18:53:11,254 [DEBUG] UITreeTableRework:139 - com.st.microxplorer.plugins.thirdparty.gui.view.UITreeTableRework
2019-06-21 18:53:11,254 [DEBUG] UITreeTableRework:140 - Afonso Muralha
2019-06-21 18:53:11,255 [DEBUG] UITreeTableRework:905 - buildMainPanel
2019-06-21 18:53:11,326 [DEBUG] TreeTablePanelRework:107 - Constructor for the treetable panel
2019-06-21 18:53:11,328 [DEBUG] UITreeTableRework:824 - *************0**************
2019-06-21 18:53:11,337 [INFO] ThirdPartyDb:293 - Open Third Party DataBase File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/thirdparty/db/thirdparties_db.xml) : 3 ms. number of Sw pack : 5
2019-06-21 18:53:11,338 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,339 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0+', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,339 [DEBUG] FilterDevice:674 - device = 'STM32F1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,339 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,339 [DEBUG] FilterDevice:674 - device = 'STM32F2', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,339 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,340 [DEBUG] FilterDevice:674 - device = 'STM32L1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,340 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,340 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M4', mcu = 'Arm Cortex-M4' -> match = true
2019-06-21 18:53:11,340 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,340 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0+', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'STM32F1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'STM32F2', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'STM32L1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,341 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M4', mcu = 'Arm Cortex-M4' -> match = true
2019-06-21 18:53:11,342 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,342 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0+', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,342 [DEBUG] FilterDevice:674 - device = 'STM32L1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,342 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,342 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M4', mcu = 'Arm Cortex-M4' -> match = true
2019-06-21 18:53:11,342 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,343 [DEBUG] FilterDevice:674 - device = 'STM32L0', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,343 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0+', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,343 [DEBUG] FilterDevice:674 - device = 'STM32F1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,343 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,343 [DEBUG] FilterDevice:674 - device = 'STM32F2', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,343 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,344 [DEBUG] FilterDevice:674 - device = 'STM32L1', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,344 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,344 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M4', mcu = 'Arm Cortex-M4' -> match = true
2019-06-21 18:53:11,344 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,344 [DEBUG] FilterDevice:674 - device = 'STM32L0', mcu = 'STM32F4' -> match = false
2019-06-21 18:53:11,344 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M0+', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,345 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M3', mcu = 'Arm Cortex-M4' -> match = false
2019-06-21 18:53:11,345 [DEBUG] FilterDevice:674 - device = 'ARM Cortex-M4', mcu = 'Arm Cortex-M4' -> match = true
2019-06-21 18:53:11,345 [DEBUG] Updater:271 - Updater getSpecificTask: 38
2019-06-21 18:53:11,345 [DEBUG] Updater:271 - Updater getSpecificTask: 38
2019-06-21 18:53:11,346 [DEBUG] Updater:271 - Updater getSpecificTask: 38
2019-06-21 18:53:11,346 [DEBUG] Updater:271 - Updater getSpecificTask: 38
2019-06-21 18:53:11,346 [DEBUG] Updater:271 - Updater getSpecificTask: 38
2019-06-21 18:53:11,379 [DEBUG] ThirdPartyModel:141 - ThirdPartyModel init
2019-06-21 18:53:11,380 [DEBUG] UITreeTableRework:262 - MessageId: 80 ==> [STMicroelectronics]
2019-06-21 18:53:11,380 [DEBUG] UITreeTableRework:273 - [STMicroelectronics]
2019-06-21 18:53:11,380 [DEBUG] FilterVendorPanel:107 - VENDORS:[STMicroelectronics]
2019-06-21 18:53:11,382 [DEBUG] FilterVendorPanel:113 - []
2019-06-21 18:53:11,383 [DEBUG] UITreeTableRework:262 - MessageId: 81 ==> [Wireless, Board Component, Board Extension, Board Support, Device]
2019-06-21 18:53:11,383 [DEBUG] UITreeTableRework:282 - [Board Component, Board Extension, Board Support, Device, Wireless]
2019-06-21 18:53:11,383 [DEBUG] FilterClassPanel:105 - CLASSES:[Board Component, Board Extension, Board Support, Device, Wireless]
2019-06-21 18:53:11,384 [DEBUG] FilterClassPanel:111 - []
2019-06-21 18:53:11,385 [DEBUG] UITreeTableRework:262 - MessageId: 82 ==> [1.0.0, 1.1.0, 5.1.0, 4.2.0, 5.2.1]
2019-06-21 18:53:11,385 [DEBUG] UITreeTableRework:287 - GET_VERSION_LIST_CTE
2019-06-21 18:53:11,385 [DEBUG] UITreeTableRework:288 - [1.0.0, 1.1.0, 5.1.0, 4.2.0, 5.2.1]
2019-06-21 18:53:11,386 [DEBUG] UITreeTableRework:262 - MessageId: 83 ==> [ARM, BlueNRG-MS, Bluetooth Low Energy, Cortex-M, MEMS, STMicroelectronics, Wireless]
2019-06-21 18:53:11,386 [DEBUG] UITreeTableRework:294 - GET_POSSIBLE_KEYWORD_LIST_CTE
2019-06-21 18:53:11,386 [DEBUG] TreeTablePanelRework:272 - building nodes
2019-06-21 18:53:11,491 [DEBUG] SharedServices:215 - TP_ADVANCED_MODE null
2019-06-21 18:53:11,492 [DEBUG] SharedServices:217 - TP_ADVANCED_MODE is null
2019-06-21 18:53:11,495 [DEBUG] UITreeTableRework:169 - update with messageid: 76
2019-06-21 18:53:11,496 [DEBUG] UITreeTableRework:211 -  NEW_PROJECT_CTE received: action needed!
2019-06-21 18:53:11,505 [DEBUG] UITreeTableRework:428 - 30 {1561139591496=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.BlueNRG-MS_GettingStarted.pdf, labelVersion=, label=false, version=0.0.2, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=BLE stack and sample applications for BlueNRG-MS module, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=BlueNRG-MS, maxVersion=, packVersion=1.0.0, bundle=BlueNRG-MS, class=Wireless, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591496, root = 1561139591496], 1561139591504=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.BlueNRG-MS_GettingStarted.pdf, labelVersion=, label=false, version=0.0.2, downloaded=PackMustBeDownloaded, component_doc=Projects/Board_PN/Applications/SensorDemo/readme.txt, dependencySatus=-1, compatibilityStatus=true, packDescription=BLE stack and sample applications for BlueNRG-MS module, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=BlueNRG-MS, maxVersion=, packVersion=1.0.0, bundle=Application, class=Wireless, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591504, root = 1561139591504], 1561139591505=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.X-CUBE-BLE1_GettingStarted.pdf, labelVersion=, label=false, version=0.0.2, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=BLE stack and sample applications for BlueNRG-MS module, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-BLE1, maxVersion=, packVersion=1.1.0, bundle=BlueNRG-MS, class=Wireless, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591505, root = 1561139591505], 1561139591506=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.X-CUBE-BLE1_GettingStarted.pdf, labelVersion=, label=false, version=0.0.2, downloaded=PackMustBeDownloaded, component_doc=Projects/Board_PN/Applications/SensorDemo/readme.txt, dependencySatus=-1, compatibilityStatus=true, packDescription=BLE stack and sample applications for BlueNRG-MS module, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-BLE1, maxVersion=, packVersion=1.1.0, bundle=Application, class=Wireless, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591506, root = 1561139591506], 1561139591507=PackComponentInfo [info = {minVersion=, api version=5.1.0, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.1.0, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.1.0, bundle=MEMS, class=Board Component, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591507, root = 1561139591507], 1561139591508=PackComponentInfo [info = {minVersion=, api version=5.1.0, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.1.0, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.1.0, bundle=MEMS, class=Board Extension, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591508, root = 1561139591508], 1561139591509=PackComponentInfo [info = {minVersion=, api version=5.1.0, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.1.0, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.1.0, bundle=STM32Cube_Custom_BSP_Drivers, class=Board Support, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591509, root = 1561139591509], 1561139591510=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.1.0, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=END_USER_LICENCE_AGREEMENT.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.1.0, bundle=Application, class=Device, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591510, root = 1561139591510], 1561139591511=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.X-CUBE-BLE1_GettingStarted.pdf, labelVersion=, label=false, version=0.0.2, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=BLE stack and sample applications for BlueNRG-MS module, license=en.DM00367782.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-BLE1, maxVersion=, packVersion=4.2.0, bundle=BlueNRG-MS, class=Wireless, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591511, root = 1561139591511], 1561139591512=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.X-CUBE-BLE1_GettingStarted.pdf, labelVersion=, label=false, version=0.0.2, downloaded=PackMustBeDownloaded, component_doc=Projects/Board_PN/Applications/SensorDemo/readme.txt, dependencySatus=-1, compatibilityStatus=true, packDescription=BLE stack and sample applications for BlueNRG-MS module, license=en.DM00367782.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-BLE1, maxVersion=, packVersion=4.2.0, bundle=Application, class=Wireless, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591512, root = 1561139591512], 1561139591513=PackComponentInfo [info = {minVersion=, api version=5.2.1, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.2.1, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=en.DM00367782.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.2.1, bundle=MEMS, class=Board Component, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591513, root = 1561139591513], 1561139591514=PackComponentInfo [info = {minVersion=, api version=5.2.1, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.2.1, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=en.DM00367782.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.2.1, bundle=MEMS, class=Board Extension, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591514, root = 1561139591514], 1561139591515=PackComponentInfo [info = {minVersion=, api version=5.2.1, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.2.1, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=en.DM00367782.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.2.1, bundle=STM32Cube_Custom_BSP_Drivers, class=Board Support, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591515, root = 1561139591515], 1561139591516=PackComponentInfo [info = {minVersion=, documentation=Documentation/STMicroelectronics.X-CUBE-MEMS1_GettingStarted.pdf, labelVersion=, label=false, version=5.2.1, downloaded=PackMustBeDownloaded, dependencySatus=-1, compatibilityStatus=true, packDescription=Drivers and sample applications for MEMS components, license=en.DM00367782.pdf, max instances=1, vendor=STMicroelectronics, name=X-CUBE-MEMS1, maxVersion=, packVersion=5.2.1, bundle=Application, class=Device, selected=false}, state = 1, solution = 0, dependencyStatus = -1, id = 1561139591516, root = 1561139591516]}
2019-06-21 18:53:11,506 [DEBUG] UITreeTableRework:463 - availableClassesList: [Board Component, Board Extension, Board Support, Device, Wireless]
2019-06-21 18:53:11,506 [DEBUG] UITreeTableRework:464 - availableVendorsList: [STMicroelectronics]
2019-06-21 18:53:11,506 [DEBUG] UITreeTableRework:465 - availablePackVersionsList: [1.0.0, 1.1.0, 4.2.0, 5.1.0, 5.2.1]
2019-06-21 18:53:11,506 [DEBUG] UITreeTableRework:470 - time to update the tree table now
2019-06-21 18:53:11,506 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: BlueNRG-MS/BlueNRG-MS/1.0.0]  [Class: Wireless]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591496 Root: 1561139591496
2019-06-21 18:53:11,507 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: BlueNRG-MS/Application/1.0.0]  [Class: Wireless]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591504 Root: 1561139591504
2019-06-21 18:53:11,507 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-BLE1/BlueNRG-MS/1.1.0]  [Class: Wireless]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591505 Root: 1561139591505
2019-06-21 18:53:11,507 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-BLE1/Application/1.1.0]  [Class: Wireless]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591506 Root: 1561139591506
2019-06-21 18:53:11,507 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/MEMS/5.1.0]  [Class: Board Component]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591507 Root: 1561139591507
2019-06-21 18:53:11,508 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/MEMS/5.1.0]  [Class: Board Extension]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591508 Root: 1561139591508
2019-06-21 18:53:11,508 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/STM32Cube_Custom_BSP_Drivers/5.1.0]  [Class: Board Support]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591509 Root: 1561139591509
2019-06-21 18:53:11,508 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/Application/5.1.0]  [Class: Device]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591510 Root: 1561139591510
2019-06-21 18:53:11,508 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-BLE1/BlueNRG-MS/4.2.0]  [Class: Wireless]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591511 Root: 1561139591511
2019-06-21 18:53:11,508 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-BLE1/Application/4.2.0]  [Class: Wireless]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591512 Root: 1561139591512
2019-06-21 18:53:11,509 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/MEMS/5.2.1]  [Class: Board Component]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591513 Root: 1561139591513
2019-06-21 18:53:11,509 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/MEMS/5.2.1]  [Class: Board Extension]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591514 Root: 1561139591514
2019-06-21 18:53:11,509 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/STM32Cube_Custom_BSP_Drivers/5.2.1]  [Class: Board Support]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591515 Root: 1561139591515
2019-06-21 18:53:11,509 [DEBUG] UITreeTableRework:475 - FILTERED:  [Vendor: STMicroelectronics]  [Pack/Bundle/Version: X-CUBE-MEMS1/Application/5.2.1]  [Class: Device]  [ Group: null]  [ Variant: null]  [ Downloaded: PackMustBeDownloaded]  Id: 1561139591516 Root: 1561139591516
2019-06-21 18:53:11,516 [DEBUG] TreeTablePanelRework:272 - building nodes
2019-06-21 18:53:11,574 [DEBUG] SharedServices:215 - TP_ADVANCED_MODE null
2019-06-21 18:53:11,574 [DEBUG] SharedServices:217 - TP_ADVANCED_MODE is null
2019-06-21 18:53:11,584 [DEBUG] UITreeTableRework:262 - MessageId: 80 ==> [STMicroelectronics]
2019-06-21 18:53:11,585 [DEBUG] UITreeTableRework:273 - [STMicroelectronics]
2019-06-21 18:53:11,585 [DEBUG] FilterVendorPanel:107 - VENDORS:[STMicroelectronics]
2019-06-21 18:53:11,585 [DEBUG] FilterVendorPanel:113 - []
2019-06-21 18:53:11,586 [DEBUG] UITreeTableRework:262 - MessageId: 81 ==> [Wireless, Board Component, Board Extension, Board Support, Device]
2019-06-21 18:53:11,587 [DEBUG] UITreeTableRework:282 - [Board Component, Board Extension, Board Support, Device, Wireless]
2019-06-21 18:53:11,587 [DEBUG] FilterClassPanel:105 - CLASSES:[Board Component, Board Extension, Board Support, Device, Wireless]
2019-06-21 18:53:11,587 [DEBUG] FilterClassPanel:111 - []
2019-06-21 18:53:11,588 [INFO] ThirdParty:1207 - CMSIS Pack Vendor :STMicroelectronics BlueNRG-MS 1.0.0
2019-06-21 18:53:11,588 [INFO] ThirdParty:1207 - CMSIS Pack Vendor :STMicroelectronics X-CUBE-BLE1 1.1.0
2019-06-21 18:53:11,589 [INFO] ThirdParty:1207 - CMSIS Pack Vendor :STMicroelectronics X-CUBE-MEMS1 5.1.0
2019-06-21 18:53:11,589 [INFO] ThirdParty:1207 - CMSIS Pack Vendor :STMicroelectronics X-CUBE-BLE1 4.2.0
2019-06-21 18:53:11,589 [INFO] ThirdParty:1207 - CMSIS Pack Vendor :STMicroelectronics X-CUBE-MEMS1 5.2.1
2019-06-21 18:53:11,589 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemChangeProject
2019-06-21 18:53:11,590 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiStatus NoIPSelected
2019-06-21 18:53:11,590 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiStatus
2019-06-21 18:53:11,590 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiStatus
2019-06-21 18:53:11,591 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiStatus
2019-06-21 18:53:11,591 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiStatus
2019-06-21 18:53:11,591 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiStatus
2019-06-21 18:53:11,591 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiStatus
2019-06-21 18:53:11,592 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiStatus
2019-06-21 18:53:11,592 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiStatus
2019-06-21 18:53:11,592 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiStatus
2019-06-21 18:53:11,592 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiStatus
2019-06-21 18:53:11,592 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiStatus
2019-06-21 18:53:11,593 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiStatus
2019-06-21 18:53:11,593 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiStatus NoIPSelected
2019-06-21 18:53:11,846 [DEBUG] MxSystem:282 - Added com.st.microxplorer.peripheralpanel.PeripheralTree@479c6b2a by com.st.microxplorer.peripheralpanel.PeripheralTree.stuffInConstructor / Number of listeners = 21
2019-06-21 18:53:11,922 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemChangeProject
2019-06-21 18:53:11,922 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemChangeProject
2019-06-21 18:53:11,924 [INFO] PinOutPanel:1361 - setPackage(No Configuration,No Configuration)
2019-06-21 18:53:11,924 [DEBUG] ToolPreferences:49 - key=Pinout.displaylabel, def=true, readString=true
2019-06-21 18:53:11,926 [INFO] PinOutPanel:1361 - setPackage(STM32F401CCFx,WLCSP49)
2019-06-21 18:53:11,947 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemChangeProject
2019-06-21 18:53:12,129 [DEBUG] MXPropertyChangeSupport:62 - Start MXSystem Refreshing firePropertyChange: EventMcuSetIPParameter RCC
2019-06-21 18:53:12,129 [DEBUG] Mcu:1272 - InternalPropertyChange: EventMcuSetIPParameter OLD value:RCC / NEW value:Never Mind
2019-06-21 18:53:12,129 [DEBUG] Mcu:2532 - ====> checkEnable
2019-06-21 18:53:12,157 [DEBUG] Mcu:2540 - <==== checkEnable true
2019-06-21 18:53:12,157 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMcuSetIPParameter
2019-06-21 18:53:12,158 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMcuSetIPParameter
2019-06-21 18:53:12,158 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMcuSetIPParameter
2019-06-21 18:53:12,171 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMcuSetIPParameter
2019-06-21 18:53:12,171 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMcuSetIPParameter
2019-06-21 18:53:12,171 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMcuSetIPParameter
2019-06-21 18:53:12,171 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMcuSetIPParameter
2019-06-21 18:53:12,172 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMcuSetIPParameter
2019-06-21 18:53:12,172 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMcuSetIPParameter
2019-06-21 18:53:12,172 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMcuSetIPParameter
2019-06-21 18:53:12,172 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMcuSetIPParameter
2019-06-21 18:53:12,172 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:53:12,172 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:12,173 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMcuSetIPParameter
2019-06-21 18:53:12,174 [DEBUG] MXPropertyChangeSupport:66 - End MXSystem Refreshing firePropertyChange: EventMcuSetIPParameter RCC
2019-06-21 18:53:12,522 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:53:12,523 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:12,528 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiStartUndoRedo don't care
2019-06-21 18:53:12,530 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiStartUndoRedo
2019-06-21 18:53:12,531 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiStartUndoRedo
2019-06-21 18:53:12,532 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiStartUndoRedo
2019-06-21 18:53:12,532 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiStartUndoRedo
2019-06-21 18:53:12,532 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiStartUndoRedo
2019-06-21 18:53:12,532 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiStartUndoRedo
2019-06-21 18:53:12,532 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiStartUndoRedo
2019-06-21 18:53:12,533 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiStartUndoRedo
2019-06-21 18:53:12,533 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiStartUndoRedo
2019-06-21 18:53:12,533 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiStartUndoRedo
2019-06-21 18:53:12,533 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiStartUndoRedo
2019-06-21 18:53:12,533 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiStartUndoRedo
2019-06-21 18:53:12,534 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiStartUndoRedo don't care
2019-06-21 18:53:12,581 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiCheckErrorsInRCC true
2019-06-21 18:53:12,581 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,581 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,582 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,582 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,582 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,582 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,582 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,583 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,583 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,583 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,583 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,583 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:12,583 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiCheckErrorsInRCC true
2019-06-21 18:53:12,584 [INFO] UtilMem:74 - Before build in PCC Used Memory: 335526776 Bytes (706740224)
2019-06-21 18:53:13,066 [INFO] SharedServices:71 - Folder for power plug-in: C:/Users/Afonso Muralha/.stm32cubemx/plugins/power
2019-06-21 18:53:13,067 [INFO] UtilMem:74 - After build in PCC Used Memory: 347589632 Bytes (706740224)
2019-06-21 18:53:13,067 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemChangeProject
2019-06-21 18:53:13,085 [DEBUG] FreeRTOS:95 - FreeRTOS constructor
2019-06-21 18:53:13,089 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.spi.Spi@31323f0e by com.st.microxplorer.plugins.ip.spi.Spi.onDisable / Number of listeners = 21
2019-06-21 18:53:13,090 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.spi.Spi@7fd3362d by com.st.microxplorer.plugins.ip.spi.Spi.onDisable / Number of listeners = 21
2019-06-21 18:53:13,090 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.spi.Spi@4135d153 by com.st.microxplorer.plugins.ip.spi.Spi.onDisable / Number of listeners = 21
2019-06-21 18:53:13,091 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.nvic.Nvic@38c17f4 by com.st.microxplorer.plugins.ip.nvic.Nvic.onDisable / Number of listeners = 21
2019-06-21 18:53:13,091 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.usart.Usart@236692c4 by com.st.microxplorer.plugins.ip.usart.Usart.onDisable / Number of listeners = 21
2019-06-21 18:53:13,091 [DEBUG] FreeRTOS:179 - onDisable (com.st.microxplorer.plugins.ip.freertos.FreeRTOS@45e2aadb)
2019-06-21 18:53:13,095 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.usart.Usart@36c8ef56 by com.st.microxplorer.plugins.ip.usart.Usart.onDisable / Number of listeners = 21
2019-06-21 18:53:13,095 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.usart.Usart@69de35e2 by com.st.microxplorer.plugins.ip.usart.Usart.onDisable / Number of listeners = 21
2019-06-21 18:53:13,096 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.dma.Dma@1bd84265 by com.st.microxplorer.plugins.ip.dma.Dma.onDisable / Number of listeners = 21
2019-06-21 18:53:13,096 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.i2s.I2s@1fa7b1ce by com.st.microxplorer.plugins.ip.i2s.I2s.onDisable / Number of listeners = 21
2019-06-21 18:53:13,097 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.i2s.I2s@6e645f33 by com.st.microxplorer.plugins.ip.i2s.I2s.onDisable / Number of listeners = 21
2019-06-21 18:53:13,097 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.pdm2pcm.Pdm2pcm@760d0638 by com.st.microxplorer.plugins.ip.pdm2pcm.Pdm2pcm.onDisable / Number of listeners = 21
2019-06-21 18:53:13,097 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.i2c.I2C@2f1fa9f6 by com.st.microxplorer.plugins.ip.i2c.I2C.onDisable / Number of listeners = 21
2019-06-21 18:53:13,098 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.i2c.I2C@d14541a by com.st.microxplorer.plugins.ip.i2c.I2C.onDisable / Number of listeners = 21
2019-06-21 18:53:13,098 [DEBUG] MxSystem:356 - Removed com.st.microxplorer.plugins.ip.i2c.I2C@41c51f4c by com.st.microxplorer.plugins.ip.i2c.I2C.onDisable / Number of listeners = 21
2019-06-21 18:53:13,098 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ip.dma.Dma@1bd84265 by com.st.microxplorer.plugins.ip.dma.Dma.onEnable / Number of listeners = 22
2019-06-21 18:53:13,099 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ip.nvic.Nvic@38c17f4 by com.st.microxplorer.plugins.ip.nvic.Nvic.onEnable / Number of listeners = 23
2019-06-21 18:53:13,101 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemChangeProject
2019-06-21 18:53:13,101 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemChangeProject
2019-06-21 18:53:13,102 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemChangeProject
2019-06-21 18:53:13,102 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemChangeProject
2019-06-21 18:53:13,104 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiLeavePinoutAndConfiguration null
2019-06-21 18:53:13,105 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,105 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,106 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,106 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,106 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,107 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,107 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,107 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,107 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,107 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,108 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,108 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,108 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiLeavePinoutAndConfiguration null
2019-06-21 18:53:13,109 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,124 [DEBUG] MicroXplorer:577 - toolchainItems.length=====1
2019-06-21 18:53:13,256 [DEBUG] ToolPreferences:49 - key=ProjectManager.ProjectPath, def=, readString=C:\Users\Afonso Muralha\Documents\GitHub\ISTSAT-1\ADCS\MagnetorquersTest\Test Code\
2019-06-21 18:53:13,257 [DEBUG] ToolPreferences:49 - key=ProjectManager.ProjectPath, def=, readString=C:\Users\Afonso Muralha\Documents\GitHub\ISTSAT-1\ADCS\MagnetorquersTest\Test Code\
2019-06-21 18:53:13,258 [DEBUG] ToolPreferences:49 - key=ProjectManager.ProjectPath, def=, readString=C:\Users\Afonso Muralha\Documents\GitHub\ISTSAT-1\ADCS\MagnetorquersTest\Test Code\
2019-06-21 18:53:13,262 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-21 18:53:13,263 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-21 18:53:13,263 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,263 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-21 18:53:13,263 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:53:13,269 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:53:13,273 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiLeavePinoutAndConfiguration null
2019-06-21 18:53:13,273 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,273 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,274 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,274 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,275 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,275 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,275 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,275 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,275 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,276 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,276 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,276 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiLeavePinoutAndConfiguration
2019-06-21 18:53:13,276 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiLeavePinoutAndConfiguration null
2019-06-21 18:53:13,276 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,277 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,277 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:53:13,278 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,278 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemChangeProject
2019-06-21 18:53:13,279 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemChangeProject don't care
2019-06-21 18:53:13,279 [INFO] OpenFileManager:289 - Restore cursor
2019-06-21 18:53:13,281 [DEBUG] ToolPreferences:42 - key=FileManager.FilePathName, value=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Test.ioc
2019-06-21 18:53:13,282 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,282 [DEBUG] ToolPreferences:42 - key=FileManager.MostRecentFiles, value=C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Test.ioc;C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Gif-Player-Badge\Gif-Player-Badge.ioc
2019-06-21 18:53:13,283 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiEndLoadConfig true
2019-06-21 18:53:13,284 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiEndLoadConfig
2019-06-21 18:53:13,284 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiEndLoadConfig
2019-06-21 18:53:13,285 [DEBUG] FileManagerView:196 - iTypeTask=10, clParamTask=null
2019-06-21 18:53:13,288 [DEBUG] FileManagerView:196 - iTypeTask=10, clParamTask=null
2019-06-21 18:53:13,290 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-21 18:53:13,291 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-21 18:53:13,291 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,292 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,292 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,293 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-21 18:53:13,293 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:53:13,297 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:53:13,298 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiEndLoadConfig
2019-06-21 18:53:13,299 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiEndLoadConfig
2019-06-21 18:53:13,299 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiEndLoadConfig
2019-06-21 18:53:13,299 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiEndLoadConfig
2019-06-21 18:53:13,299 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiCheckErrorsInRCC true
2019-06-21 18:53:13,299 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,299 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,300 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,300 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,300 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,301 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,301 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,301 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,301 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,301 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,301 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,302 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiCheckErrorsInRCC
2019-06-21 18:53:13,302 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiCheckErrorsInRCC true
2019-06-21 18:53:13,302 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiEndLoadConfig
2019-06-21 18:53:13,305 [DEBUG] ParamManager:813 - Start setConfigurationState RCC
2019-06-21 18:53:13,364 [DEBUG] ParamManager:862 - End setConfigurationState RCC CONFIGURED
2019-06-21 18:53:13,364 [DEBUG] BlockDiagram:1904 - start ghatherIpErrorStates
2019-06-21 18:53:13,365 [DEBUG] Usart:122 - m_clParamManager is null!!!
2019-06-21 18:53:13,365 [DEBUG] FreeRTOS:688 - paramManager is null !!!
2019-06-21 18:53:13,365 [DEBUG] Usart:122 - m_clParamManager is null!!!
2019-06-21 18:53:13,365 [DEBUG] Usart:122 - m_clParamManager is null!!!
2019-06-21 18:53:13,366 [DEBUG] IPUIPlugin:293 - Start setConfigurationState PDM2PCM
2019-06-21 18:53:13,367 [DEBUG] IPUIPlugin:303 - End setConfigurationState PDM2PCM NOT_USED
2019-06-21 18:53:13,367 [DEBUG] I2C:95 - m_clParamManager is null!!!
2019-06-21 18:53:13,367 [DEBUG] I2C:95 - m_clParamManager is null!!!
2019-06-21 18:53:13,367 [DEBUG] I2C:95 - m_clParamManager is null!!!
2019-06-21 18:53:13,368 [DEBUG] Fatfs:66 - m_clParamManager is null!!!
2019-06-21 18:53:13,368 [DEBUG] BlockDiagram:1922 - end ghatherIpErrorStates
2019-06-21 18:53:13,368 [DEBUG] BlockDiagram:1892 - start checkBlockDiagramState
2019-06-21 18:53:13,368 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiConfigurationError true
2019-06-21 18:53:13,368 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiConfigurationError
2019-06-21 18:53:13,368 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiConfigurationError
2019-06-21 18:53:13,369 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-21 18:53:13,375 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-21 18:53:13,375 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-21 18:53:13,375 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-21 18:53:13,375 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-21 18:53:13,376 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-21 18:53:13,376 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-21 18:53:13,376 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-21 18:53:13,376 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiConfigurationError
2019-06-21 18:53:13,376 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiConfigurationError
2019-06-21 18:53:13,377 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiConfigurationError true
2019-06-21 18:53:13,377 [DEBUG] BlockDiagram:1900 - end checkBlockDiagramState
2019-06-21 18:53:13,377 [DEBUG] BlockDiagram:1235 - Start updateAllDiagram  
2019-06-21 18:53:13,382 [DEBUG] BlockDiagram:1017 - start updateBtnsStatus
2019-06-21 18:53:13,383 [DEBUG] BlockDiagram:1124 - -----------------------------
2019-06-21 18:53:13,383 [DEBUG] BlockDiagram:1126 - ---------- End --------------
2019-06-21 18:53:13,384 [DEBUG] BlockDiagram:1128 - end updateBtnsStatus
2019-06-21 18:53:13,384 [DEBUG] BlockDiagram:1953 - start ghatherIpErrorStates(map)
2019-06-21 18:53:13,385 [DEBUG] BlockDiagram:1970 - end ghatherIpErrorStates(map)
2019-06-21 18:53:13,385 [DEBUG] BlockDiagram:1892 - start checkBlockDiagramState
2019-06-21 18:53:13,385 [DEBUG] BlockDiagram:1900 - end checkBlockDiagramState
2019-06-21 18:53:13,385 [DEBUG] MXPropertyChangeSupport:62 - Start MXSystem Refreshing firePropertyChange: EventGuiConfigurationError true
2019-06-21 18:53:13,385 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiConfigurationError
2019-06-21 18:53:13,386 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiConfigurationError
2019-06-21 18:53:13,386 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-21 18:53:13,393 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-21 18:53:13,393 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-21 18:53:13,393 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-21 18:53:13,393 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-21 18:53:13,394 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-21 18:53:13,394 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-21 18:53:13,394 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-21 18:53:13,394 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiConfigurationError
2019-06-21 18:53:13,394 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiConfigurationError
2019-06-21 18:53:13,394 [DEBUG] MXPropertyChangeSupport:66 - End MXSystem Refreshing firePropertyChange: EventGuiConfigurationError true
2019-06-21 18:53:13,395 [DEBUG] BlockDiagram:1261 - End updateAllDiagram  
2019-06-21 18:53:13,395 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiEndLoadConfig
2019-06-21 18:53:13,395 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiEndLoadConfig
2019-06-21 18:53:13,395 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiEndLoadConfig
2019-06-21 18:53:13,395 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiEndLoadConfig
2019-06-21 18:53:13,395 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:53:13,395 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,396 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,396 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiEndLoadConfig
2019-06-21 18:53:13,396 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiEndLoadConfig true
2019-06-21 18:53:13,397 [DEBUG] FileManagerView:196 - iTypeTask=10, clParamTask=null
2019-06-21 18:53:13,398 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-21 18:53:13,399 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-21 18:53:13,399 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,399 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,399 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,400 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,400 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,400 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-21 18:53:13,401 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:53:13,405 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:53:13,407 [DEBUG] MxSystem:282 - Added null@6275c2cd by com.st.stm32cube.common.mx.editor.CubeMxEditor.setListeners / Number of listeners = 24
2019-06-21 18:53:13,429 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,429 [DEBUG] BlockDiagram:1235 - Start updateAllDiagram  
2019-06-21 18:53:13,435 [DEBUG] BlockDiagram:1017 - start updateBtnsStatus
2019-06-21 18:53:13,436 [DEBUG] BlockDiagram:1124 - -----------------------------
2019-06-21 18:53:13,436 [DEBUG] BlockDiagram:1126 - ---------- End --------------
2019-06-21 18:53:13,436 [DEBUG] BlockDiagram:1128 - end updateBtnsStatus
2019-06-21 18:53:13,436 [DEBUG] BlockDiagram:1953 - start ghatherIpErrorStates(map)
2019-06-21 18:53:13,437 [DEBUG] BlockDiagram:1970 - end ghatherIpErrorStates(map)
2019-06-21 18:53:13,437 [DEBUG] BlockDiagram:1892 - start checkBlockDiagramState
2019-06-21 18:53:13,437 [DEBUG] BlockDiagram:1900 - end checkBlockDiagramState
2019-06-21 18:53:13,437 [DEBUG] MXPropertyChangeSupport:62 - Start MXSystem Refreshing firePropertyChange: EventGuiConfigurationError true
2019-06-21 18:53:13,438 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiConfigurationError
2019-06-21 18:53:13,438 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiConfigurationError
2019-06-21 18:53:13,438 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-21 18:53:13,443 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-21 18:53:13,444 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-21 18:53:13,444 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-21 18:53:13,444 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-21 18:53:13,444 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-21 18:53:13,444 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-21 18:53:13,445 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-21 18:53:13,445 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiConfigurationError
2019-06-21 18:53:13,445 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiConfigurationError
2019-06-21 18:53:13,445 [DEBUG] MXPropertyChangeSupport:66 - End MXSystem Refreshing firePropertyChange: EventGuiConfigurationError true
2019-06-21 18:53:13,446 [DEBUG] BlockDiagram:1261 - End updateAllDiagram  
2019-06-21 18:53:13,446 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement@6c7bc8ac by com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement.updateAllDiagram / Number of listeners = 25
2019-06-21 18:53:13,446 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,447 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,447 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,448 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,448 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,450 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,450 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-21 18:53:13,555 [DEBUG] PinoutAndConfigurationView:717 - sp_ModeConfig - pce.getPropertyName() : dividerLocation0.5
2019-06-21 18:53:13,565 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : preferredSize
2019-06-21 18:53:13,566 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : preferredSize
2019-06-21 18:53:13,567 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: -0.2
2019-06-21 18:53:13,574 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: -0.2
2019-06-21 18:53:13,574 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: -0.2
2019-06-21 18:53:13,590 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: -0.2
2019-06-21 18:53:13,690 [DEBUG] FileManagerView:196 - iTypeTask=10, clParamTask=null
2019-06-21 18:53:13,692 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-21 18:53:13,693 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-21 18:53:13,693 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,694 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,694 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,695 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,695 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,696 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,696 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,696 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-21 18:53:13,697 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:53:13,703 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:53:13,705 [DEBUG] FileManagerView:196 - iTypeTask=4, clParamTask=
2019-06-21 18:53:13,706 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-21 18:53:13,709 [INFO] UtilMem:74 - End SaveConfig() Used Memory: 377996144 Bytes (706740224)
2019-06-21 18:53:13,711 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-21 18:53:13,712 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-21 18:53:13,712 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,713 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,713 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,713 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,714 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,714 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,715 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,715 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,715 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-21 18:53:13,716 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-21 18:53:13,716 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:53:13,722 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:53:13,803 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-21 18:53:13,803 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-21 18:53:13,803 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-21 18:53:13,804 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-21 18:53:13,804 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-21 18:53:13,804 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemSaveProject
2019-06-21 18:53:13,805 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemSaveProject
2019-06-21 18:53:13,806 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-21 18:53:13,806 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-21 18:53:13,806 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,806 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-21 18:53:13,811 [DEBUG] CodeGenerator:4847 - Start prepareFunctionList()
2019-06-21 18:53:13,813 [DEBUG] CodeGenerator:5073 - End prepareFunctionList()
2019-06-21 18:53:13,813 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: FctUpdates 
2019-06-21 18:53:13,813 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: FctUpdates
2019-06-21 18:53:13,813 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: FctUpdates
2019-06-21 18:53:13,814 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-21 18:53:13,815 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-21 18:53:13,816 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : FctUpdates
2019-06-21 18:53:13,816 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : FctUpdates
2019-06-21 18:53:13,816 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: FctUpdates
2019-06-21 18:53:13,817 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: FctUpdates
2019-06-21 18:53:13,817 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-21 18:53:13,817 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-21 18:53:13,817 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : FctUpdates
2019-06-21 18:53:13,817 [DEBUG] MainPanel:779 - End propertyChange MainPanel : FctUpdates
2019-06-21 18:53:13,817 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: FctUpdates 
2019-06-21 18:53:13,818 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 18:53:13,818 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:53:13,823 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:53:13,825 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 18:53:13,825 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:53:13,825 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:53:13,825 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 18:53:13,826 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:53:13,829 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 18:53:13,837 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:53:13,839 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 18:53:13,855 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 18:53:13,960 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1240.zip
2019-06-21 18:53:13,963 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 18:53:13,966 [DEBUG] ParameterSetting:147 - Reload parameters ini : 2 ms.
2019-06-21 18:53:13,971 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 5 ms.
2019-06-21 18:53:13,971 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 18:53:13,972 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 18:53:13,979 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 18:53:13,980 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 18:53:13,995 [DEBUG] PinoutAndConfigurationView:1659 - Resize component
2019-06-21 18:53:13,996 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: 0.9
2019-06-21 18:53:14,089 [DEBUG] PinoutAndConfigurationView:578 - sp_PinoutAndSystemViews - pce.getPropertyName() : dividerLocation1.0
2019-06-21 18:53:14,308 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 18:53:14,309 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 18:53:14,309 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 346 ms.
2019-06-21 18:53:14,739 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1240.zip
2019-06-21 18:53:14,742 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 18:58:36,390 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 18:58:36,391 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 18:58:36,527 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1240.zip.
2019-06-21 18:58:40,461 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-21 18:58:40,464 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 18:58:40,465 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 326601 ms.
2019-06-21 18:58:40,466 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-21 18:58:40,484 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 18:58:40,489 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-21 18:58:40,494 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 18:58:40,495 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 18:58:40,496 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 18:58:40,496 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 18:58:40,502 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,505 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,518 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,518 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,519 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 18:58:40,519 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 18:58:40,519 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,520 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,520 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,522 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 18:58:40,522 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 18:58:40,588 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 18:58:40,589 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 18:58:40,589 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 18:58:40,589 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 18:58:40,593 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 18:58:40,593 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 18:58:40,598 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 4 ms.
2019-06-21 18:58:40,616 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 18:58:40,622 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 137 ms.
2019-06-21 18:58:40,622 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 18:58:46,109 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4425,5,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G4)-PB1 : Reset_State</h4><br><div><body></html>]
2019-06-21 18:58:46,109 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 18:58:46,110 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 18:58:53,009 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 18:58:53,009 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 18:58:53,019 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 18:58:53,022 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 18:58:53,022 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 18:58:53,022 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 18:58:53,022 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 18:58:53,024 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:58:53,031 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 18:58:53,033 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 18:58:53,033 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 18:58:53,104 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 18:58:53,122 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1240.zip
2019-06-21 18:58:53,125 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 18:58:53,127 [DEBUG] ParameterSetting:147 - Reload parameters ini : 2 ms.
2019-06-21 18:58:53,139 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 5 ms.
2019-06-21 18:58:53,141 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 18:58:53,142 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 18:58:53,143 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 18:58:53,143 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 18:58:53,485 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 18:58:53,486 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 18:58:53,486 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 361 ms.
2019-06-21 18:58:53,487 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1240.zip
2019-06-21 18:58:53,490 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 19:00:07,732 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 19:00:07,732 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 19:00:07,757 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1240.zip.
2019-06-21 19:00:09,936 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-21 19:00:09,938 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 19:00:09,939 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 19:00:09,939 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-21 19:00:09,940 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 19:00:09,940 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 19:00:09,942 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 19:00:09,942 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 76837 ms.
2019-06-21 19:00:09,942 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,943 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,943 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,944 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,943 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-21 19:00:09,944 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 19:00:09,947 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 19:00:09,947 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 19:00:09,948 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,949 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,949 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,949 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 19:00:09,950 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 19:00:09,986 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 19:00:09,986 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 19:00:09,986 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 19:00:09,987 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 19:00:09,987 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 19:00:09,988 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 19:00:09,994 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 6 ms.
2019-06-21 19:00:09,997 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 19:00:10,023 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 75 ms.
2019-06-21 19:00:10,024 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 19:01:19,988 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4425,5,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G4)-PB1 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:01:19,989 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:01:19,989 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:01:20,221 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4506,4648,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G4)-PB1 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:01:20,221 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:01:20,221 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:01:20,282 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4506,4648,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G4)-PB1 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:01:20,282 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:01:20,283 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:01:20,321 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4506,4648,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G4)-PB1 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:01:20,321 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:01:20,321 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:01:20,346 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4506,4648,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G4)-PB1 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:01:20,347 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:01:20,347 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:01:22,353 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 19:01:22,353 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 19:01:22,362 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 19:01:22,365 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 19:01:22,365 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 19:01:22,366 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 19:01:22,366 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 19:01:22,368 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 19:01:22,375 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 19:01:22,376 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 19:01:22,377 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 19:01:22,602 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 19:01:22,649 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1240.zip
2019-06-21 19:01:22,659 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 19:01:22,660 [DEBUG] ParameterSetting:147 - Reload parameters ini : 0 ms.
2019-06-21 19:01:22,662 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 1 ms.
2019-06-21 19:01:22,662 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 19:01:22,663 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 19:01:22,663 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 19:01:22,664 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 19:01:22,843 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 19:01:22,844 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 19:01:22,844 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 185 ms.
2019-06-21 19:01:22,845 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1240.zip
2019-06-21 19:01:22,848 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 19:02:51,498 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 19:02:51,498 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 19:02:51,529 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1240.zip.
2019-06-21 19:02:57,112 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-21 19:02:57,112 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 19:02:57,113 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 19:02:57,113 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-21 19:02:57,113 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 19:02:57,113 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 19:02:57,114 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 19:02:57,115 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 94510 ms.
2019-06-21 19:02:57,116 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-21 19:02:57,116 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,118 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,119 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,118 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 19:02:57,119 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,120 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 19:02:57,120 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 19:02:57,120 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,121 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,121 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,121 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 19:02:57,121 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 19:02:57,150 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 19:02:57,151 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 19:02:57,151 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 19:02:57,151 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 19:02:57,151 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 19:02:57,151 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 19:02:57,156 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 5 ms.
2019-06-21 19:02:57,159 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 19:02:57,181 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 62 ms.
2019-06-21 19:02:57,182 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 19:03:00,420 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4425,5,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G5)-PB0 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:03:00,420 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:03:00,420 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:03:00,504 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4442,5,116x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(F2)-VDD : Power</h4><br><div><body></html>]
2019-06-21 19:03:00,504 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:03:00,504 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:03:00,532 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4422,5,156x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(E1)-PB15 : Reset_State</h4><br><div><body></html>]
2019-06-21 19:03:00,533 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 19:03:00,533 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 19:03:03,431 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 19:03:03,432 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 19:03:03,441 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 19:03:03,443 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 19:03:03,444 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 19:03:03,444 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 19:03:03,444 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 19:03:03,446 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 19:03:03,450 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 19:03:03,451 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 19:03:03,452 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 19:03:03,453 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 19:03:03,539 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1240.zip
2019-06-21 19:03:03,544 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 19:03:03,545 [DEBUG] ParameterSetting:147 - Reload parameters ini : 1 ms.
2019-06-21 19:03:03,551 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 6 ms.
2019-06-21 19:03:03,551 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 19:03:03,552 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 19:03:03,552 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 19:03:03,552 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 19:03:03,686 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 19:03:03,687 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 19:03:03,687 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 143 ms.
2019-06-21 19:03:03,688 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1240.zip
2019-06-21 19:03:03,695 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 19:07:09,150 [DEBUG] ServerAccessManage:393 - Read Count = -1  total = 699638911
2019-06-21 19:07:09,151 [DEBUG] ServerAccessManage:396 - Read http file execution time : 245456 ms.
2019-06-21 19:07:09,398 [DEBUG] LicenseAgreementManager:135 - Unsupported licence acceptance type: 2
2019-06-21 19:07:09,398 [DEBUG] LoadServerPackagesThread:163 - License agreement status : true
2019-06-21 19:07:09,400 [INFO] FileExtend:190 - Unzip File : stm32cube_fw_f4_v1240.zip
2019-06-21 19:07:09,403 [INFO] FileExtend:205 - Standard Zip Deflate
2019-06-21 20:12:49,228 [DEBUG] FileExtend:281 - Unzip file exec time : 3939828 ms.
2019-06-21 20:12:49,229 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1241.zip
2019-06-21 20:12:49,234 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 20:12:49,242 [DEBUG] ParameterSetting:147 - Reload parameters ini : 8 ms.
2019-06-21 20:12:49,243 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 1 ms.
2019-06-21 20:12:49,243 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 20:12:49,243 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 20:12:49,244 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 20:12:49,244 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 20:12:49,452 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 20:12:49,452 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 20:12:49,452 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 218 ms.
2019-06-21 20:12:49,452 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1241.zip
2019-06-21 20:12:49,455 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 20:14:09,069 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 20:14:09,069 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 20:14:09,080 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1241.zip.
2019-06-21 20:14:43,353 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-21 20:14:43,353 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 20:14:43,354 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 20:14:43,354 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-21 20:14:43,354 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 20:14:43,354 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 20:14:43,354 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 20:14:43,355 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,355 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,355 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 4299902 ms.
2019-06-21 20:14:43,355 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,355 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-21 20:14:43,355 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 20:14:43,355 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,356 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 20:14:43,356 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 20:14:43,356 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,357 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,357 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,357 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 20:14:43,357 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 20:14:43,395 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 20:14:43,395 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 20:14:43,395 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 20:14:43,395 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 20:14:43,396 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 20:14:43,396 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 20:14:43,411 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 15 ms.
2019-06-21 20:14:43,413 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 20:14:43,418 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 62 ms.
2019-06-21 20:14:43,418 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 20:14:45,879 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4426,5,148x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(F4)-PA6 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:45,880 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:45,880 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:45,905 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4422,5,156x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(E3)-PB10 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:45,906 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:45,906 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:45,928 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4422,5,156x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(E2)-PB12 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:45,929 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:45,929 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:45,975 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4425,5,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(D1)-PA8 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:45,975 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:45,975 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:45,994 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4348,4511,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(D1)-PA8 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:45,994 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:45,994 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:46,013 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4348,4511,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(D1)-PA8 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:46,013 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:46,013 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:46,031 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4348,4511,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(D1)-PA8 : Reset_State</h4><br><div><body></html>]
2019-06-21 20:14:46,031 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-21 20:14:46,032 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-21 20:14:48,819 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 20:14:48,820 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 20:14:48,854 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 20:14:48,856 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 20:14:48,857 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 20:14:48,857 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 20:14:48,857 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 20:14:48,858 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 20:14:48,877 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 20:14:48,878 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 20:14:48,878 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 20:14:48,879 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 20:14:52,305 [DEBUG] LicenseAgreementManager:135 - Unsupported licence acceptance type: 2
2019-06-21 20:14:52,305 [DEBUG] LoadServerPackagesThread:163 - License agreement status : true
2019-06-21 20:14:52,306 [INFO] FileExtend:190 - Unzip File : stm32cube_fw_f4_v1240.zip
2019-06-21 20:14:52,313 [INFO] FileExtend:205 - Standard Zip Deflate
2019-06-21 20:20:59,307 [DEBUG] FileExtend:281 - Unzip file exec time : 367001 ms.
2019-06-21 20:20:59,308 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1241.zip
2019-06-21 20:20:59,310 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 20:20:59,317 [DEBUG] ParameterSetting:147 - Reload parameters ini : 7 ms.
2019-06-21 20:20:59,318 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 1 ms.
2019-06-21 20:20:59,318 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 20:20:59,318 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 20:20:59,318 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 20:20:59,318 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 20:20:59,454 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 20:20:59,454 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 20:20:59,454 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 144 ms.
2019-06-21 20:20:59,455 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1241.zip
2019-06-21 20:20:59,456 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 20:22:05,888 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 20:22:05,888 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 20:22:05,905 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1241.zip.
2019-06-21 20:22:38,767 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 20:22:38,767 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 20:22:39,626 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 20:22:39,627 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 20:22:39,627 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 20:22:39,628 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,628 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,628 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,629 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,629 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 20:22:39,630 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 20:22:39,630 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,630 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,631 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,631 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:39,631 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 20:22:47,185 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-21 20:22:47,186 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 20:22:47,186 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 20:22:47,186 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-21 20:22:47,187 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 20:22:47,187 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 20:22:47,187 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 20:22:47,188 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 478308 ms.
2019-06-21 20:22:47,188 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-21 20:22:47,188 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,188 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 20:22:47,189 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,189 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,189 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,190 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 20:22:47,190 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 20:22:47,190 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,190 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,190 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,190 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 20:22:47,191 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 20:22:47,258 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 20:22:47,258 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 20:22:47,258 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 20:22:47,258 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 20:22:47,258 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 20:22:47,258 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 20:22:47,272 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 13 ms.
2019-06-21 20:22:47,273 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 20:22:47,277 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 88 ms.
2019-06-21 20:22:47,277 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 20:22:49,613 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 20:22:49,614 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 20:22:49,649 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 20:22:49,651 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 20:22:49,651 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 20:22:49,651 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 20:22:49,651 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 20:22:49,652 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 20:22:49,665 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 20:22:49,667 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 20:22:49,667 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 20:22:49,690 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 20:22:53,161 [DEBUG] LicenseAgreementManager:135 - Unsupported licence acceptance type: 2
2019-06-21 20:22:53,161 [DEBUG] LoadServerPackagesThread:163 - License agreement status : true
2019-06-21 20:22:53,162 [INFO] FileExtend:190 - Unzip File : stm32cube_fw_f4_v1240.zip
2019-06-21 20:22:53,164 [INFO] FileExtend:205 - Standard Zip Deflate
2019-06-21 20:28:51,335 [DEBUG] FileExtend:281 - Unzip file exec time : 358173 ms.
2019-06-21 20:28:51,336 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1241.zip
2019-06-21 20:28:51,338 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 20:28:51,347 [DEBUG] ParameterSetting:147 - Reload parameters ini : 8 ms.
2019-06-21 20:28:51,348 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 1 ms.
2019-06-21 20:28:51,348 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 20:28:51,348 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 20:28:51,348 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 20:28:51,349 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 20:28:51,487 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 20:28:51,487 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 20:28:51,487 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 149 ms.
2019-06-21 20:28:51,487 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1241.zip
2019-06-21 20:28:51,489 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 20:30:48,554 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 20:30:48,554 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 20:30:48,566 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1241.zip.
2019-06-21 22:46:58,033 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 22:46:58,034 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 22:46:59,974 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 22:46:59,975 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 22:46:59,975 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 22:46:59,975 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,976 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,976 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,976 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,976 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 22:46:59,977 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 22:46:59,977 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,978 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,978 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,978 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 22:46:59,978 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 22:47:33,009 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-21 22:47:33,009 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-21 22:47:33,010 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-21 22:47:33,010 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-21 22:47:33,010 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 8683320 ms.
2019-06-21 22:47:33,010 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-21 22:47:33,018 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 22:47:33,018 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-21 22:47:33,018 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 22:47:33,018 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-21 22:47:33,019 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,019 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,019 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,019 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,019 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 22:47:33,019 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-21 22:47:33,020 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,020 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,020 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,020 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-21 22:47:33,020 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-21 22:47:33,098 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-21 22:47:33,099 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-21 22:47:33,099 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-21 22:47:33,099 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-21 22:47:33,099 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-21 22:47:33,099 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-21 22:47:33,113 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 14 ms.
2019-06-21 22:47:33,115 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-21 22:47:33,118 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 100 ms.
2019-06-21 22:47:33,119 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-21 22:47:53,267 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-21 22:47:53,268 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-21 22:47:53,294 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-21 22:47:53,296 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-21 22:47:53,296 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-21 22:47:53,296 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-21 22:47:53,296 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-21 22:47:53,297 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 22:47:53,312 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-21 22:47:53,313 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-21 22:47:53,313 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-21 22:47:53,317 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-21 22:47:56,866 [DEBUG] LicenseAgreementManager:135 - Unsupported licence acceptance type: 2
2019-06-21 22:47:56,866 [DEBUG] LoadServerPackagesThread:163 - License agreement status : true
2019-06-21 22:47:56,867 [INFO] FileExtend:190 - Unzip File : stm32cube_fw_f4_v1240.zip
2019-06-21 22:47:56,869 [INFO] FileExtend:205 - Standard Zip Deflate
2019-06-21 22:54:05,382 [DEBUG] FileExtend:281 - Unzip file exec time : 368515 ms.
2019-06-21 22:54:05,384 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1241.zip
2019-06-21 22:54:05,388 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-21 22:54:05,396 [DEBUG] ParameterSetting:147 - Reload parameters ini : 8 ms.
2019-06-21 22:54:05,397 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 1 ms.
2019-06-21 22:54:05,397 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-21 22:54:05,397 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-21 22:54:05,397 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-21 22:54:05,397 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-21 22:54:06,301 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-21 22:54:06,301 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-21 22:54:06,301 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 913 ms.
2019-06-21 22:54:06,301 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1241.zip
2019-06-21 22:54:06,303 [DEBUG] ServerAccessManage:356 - Start download
2019-06-21 22:54:55,114 [ERROR] ServerAccessManage:405 - Timeout Exception during http download :Read timed out
2019-06-21 22:54:55,114 [DEBUG] ServerAccessManage:406 - Timeout value : 45000
2019-06-21 22:54:55,155 [ERROR] ServerAccessManage:504 - Problem, Http timeout : stm32cube_fw_f4_v1241.zip.
2019-06-22 02:19:30,246 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-22 02:19:30,247 [DEBUG] MainUpdater:1368 - FailToSetMainStatus to : 8
2019-06-22 02:19:30,247 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:19:30,247 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-22 02:19:30,247 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:19:30,248 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-22 02:19:30,248 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:19:30,248 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 12696931 ms.
2019-06-22 02:19:30,248 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-22 02:19:30,249 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-22 02:19:30,248 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,250 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,250 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,250 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,250 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:19:30,250 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:19:30,251 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,251 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,251 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,252 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:19:30,252 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:19:30,289 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-22 02:19:30,289 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-22 02:19:30,290 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-22 02:19:30,290 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-22 02:19:30,290 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-22 02:19:30,290 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-22 02:19:30,301 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 11 ms.
2019-06-22 02:19:30,303 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-22 02:19:30,307 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 57 ms.
2019-06-22 02:19:30,307 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-22 02:19:30,384 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4422,5,156x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(E2)-PB12 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:19:30,384 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:19:30,385 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:19:31,030 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4422,5,156x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777224,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(E2)-PB12 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:19:31,030 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:19:31,030 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,450 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4425,5,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G5)-PB0 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,451 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,451 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,471 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4551,4646,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G5)-PB0 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,472 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,472 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,483 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4551,4646,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G5)-PB0 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,483 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,484 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,493 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4551,4646,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G5)-PB0 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,494 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,494 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,510 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4551,4646,150x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(G5)-PB0 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,511 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,511 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,583 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4426,5,148x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(F3)-PA7 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,583 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,583 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,609 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4442,5,116x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(F2)-VDD : Power</h4><br><div><body></html>]
2019-06-22 02:20:44,609 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,609 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,626 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4422,5,155x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(F1)-PB14 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,626 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,626 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:44,637 [DEBUG] PanelToolTipUI:433 - paint: com.st.components.swing.Popup[,4349,4600,155x43,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.LineBorder@6df68dd2,flags=16777226,maximumSize=,minimumSize=,preferredSize=,tipText=<html><body><div style="margin-left:10px"><h4 style="margin-bottom:0px">(F1)-PB14 : Reset_State</h4><br><div><body></html>]
2019-06-22 02:20:44,637 [DEBUG] PanelToolTipUI:434 - paint object: null
2019-06-22 02:20:44,637 [DEBUG] PanelToolTipUI:437 - paint: regular popup, no contextual help
2019-06-22 02:20:46,890 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-22 02:20:46,890 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:20:46,915 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:20:46,917 [DEBUG] Updater:271 - Updater getSpecificTask: 8
2019-06-22 02:20:46,917 [DEBUG] MainUpdater:2046 - Check proxy in progress...
2019-06-22 02:20:46,917 [DEBUG] MainUpdater:2056 - Check proxy is true
2019-06-22 02:20:46,917 [DEBUG] Updater:271 - Updater getSpecificTask: 5
2019-06-22 02:20:46,918 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-22 02:20:46,928 [DEBUG] MainUpdater:1394 - mainStatus forced to 4
2019-06-22 02:20:46,929 [DEBUG] MainUpdater:3443 - getUserRootPath=(C:/Users/Afonso Muralha/.stm32cubemx/)
2019-06-22 02:20:46,929 [DEBUG] ServerAccessManage:162 - Buffer size finally used for transfers: 8192 bytes
2019-06-22 02:20:46,930 [DEBUG] LoadServerPackagesThread:133 - Start of LoadServerPackages Thread
2019-06-22 02:20:50,328 [DEBUG] LicenseAgreementManager:135 - Unsupported licence acceptance type: 2
2019-06-22 02:20:50,328 [DEBUG] LoadServerPackagesThread:163 - License agreement status : true
2019-06-22 02:20:50,329 [INFO] FileExtend:190 - Unzip File : stm32cube_fw_f4_v1240.zip
2019-06-22 02:20:50,334 [INFO] FileExtend:205 - Standard Zip Deflate
2019-06-22 02:27:03,786 [DEBUG] FileExtend:281 - Unzip file exec time : 373457 ms.
2019-06-22 02:27:03,787 [DEBUG] ServerAccessManage:270 - readHttpFile  :http://sw-center.st.com/packs/resource/firmware/stm32cube_fw_f4_v1241.zip
2019-06-22 02:27:03,791 [DEBUG] ServerAccessManage:835 - Connection to HTTP Server ...
2019-06-22 02:27:03,803 [DEBUG] ParameterSetting:147 - Reload parameters ini : 11 ms.
2019-06-22 02:27:03,804 [DEBUG] ExternalUserPreferencesManager:299 - Reload external user preference : 1 ms.
2019-06-22 02:27:03,804 [DEBUG] ServerAccessManage:1172 - Using No Proxy
2019-06-22 02:27:03,804 [DEBUG] ServerAccessManage:859 - Url protocol : http
2019-06-22 02:27:03,804 [DEBUG] ServerAccessManage:1053 - Define connection properties timeout= (45000 , 45000)
2019-06-22 02:27:03,804 [DEBUG] ServerAccessManage:875 - urlConnection getResponse.
2019-06-22 02:27:03,979 [DEBUG] ServerAccessManage:882 - urlConnection getResponse done.
2019-06-22 02:27:03,980 [DEBUG] ServerAccessManage:893 - Connection Successful http 200
2019-06-22 02:27:03,980 [DEBUG] ServerAccessManage:1044 - Open Http connection execution time : 189 ms.
2019-06-22 02:27:03,980 [INFO] ServerAccessManage:347 - Download File stm32cube_fw_f4_v1241.zip
2019-06-22 02:27:03,983 [DEBUG] ServerAccessManage:356 - Start download
2019-06-22 02:28:32,527 [DEBUG] ServerAccessManage:393 - Read Count = -1  total = 122110384
2019-06-22 02:28:32,527 [DEBUG] ServerAccessManage:396 - Read http file execution time : 88543 ms.
2019-06-22 02:28:32,567 [DEBUG] LicenseAgreementManager:135 - Unsupported licence acceptance type: 2
2019-06-22 02:28:32,568 [DEBUG] LoadServerPackagesThread:163 - License agreement status : true
2019-06-22 02:28:32,569 [INFO] FileExtend:190 - Unzip File : stm32cube_fw_f4_v1241.zip
2019-06-22 02:28:32,571 [INFO] FileExtend:205 - Standard Zip Deflate
2019-06-22 02:28:35,868 [DEBUG] FileExtend:281 - Unzip file exec time : 3299 ms.
2019-06-22 02:28:35,920 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 4
2019-06-22 02:28:35,920 [DEBUG] MainUpdater:1364 - mainStatus changed to 1
2019-06-22 02:28:35,921 [DEBUG] LoadServerPackagesThread:144 - LoadServerPackages execution time : 468991 ms.
2019-06-22 02:28:35,921 [INFO] LoadServerPackagesThread:146 - End of LoadServerPackages Thread
2019-06-22 02:28:35,921 [DEBUG] CheckServerUpdateThread:65 - Start of CheckServer Thread: 2
2019-06-22 02:28:35,946 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.1
2019-06-22 02:28:35,946 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.2.0
2019-06-22 02:28:35,946 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-MEMS1.5.1.0
2019-06-22 02:28:35,946 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.4.2.0
2019-06-22 02:28:35,946 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.X-CUBE-BLE1.1.1.0
2019-06-22 02:28:35,946 [DEBUG] UpdaterFile:865 - Added new thirparty in list: STMicroelectronics.BlueNRG-MS.1.0.0
2019-06-22 02:28:35,956 [DEBUG] PackControlFlags:87 - Open PackControl File (C:/Users/Afonso Muralha/.stm32cubemx/plugins/updater/PacksControlFlags.xml) : 10 ms.
2019-06-22 02:28:36,015 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 1
2019-06-22 02:28:36,015 [DEBUG] MainUpdater:1642 - loadFirmwareName : ProgressBar Return now
2019-06-22 02:28:36,015 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:28:36,024 [DEBUG] CheckServerUpdateThread:119 - CheckServer execution time : 103 ms.
2019-06-22 02:28:36,024 [INFO] CheckServerUpdateThread:121 - End of CheckServer Thread
2019-06-22 02:28:36,051 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:28:36,052 [DEBUG] ThirdParty:407 - Requested task: 5
2019-06-22 02:28:36,053 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:28:36,054 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:28:36,055 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:28:36,055 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,056 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,057 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:28:36,057 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:28:36,057 [DEBUG] FileManagerView:196 - iTypeTask=4, clParamTask=null
2019-06-22 02:28:36,058 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:28:36,066 [INFO] UtilMem:74 - End SaveConfig() Used Memory: 306380480 Bytes (1073741824)
2019-06-22 02:28:36,075 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-22 02:28:36,076 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:28:36,076 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,077 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,077 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,077 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,078 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,078 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,078 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,079 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,079 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,080 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,080 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:36,080 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:28:36,080 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:28:36,089 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:28:36,105 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:28:36,105 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:28:36,106 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:28:36,106 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:28:36,106 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:28:36,106 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:28:36,106 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:28:36,106 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:28:36,107 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:28:36,107 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:28:36,107 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:28:36,107 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:28:36,107 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:28:36,107 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:28:36,107 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-22 02:28:36,107 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:28:36,108 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:28:37,047 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:37,048 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:28:37,048 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:28:37,057 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:28:37,057 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:37,061 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: NVIC
2019-06-22 02:28:37,078 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: SYS
2019-06-22 02:28:37,080 [INFO] CodeGenerator:572 - code generatio: config db path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\
2019-06-22 02:28:37,080 [DEBUG] CodeGenerator:577 - no options is available: use default one!!!!!!
2019-06-22 02:28:37,080 [DEBUG] CodeGenerator:594 - DEBUG: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test
2019-06-22 02:28:37,081 [DEBUG] ProjectSettings:210 - Project Settings() - creating directory: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src
2019-06-22 02:28:37,082 [DEBUG] ProjectSettings:226 - Project Settings() - creating directory: [Ljava.io.File;@73dc7db0C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc
2019-06-22 02:28:37,083 [DEBUG] CodeGenerator:4847 - Start prepareFunctionList()
2019-06-22 02:28:37,085 [DEBUG] CodeGenerator:5073 - End prepareFunctionList()
2019-06-22 02:28:37,085 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:28:37,085 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: FctUpdates
2019-06-22 02:28:37,086 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: FctUpdates
2019-06-22 02:28:37,086 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:28:37,086 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:28:37,087 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : FctUpdates
2019-06-22 02:28:37,087 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : FctUpdates
2019-06-22 02:28:37,087 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: FctUpdates
2019-06-22 02:28:37,087 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: FctUpdates
2019-06-22 02:28:37,087 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:28:37,088 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:28:37,088 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : FctUpdates
2019-06-22 02:28:37,088 [DEBUG] MainPanel:779 - End propertyChange MainPanel : FctUpdates
2019-06-22 02:28:37,088 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:28:37,601 [DEBUG] CodeGenerator:3417 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\BSD_License.ftl
2019-06-22 02:28:37,601 [DEBUG] CodeGenerator:3426 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/license.tmp
2019-06-22 02:28:37,610 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:37
2019-06-22 02:28:37,638 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:37
2019-06-22 02:28:37,638 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:37,638 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:37,638 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:37,639 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:37,640 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:37,641 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:37,641 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:37,641 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:37,702 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp_save
2019-06-22 02:28:37,816 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:37,817 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[BSD_License.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:37,821 [DEBUG] cache:81 - Compiling FreeMarker template BSD_License.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\BSD_License.ftl
2019-06-22 02:28:37,941 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:37,942 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:38,285 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:38,286 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:38,324 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:28:38,646 [DEBUG] CodeGenerator:1323 - Generate code for used IP-------------------------
2019-06-22 02:28:38,647 [DEBUG] MicroXplorer:577 - Command line
2019-06-22 02:28:38,647 [DEBUG] MicroXplorer:577 - Debug : prepare data for SYS
2019-06-22 02:28:38,648 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:28:38,650 [DEBUG] MicroXplorer:577 - Debug : prepare data for NVIC
2019-06-22 02:28:38,650 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:28:38,652 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_c.ftl
2019-06-22 02:28:38,653 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_it.c
2019-06-22 02:28:38,653 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:38
2019-06-22 02:28:38,676 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:38
2019-06-22 02:28:38,676 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:38,676 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:38,676 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:38,677 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:38,678 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:38,679 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:38,680 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:38,714 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c_save
2019-06-22 02:28:38,717 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:38,718 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:38,719 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_c.ftl
2019-06-22 02:28:38,735 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:38,736 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:38,899 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:38,900 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:38,936 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:28:38,938 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:28:39,126 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c
2019-06-22 02:28:39,128 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_h.ftl
2019-06-22 02:28:39,129 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_it.h
2019-06-22 02:28:39,129 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:39
2019-06-22 02:28:39,161 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:39
2019-06-22 02:28:39,162 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:39,162 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:39,162 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:39,162 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:39,163 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:39,163 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:39,163 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:39,163 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:39,163 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:39,163 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:39,164 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:28:39,164 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:39,164 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:28:39,164 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:28:39,164 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:39,165 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:39,165 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,165 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:39,165 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:39,165 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:39,165 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:39,166 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:39,166 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:39,166 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,166 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,166 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:39,205 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h_save
2019-06-22 02:28:39,209 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:39,209 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,211 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_h.ftl
2019-06-22 02:28:39,215 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,216 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:39,336 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,337 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:39,367 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,369 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:28:39,402 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h
2019-06-22 02:28:39,408 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_hal_msp_c.ftl
2019-06-22 02:28:39,409 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_hal_msp.c
2019-06-22 02:28:39,409 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:39
2019-06-22 02:28:39,439 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:39
2019-06-22 02:28:39,439 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:39,439 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:39,440 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:39,440 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:39,440 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:39,440 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:39,440 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:39,440 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:39,441 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:39,441 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:39,441 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:39,441 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,441 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:28:39,441 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:39,442 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:39,443 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:39,443 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,443 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,443 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:39,538 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c_save
2019-06-22 02:28:39,540 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:39,541 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,542 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_hal_msp_c.ftl
2019-06-22 02:28:39,618 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,619 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:39,743 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,744 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:39,762 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,764 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:28:39,839 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c
2019-06-22 02:28:39,842 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\system.ftl
2019-06-22 02:28:39,842 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/system.tmp
2019-06-22 02:28:39,842 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:39
2019-06-22 02:28:39,856 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:39
2019-06-22 02:28:39,856 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:39,856 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:39,857 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:39,858 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:39,859 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:39,859 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:39,859 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:39,859 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,859 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:39,859 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:39,899 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp_save
2019-06-22 02:28:39,902 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:39,902 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[system.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,903 [DEBUG] cache:81 - Compiling FreeMarker template system.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\system.ftl
2019-06-22 02:28:39,909 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:39,910 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:40,030 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,031 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:40,080 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp
2019-06-22 02:28:40,082 [DEBUG] CodeGenerator:3095 - generateHALConfCode() - Generate msp.c code done.
2019-06-22 02:28:40,084 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:28:40,085 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_hal_conf.h
2019-06-22 02:28:40,085 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:40
2019-06-22 02:28:40,127 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:40
2019-06-22 02:28:40,127 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:40,127 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,128 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist 3300
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist 0
2019-06-22 02:28:40,129 [DEBUG] TemplateFile:22 - varlist 25000000
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 100
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 32768
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 5000
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 12288000
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 16000000
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 32000
2019-06-22 02:28:40,130 [DEBUG] TemplateFile:22 - varlist 0U
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:40,131 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:40,132 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:40,132 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:40,132 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,132 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,132 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,161 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h_save
2019-06-22 02:28:40,164 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:40,164 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,165 [DEBUG] cache:81 - Compiling FreeMarker template stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:28:40,181 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,182 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:40,321 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,322 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:40,391 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h
2019-06-22 02:28:40,393 [DEBUG] CodeGenerator:3031 - generateHALConfCode() - Generate hal_conf.h code done.
2019-06-22 02:28:40,443 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_h.ftl
2019-06-22 02:28:40,443 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/main.h
2019-06-22 02:28:40,444 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:40
2019-06-22 02:28:40,469 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:40
2019-06-22 02:28:40,469 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,470 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:40,471 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,472 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:40,473 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:40,473 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:40,473 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:40,473 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,473 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,473 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,505 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h_save
2019-06-22 02:28:40,508 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:40,508 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,514 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_h.ftl
2019-06-22 02:28:40,528 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,528 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:40,634 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,635 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:40,676 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,678 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:28:40,715 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h
2019-06-22 02:28:40,717 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_c.ftl
2019-06-22 02:28:40,718 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/main.c
2019-06-22 02:28:40,718 [DEBUG] CodeEngine:60 - 22/06/2019 02:28:40
2019-06-22 02:28:40,741 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:28:40
2019-06-22 02:28:40,741 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:28:40,741 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:40,741 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:28:40,742 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,743 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:40,744 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:28:40,745 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:28:40,746 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:28:40,746 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:28:40,746 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,746 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:28:40,746 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:28:40,777 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c_save
2019-06-22 02:28:40,780 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:28:40,780 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,782 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_c.ftl
2019-06-22 02:28:40,821 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,822 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:28:40,933 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,934 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:28:40,949 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:28:40,951 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:28:40,965 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,972 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,973 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,975 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,976 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,983 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,984 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,990 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,991 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,993 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,995 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,996 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,998 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:40,999 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,000 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,001 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,003 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,006 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,009 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,013 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,014 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:28:41,086 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c
2019-06-22 02:28:41,460 [DEBUG] CodeGenerator:1120 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:28:41,460 [DEBUG] CodeGenerator:1121 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c]
2019-06-22 02:28:41,460 [DEBUG] CodeGenerator:1122 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:28:42,540 [INFO] ProjectBuilder:1489 - Time for Copy HAL[1] : 483mS.
2019-06-22 02:28:42,555 [INFO] ProjectBuilder:2057 - Project Generator version: 3.2.0
2019-06-22 02:28:42,559 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[fileConfig.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:28:42,560 [DEBUG] cache:81 - Compiling FreeMarker template fileConfig.ftl[en_US,Cp1252,parsed]  from C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\projectmanager\fileConfig.ftl
2019-06-22 02:28:42,847 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:42,847 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:28:42,847 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:28:42,853 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:28:43,074 [INFO] ConfigFileManager:880 - The Die is : DIE423
2019-06-22 02:28:43,075 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:28:43,075 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:28:43,076 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:28:43,082 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:28:43,083 [DEBUG] MicroXplorer:577 - configName ==Arm Cortex-M4
2019-06-22 02:28:43,322 [DEBUG] MicroXplorer:577 - memory ==name="RAM" access="xrw" start="0x20000000" size="64"
2019-06-22 02:28:43,322 [DEBUG] MicroXplorer:577 - memory ==name="FLASH" access="rx" start="0x8000000" size="256"
2019-06-22 02:28:43,645 [DEBUG] MicroXplorer:577 - namefile= STM32CubeIDE
2019-06-22 02:28:43,645 [DEBUG] root:167 - 3rd party IDE plugIn contribution found (cf. UC30 required properties file):
2019-06-22 02:28:43,645 [DEBUG] root:168 - 	Key name = STM32CubeIDE
2019-06-22 02:28:43,645 [DEBUG] root:169 - 	Display name = STM32CubeIDE
2019-06-22 02:28:43,646 [DEBUG] root:170 - 	Class = class com.st.stm32cube.ide.mcu.ide.process.MxIdePlugInProjectGenerator
2019-06-22 02:28:43,646 [DEBUG] MicroXplorer:577 - method name===============generate
2019-06-22 02:28:57,875 [INFO] ProjectBuilder:2150 - Time for Generating toolchain IDE Files: 15320mS.
2019-06-22 02:28:57,876 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 0mS.
2019-06-22 02:28:57,880 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 0mS.
2019-06-22 02:28:57,910 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:28:57,910 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:28:57,910 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:28:57,910 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:28:57,910 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] MainPanel:779 - End propertyChange MainPanel : End_Generate_Project
2019-06-22 02:28:57,911 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:32:41,812 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-22 02:32:41,813 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:41,821 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:41,821 [DEBUG] ThirdParty:407 - Requested task: 5
2019-06-22 02:32:41,821 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:32:41,821 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:32:41,821 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:32:41,822 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,822 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,822 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,822 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,822 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:32:41,822 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:32:41,823 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,823 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,823 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,823 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:41,823 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:32:41,823 [DEBUG] FileManagerView:196 - iTypeTask=4, clParamTask=null
2019-06-22 02:32:41,824 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:32:41,827 [INFO] UtilMem:74 - End SaveConfig() Used Memory: 314995272 Bytes (1073741824)
2019-06-22 02:32:41,830 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-22 02:32:41,830 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:32:41,830 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,831 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,831 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,831 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,832 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,832 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,833 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,833 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,834 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,834 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,834 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,835 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,836 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:41,837 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:41,837 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:41,844 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:41,860 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:32:41,860 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:32:41,860 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:32:41,861 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:32:41,862 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:32:41,862 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:32:41,862 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:32:41,862 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-22 02:32:41,862 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:32:41,862 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:32:42,102 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:42,102 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:42,102 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:42,110 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:42,110 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:42,114 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: NVIC
2019-06-22 02:32:42,115 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: SYS
2019-06-22 02:32:42,116 [INFO] CodeGenerator:572 - code generatio: config db path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\
2019-06-22 02:32:42,116 [DEBUG] CodeGenerator:577 - no options is available: use default one!!!!!!
2019-06-22 02:32:42,117 [DEBUG] CodeGenerator:594 - DEBUG: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test
2019-06-22 02:32:42,118 [DEBUG] CodeGenerator:4847 - Start prepareFunctionList()
2019-06-22 02:32:42,119 [DEBUG] CodeGenerator:5073 - End prepareFunctionList()
2019-06-22 02:32:42,119 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:32:42,119 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: FctUpdates
2019-06-22 02:32:42,119 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: FctUpdates
2019-06-22 02:32:42,120 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:32:42,120 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:32:42,120 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : FctUpdates
2019-06-22 02:32:42,120 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : FctUpdates
2019-06-22 02:32:42,120 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: FctUpdates
2019-06-22 02:32:42,120 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: FctUpdates
2019-06-22 02:32:42,121 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:32:42,121 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:32:42,121 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : FctUpdates
2019-06-22 02:32:42,121 [DEBUG] MainPanel:779 - End propertyChange MainPanel : FctUpdates
2019-06-22 02:32:42,121 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:32:42,415 [DEBUG] CodeGenerator:3417 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\BSD_License.ftl
2019-06-22 02:32:42,415 [DEBUG] CodeGenerator:3426 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/license.tmp
2019-06-22 02:32:42,415 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:42
2019-06-22 02:32:42,417 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:42
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:42,418 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:42,419 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:42,420 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:42,420 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:42,420 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:42,420 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:42,441 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp_save
2019-06-22 02:32:42,444 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:42,444 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[BSD_License.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,445 [DEBUG] cache:81 - Compiling FreeMarker template BSD_License.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\BSD_License.ftl
2019-06-22 02:32:42,447 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,448 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:42,560 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,561 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:42,589 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:42,595 [DEBUG] CodeGenerator:1323 - Generate code for used IP-------------------------
2019-06-22 02:32:42,596 [DEBUG] MicroXplorer:577 - Command line
2019-06-22 02:32:42,596 [DEBUG] MicroXplorer:577 - Debug : prepare data for SYS
2019-06-22 02:32:42,597 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:32:42,599 [DEBUG] MicroXplorer:577 - Debug : prepare data for NVIC
2019-06-22 02:32:42,599 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:32:42,601 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_c.ftl
2019-06-22 02:32:42,602 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_it.c
2019-06-22 02:32:42,602 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:42
2019-06-22 02:32:42,617 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:42
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:42,618 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:42,619 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:42,620 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:42,666 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c_save
2019-06-22 02:32:42,681 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:42,682 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,683 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_c.ftl
2019-06-22 02:32:42,691 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,691 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:42,857 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,858 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:42,883 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:42,885 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:42,978 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:43,026 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c
2019-06-22 02:32:43,032 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_h.ftl
2019-06-22 02:32:43,032 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_it.h
2019-06-22 02:32:43,033 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:43
2019-06-22 02:32:43,037 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:43
2019-06-22 02:32:43,037 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:43,037 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,038 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:43,038 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:43,038 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:43,038 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,038 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:43,039 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,039 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,039 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,039 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:32:43,039 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:43,040 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,041 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,078 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h_save
2019-06-22 02:32:43,089 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:43,089 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,091 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_h.ftl
2019-06-22 02:32:43,093 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,094 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:43,195 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,196 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:43,213 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,214 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:43,232 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:43,243 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h
2019-06-22 02:32:43,248 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_hal_msp_c.ftl
2019-06-22 02:32:43,249 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_hal_msp.c
2019-06-22 02:32:43,249 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:43
2019-06-22 02:32:43,265 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:43
2019-06-22 02:32:43,265 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:43,265 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,265 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:43,265 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:43,265 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:43,266 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,266 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:43,266 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,267 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,268 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,317 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c_save
2019-06-22 02:32:43,326 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:43,327 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,328 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_hal_msp_c.ftl
2019-06-22 02:32:43,387 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,388 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:43,519 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,520 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:43,533 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,535 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:43,557 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:43,573 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c
2019-06-22 02:32:43,576 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\system.ftl
2019-06-22 02:32:43,576 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/system.tmp
2019-06-22 02:32:43,576 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:43
2019-06-22 02:32:43,590 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:43
2019-06-22 02:32:43,590 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:43,590 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,590 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:43,590 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,591 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:43,592 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:43,593 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,593 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,593 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,633 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp_save
2019-06-22 02:32:43,636 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:43,637 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[system.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,638 [DEBUG] cache:81 - Compiling FreeMarker template system.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\system.ftl
2019-06-22 02:32:43,642 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,643 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:43,754 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,755 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:43,792 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp
2019-06-22 02:32:43,794 [DEBUG] CodeGenerator:3095 - generateHALConfCode() - Generate msp.c code done.
2019-06-22 02:32:43,795 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:32:43,795 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_hal_conf.h
2019-06-22 02:32:43,795 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:43
2019-06-22 02:32:43,809 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:43
2019-06-22 02:32:43,809 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:43,810 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 3300
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 0
2019-06-22 02:32:43,811 [DEBUG] TemplateFile:22 - varlist 25000000
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 100
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 32768
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 5000
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 12288000
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 16000000
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 32000
2019-06-22 02:32:43,812 [DEBUG] TemplateFile:22 - varlist 0U
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:43,813 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:43,814 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,814 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:43,814 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:43,855 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h_save
2019-06-22 02:32:43,870 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:43,871 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,872 [DEBUG] cache:81 - Compiling FreeMarker template stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:32:43,890 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,891 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:43,988 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:43,989 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:44,078 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:44,095 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h
2019-06-22 02:32:44,098 [DEBUG] CodeGenerator:3031 - generateHALConfCode() - Generate hal_conf.h code done.
2019-06-22 02:32:44,108 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_h.ftl
2019-06-22 02:32:44,108 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/main.h
2019-06-22 02:32:44,108 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:44
2019-06-22 02:32:44,119 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:44
2019-06-22 02:32:44,119 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:44,119 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:44,119 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:44,119 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:44,119 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:44,120 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,121 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,122 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:44,180 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h_save
2019-06-22 02:32:44,187 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:44,188 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,189 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_h.ftl
2019-06-22 02:32:44,199 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,200 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:44,312 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,312 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:44,337 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,339 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:44,372 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:44,387 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h
2019-06-22 02:32:44,390 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_c.ftl
2019-06-22 02:32:44,390 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/main.c
2019-06-22 02:32:44,391 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:44
2019-06-22 02:32:44,407 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:44
2019-06-22 02:32:44,407 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:44,407 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:44,408 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:44,409 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:44,410 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:44,411 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:44,412 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:44,413 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,413 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:44,413 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:44,457 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c_save
2019-06-22 02:32:44,470 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:44,470 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,472 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_c.ftl
2019-06-22 02:32:44,502 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,503 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:44,627 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,628 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:44,643 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:44,645 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:44,649 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,650 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,651 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,652 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,653 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,654 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,655 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,657 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,658 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,660 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,661 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,662 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,663 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,664 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,665 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,667 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,668 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,670 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,673 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,675 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,676 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:44,693 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:44,709 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c
2019-06-22 02:32:44,884 [DEBUG] CodeGenerator:1120 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:32:44,884 [DEBUG] CodeGenerator:1121 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c]
2019-06-22 02:32:44,885 [DEBUG] CodeGenerator:1122 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:32:45,769 [INFO] ProjectBuilder:1489 - Time for Copy HAL[1] : 245mS.
2019-06-22 02:32:45,772 [INFO] ProjectBuilder:2057 - Project Generator version: 3.2.0
2019-06-22 02:32:45,774 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[fileConfig.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:45,776 [DEBUG] cache:81 - Compiling FreeMarker template fileConfig.ftl[en_US,Cp1252,parsed]  from C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\projectmanager\fileConfig.ftl
2019-06-22 02:32:46,170 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:46,171 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:46,171 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:46,178 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:46,394 [INFO] ConfigFileManager:880 - The Die is : DIE423
2019-06-22 02:32:46,394 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:46,394 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:46,394 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:46,401 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:46,402 [DEBUG] MicroXplorer:577 - configName ==Arm Cortex-M4
2019-06-22 02:32:46,594 [DEBUG] MicroXplorer:577 - memory ==name="RAM" access="xrw" start="0x20000000" size="64"
2019-06-22 02:32:46,595 [DEBUG] MicroXplorer:577 - memory ==name="FLASH" access="rx" start="0x8000000" size="256"
2019-06-22 02:32:46,831 [DEBUG] MicroXplorer:577 - namefile= STM32CubeIDE
2019-06-22 02:32:46,832 [DEBUG] root:167 - 3rd party IDE plugIn contribution found (cf. UC30 required properties file):
2019-06-22 02:32:46,832 [DEBUG] root:168 - 	Key name = STM32CubeIDE
2019-06-22 02:32:46,832 [DEBUG] root:169 - 	Display name = STM32CubeIDE
2019-06-22 02:32:46,832 [DEBUG] root:170 - 	Class = class com.st.stm32cube.ide.mcu.ide.process.MxIdePlugInProjectGenerator
2019-06-22 02:32:46,833 [DEBUG] MicroXplorer:577 - method name===============update
2019-06-22 02:32:48,798 [INFO] ProjectBuilder:2150 - Time for Generating toolchain IDE Files: 3026mS.
2019-06-22 02:32:48,799 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 0mS.
2019-06-22 02:32:48,805 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 0mS.
2019-06-22 02:32:49,143 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:32:49,143 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:32:49,144 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:32:49,145 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:32:49,146 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:32:49,146 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:32:49,146 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:32:49,146 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:32:49,147 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:32:49,147 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:32:49,147 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:32:49,147 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : End_Generate_Project
2019-06-22 02:32:49,147 [DEBUG] MainPanel:779 - End propertyChange MainPanel : End_Generate_Project
2019-06-22 02:32:49,148 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:32:49,151 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-22 02:32:49,152 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:49,190 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:49,191 [DEBUG] ThirdParty:407 - Requested task: 5
2019-06-22 02:32:49,191 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:32:49,191 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:32:49,191 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:32:49,193 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,193 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,193 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,194 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,194 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:32:49,194 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:32:49,194 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,194 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,194 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,195 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:49,195 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:32:49,195 [DEBUG] FileManagerView:196 - iTypeTask=4, clParamTask=null
2019-06-22 02:32:49,399 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:32:49,406 [INFO] UtilMem:74 - End SaveConfig() Used Memory: 838124504 Bytes (1073741824)
2019-06-22 02:32:49,408 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-22 02:32:49,409 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:32:49,409 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,410 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,410 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,410 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,411 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,411 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,412 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,412 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,412 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,413 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,413 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,413 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,413 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,414 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,414 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:49,414 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:49,414 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:49,421 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:49,599 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:32:49,599 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:32:49,599 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:32:49,599 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:32:49,600 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:32:49,600 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:32:49,600 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:32:49,600 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:32:49,600 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:32:49,601 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:32:49,601 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:32:49,601 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:32:49,601 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:32:49,601 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:32:49,601 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-22 02:32:49,602 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:32:49,602 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:32:50,152 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:50,152 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:50,153 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:50,159 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:50,160 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:50,178 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: NVIC
2019-06-22 02:32:50,179 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: SYS
2019-06-22 02:32:50,180 [INFO] CodeGenerator:572 - code generatio: config db path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\
2019-06-22 02:32:50,180 [DEBUG] CodeGenerator:577 - no options is available: use default one!!!!!!
2019-06-22 02:32:50,180 [DEBUG] CodeGenerator:594 - DEBUG: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test
2019-06-22 02:32:50,182 [DEBUG] CodeGenerator:4847 - Start prepareFunctionList()
2019-06-22 02:32:50,182 [DEBUG] CodeGenerator:5073 - End prepareFunctionList()
2019-06-22 02:32:50,183 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:32:50,183 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: FctUpdates
2019-06-22 02:32:50,183 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: FctUpdates
2019-06-22 02:32:50,183 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:32:50,184 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:32:50,184 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : FctUpdates
2019-06-22 02:32:50,184 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : FctUpdates
2019-06-22 02:32:50,184 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: FctUpdates
2019-06-22 02:32:50,184 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: FctUpdates
2019-06-22 02:32:50,184 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:32:50,185 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:32:50,185 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : FctUpdates
2019-06-22 02:32:50,185 [DEBUG] MainPanel:779 - End propertyChange MainPanel : FctUpdates
2019-06-22 02:32:50,185 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:32:50,566 [DEBUG] CodeGenerator:3417 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\BSD_License.ftl
2019-06-22 02:32:50,567 [DEBUG] CodeGenerator:3426 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/license.tmp
2019-06-22 02:32:50,567 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:50
2019-06-22 02:32:50,571 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:50
2019-06-22 02:32:50,571 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:50,571 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:50,572 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:50,572 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:50,572 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:50,572 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:50,572 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:50,573 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:50,573 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:50,573 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:50,573 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:50,573 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:50,574 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:50,574 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:50,574 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:50,574 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:50,574 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:50,574 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:50,575 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:50,575 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:50,575 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:50,575 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:50,613 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp_save
2019-06-22 02:32:50,616 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:50,617 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[BSD_License.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:50,618 [DEBUG] cache:81 - Compiling FreeMarker template BSD_License.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\BSD_License.ftl
2019-06-22 02:32:50,621 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:50,622 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:50,783 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:50,784 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:50,930 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:50,938 [DEBUG] CodeGenerator:1323 - Generate code for used IP-------------------------
2019-06-22 02:32:50,939 [DEBUG] MicroXplorer:577 - Command line
2019-06-22 02:32:50,941 [DEBUG] MicroXplorer:577 - Debug : prepare data for SYS
2019-06-22 02:32:50,942 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:32:50,944 [DEBUG] MicroXplorer:577 - Debug : prepare data for NVIC
2019-06-22 02:32:50,944 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:32:50,946 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_c.ftl
2019-06-22 02:32:50,946 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_it.c
2019-06-22 02:32:50,946 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:50
2019-06-22 02:32:50,988 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:50
2019-06-22 02:32:50,989 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:50,989 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:50,989 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:50,989 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:50,989 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:50,989 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:50,990 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:50,990 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:50,990 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:50,990 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,000 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:32:51,003 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,004 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:51,004 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:51,004 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,004 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,004 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,005 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:51,005 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,005 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:51,005 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:51,006 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:51,006 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:51,006 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,006 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,007 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,090 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c_save
2019-06-22 02:32:51,097 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:51,097 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,098 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_c.ftl
2019-06-22 02:32:51,105 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,107 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:51,205 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,206 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:51,219 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,221 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:51,247 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:51,280 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c
2019-06-22 02:32:51,286 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_h.ftl
2019-06-22 02:32:51,286 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_it.h
2019-06-22 02:32:51,286 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:51
2019-06-22 02:32:51,290 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:51
2019-06-22 02:32:51,291 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:51,291 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,291 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,292 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,293 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,294 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,295 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,328 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h_save
2019-06-22 02:32:51,336 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:51,336 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,337 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_h.ftl
2019-06-22 02:32:51,341 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,342 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:51,449 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,450 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:51,472 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,475 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:51,486 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:51,496 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h
2019-06-22 02:32:51,501 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_hal_msp_c.ftl
2019-06-22 02:32:51,501 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_hal_msp.c
2019-06-22 02:32:51,502 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:51
2019-06-22 02:32:51,511 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:51
2019-06-22 02:32:51,511 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:51,511 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,511 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:51,511 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:51,511 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:51,512 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:51,513 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:51,514 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,514 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,514 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,546 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c_save
2019-06-22 02:32:51,554 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:51,554 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,556 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_hal_msp_c.ftl
2019-06-22 02:32:51,634 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,635 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:51,779 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,780 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:51,797 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,798 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:51,814 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:51,830 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c
2019-06-22 02:32:51,834 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\system.ftl
2019-06-22 02:32:51,835 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/system.tmp
2019-06-22 02:32:51,835 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:51
2019-06-22 02:32:51,837 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:51
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:51,838 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:51,839 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:51,840 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:51,864 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp_save
2019-06-22 02:32:51,866 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:51,867 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[system.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,868 [DEBUG] cache:81 - Compiling FreeMarker template system.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\system.ftl
2019-06-22 02:32:51,870 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,871 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:51,959 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:51,960 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:51,995 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp
2019-06-22 02:32:51,997 [DEBUG] CodeGenerator:3095 - generateHALConfCode() - Generate msp.c code done.
2019-06-22 02:32:51,998 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:32:51,998 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_hal_conf.h
2019-06-22 02:32:51,998 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:51
2019-06-22 02:32:52,018 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:51
2019-06-22 02:32:52,018 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:52,019 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:52,019 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:52,019 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:52,019 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:52,019 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:52,020 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:52,020 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,020 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:52,020 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,020 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:52,020 [DEBUG] TemplateFile:22 - varlist 3300
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 0
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 25000000
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 100
2019-06-22 02:32:52,021 [DEBUG] TemplateFile:22 - varlist 32768
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist 5000
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist 12288000
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist 16000000
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist 32000
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist 0U
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,022 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,023 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,023 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:52,023 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,023 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:52,023 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:52,023 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:52,024 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:52,024 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,024 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,024 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,057 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h_save
2019-06-22 02:32:52,068 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:52,069 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,070 [DEBUG] cache:81 - Compiling FreeMarker template stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:32:52,196 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,197 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:52,286 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,287 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:52,343 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:52,354 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h
2019-06-22 02:32:52,357 [DEBUG] CodeGenerator:3031 - generateHALConfCode() - Generate hal_conf.h code done.
2019-06-22 02:32:52,369 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_h.ftl
2019-06-22 02:32:52,370 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/main.h
2019-06-22 02:32:52,370 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:52
2019-06-22 02:32:52,381 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:52
2019-06-22 02:32:52,381 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:52,381 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:52,381 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,382 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:32:52,383 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:52,383 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:32:52,383 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:52,383 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:32:52,383 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:52,383 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,384 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:52,385 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:52,385 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:52,385 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:52,385 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,385 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,385 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,424 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h_save
2019-06-22 02:32:52,430 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:52,430 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,432 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_h.ftl
2019-06-22 02:32:52,440 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,441 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:52,537 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,538 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:52,559 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,561 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:52,577 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:52,589 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h
2019-06-22 02:32:52,594 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_c.ftl
2019-06-22 02:32:52,594 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/main.c
2019-06-22 02:32:52,595 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:52
2019-06-22 02:32:52,604 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:52
2019-06-22 02:32:52,604 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:52,604 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,605 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:32:52,606 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:52,607 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:32:52,607 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:52,607 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,607 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,607 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,607 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,608 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:52,609 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:52,610 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:52,610 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,610 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:52,610 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:52,641 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c_save
2019-06-22 02:32:52,647 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:52,647 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,648 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_c.ftl
2019-06-22 02:32:52,670 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,671 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:52,844 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,845 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:52,866 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:52,868 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:52,872 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,874 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,875 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,877 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,877 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,878 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,878 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,882 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,884 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,886 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,891 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,893 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,894 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,895 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,896 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,896 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,897 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,898 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,901 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,902 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,903 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:52,928 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:52,951 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c
2019-06-22 02:32:53,386 [DEBUG] CodeGenerator:1120 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:32:53,386 [DEBUG] CodeGenerator:1121 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c]
2019-06-22 02:32:53,386 [DEBUG] CodeGenerator:1122 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:32:54,491 [INFO] ProjectBuilder:1489 - Time for Copy HAL[1] : 278mS.
2019-06-22 02:32:54,493 [INFO] ProjectBuilder:2057 - Project Generator version: 3.2.0
2019-06-22 02:32:54,495 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[fileConfig.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:54,496 [DEBUG] cache:81 - Compiling FreeMarker template fileConfig.ftl[en_US,Cp1252,parsed]  from C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\projectmanager\fileConfig.ftl
2019-06-22 02:32:54,714 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:54,715 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:54,715 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:54,722 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:54,886 [INFO] ConfigFileManager:880 - The Die is : DIE423
2019-06-22 02:32:54,886 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:54,887 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:54,887 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:54,892 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:54,893 [DEBUG] MicroXplorer:577 - configName ==Arm Cortex-M4
2019-06-22 02:32:55,087 [DEBUG] MicroXplorer:577 - memory ==name="RAM" access="xrw" start="0x20000000" size="64"
2019-06-22 02:32:55,087 [DEBUG] MicroXplorer:577 - memory ==name="FLASH" access="rx" start="0x8000000" size="256"
2019-06-22 02:32:55,348 [DEBUG] MicroXplorer:577 - namefile= STM32CubeIDE
2019-06-22 02:32:55,348 [DEBUG] root:167 - 3rd party IDE plugIn contribution found (cf. UC30 required properties file):
2019-06-22 02:32:55,348 [DEBUG] root:168 - 	Key name = STM32CubeIDE
2019-06-22 02:32:55,349 [DEBUG] root:169 - 	Display name = STM32CubeIDE
2019-06-22 02:32:55,349 [DEBUG] root:170 - 	Class = class com.st.stm32cube.ide.mcu.ide.process.MxIdePlugInProjectGenerator
2019-06-22 02:32:55,350 [DEBUG] MicroXplorer:577 - method name===============update
2019-06-22 02:32:56,140 [INFO] ProjectBuilder:2150 - Time for Generating toolchain IDE Files: 1647mS.
2019-06-22 02:32:56,141 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 1mS.
2019-06-22 02:32:56,150 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 0mS.
2019-06-22 02:32:56,440 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:32:56,440 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:32:56,457 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:32:56,457 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:32:56,457 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:32:56,458 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:32:56,458 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:32:56,458 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:32:56,458 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:32:56,458 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:32:56,459 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:32:56,459 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : End_Generate_Project
2019-06-22 02:32:56,459 [DEBUG] MainPanel:779 - End propertyChange MainPanel : End_Generate_Project
2019-06-22 02:32:56,459 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:32:56,492 [DEBUG] Updater:271 - Updater getSpecificTask: 4
2019-06-22 02:32:56,492 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:56,509 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:56,509 [DEBUG] ThirdParty:407 - Requested task: 5
2019-06-22 02:32:56,509 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:32:56,509 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:32:56,509 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiUpdateIPsStatus
2019-06-22 02:32:56,510 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,510 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,510 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,510 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,510 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:32:56,510 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiUpdateIPsStatus
2019-06-22 02:32:56,511 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,511 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,511 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,511 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiUpdateIPsStatus
2019-06-22 02:32:56,511 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventGuiUpdateIPsStatus old
2019-06-22 02:32:56,511 [DEBUG] FileManagerView:196 - iTypeTask=4, clParamTask=null
2019-06-22 02:32:56,512 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:32:56,514 [INFO] UtilMem:74 - End SaveConfig() Used Memory: 547648304 Bytes (1073741824)
2019-06-22 02:32:56,523 [DEBUG] Updater:271 - Updater getSpecificTask: 2
2019-06-22 02:32:56,523 [DEBUG] Updater:271 - Updater getSpecificTask: 11
2019-06-22 02:32:56,523 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,524 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,524 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,524 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,525 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,525 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,525 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,526 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,528 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,529 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,529 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,530 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,530 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,530 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,531 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,531 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,531 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:56,532 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:56,532 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:56,539 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:56,811 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:32:56,815 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:32:56,815 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventMxSystemSaveProject
2019-06-22 02:32:56,815 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:32:56,815 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventMxSystemSaveProject
2019-06-22 02:32:56,816 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: EventMxSystemSaveProject don't care
2019-06-22 02:32:56,817 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-22 02:32:56,817 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:32:56,818 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-22 02:32:57,424 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:57,424 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:32:57,424 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:32:57,431 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:32:57,431 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:32:57,439 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: NVIC
2019-06-22 02:32:57,439 [INFO] BlockDiagram:1879 - set Specific Code input for plugin: SYS
2019-06-22 02:32:57,441 [INFO] CodeGenerator:572 - code generatio: config db path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\\db\
2019-06-22 02:32:57,442 [DEBUG] CodeGenerator:577 - no options is available: use default one!!!!!!
2019-06-22 02:32:57,442 [DEBUG] CodeGenerator:594 - DEBUG: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test
2019-06-22 02:32:57,443 [DEBUG] CodeGenerator:4847 - Start prepareFunctionList()
2019-06-22 02:32:57,443 [DEBUG] CodeGenerator:5073 - End prepareFunctionList()
2019-06-22 02:32:57,443 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:32:57,444 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: FctUpdates
2019-06-22 02:32:57,444 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: FctUpdates
2019-06-22 02:32:57,444 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:32:57,445 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : FctUpdates
2019-06-22 02:32:57,445 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : FctUpdates
2019-06-22 02:32:57,445 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : FctUpdates
2019-06-22 02:32:57,445 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: FctUpdates
2019-06-22 02:32:57,445 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: FctUpdates
2019-06-22 02:32:57,445 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:32:57,445 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : FctUpdates
2019-06-22 02:32:57,446 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : FctUpdates
2019-06-22 02:32:57,446 [DEBUG] MainPanel:779 - End propertyChange MainPanel : FctUpdates
2019-06-22 02:32:57,446 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: FctUpdates 
2019-06-22 02:32:58,105 [DEBUG] CodeGenerator:3417 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\BSD_License.ftl
2019-06-22 02:32:58,105 [DEBUG] CodeGenerator:3426 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/license.tmp
2019-06-22 02:32:58,105 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:58
2019-06-22 02:32:58,108 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:58
2019-06-22 02:32:58,108 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:58,108 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,109 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:58,110 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:58,111 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:58,111 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,111 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,111 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,143 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp_save
2019-06-22 02:32:58,147 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:58,147 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[BSD_License.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,149 [DEBUG] cache:81 - Compiling FreeMarker template BSD_License.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\BSD_License.ftl
2019-06-22 02:32:58,151 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,152 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:58,282 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,284 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:58,324 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:58,330 [DEBUG] CodeGenerator:1323 - Generate code for used IP-------------------------
2019-06-22 02:32:58,330 [DEBUG] MicroXplorer:577 - Command line
2019-06-22 02:32:58,331 [DEBUG] MicroXplorer:577 - Debug : prepare data for SYS
2019-06-22 02:32:58,331 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:32:58,333 [DEBUG] MicroXplorer:577 - Debug : prepare data for NVIC
2019-06-22 02:32:58,333 [DEBUG] MicroXplorer:577 - Command line test
2019-06-22 02:32:58,336 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_c.ftl
2019-06-22 02:32:58,336 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_it.c
2019-06-22 02:32:58,336 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:58
2019-06-22 02:32:58,347 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:58
2019-06-22 02:32:58,348 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:58,348 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,349 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:58,349 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:58,349 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:58,349 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,349 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:58,350 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:58,351 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:58,352 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,352 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,352 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,392 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c_save
2019-06-22 02:32:58,399 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:58,399 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,401 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_c.ftl
2019-06-22 02:32:58,410 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,411 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:58,538 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,539 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:58,560 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,562 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:58,579 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:58,611 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_it.c
2019-06-22 02:32:58,614 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_it_h.ftl
2019-06-22 02:32:58,614 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_it.h
2019-06-22 02:32:58,615 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:58
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:58
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,618 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist NVIC
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,619 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:58,620 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,621 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,621 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,652 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h_save
2019-06-22 02:32:58,659 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:58,659 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_it_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,660 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_it_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_it_h.ftl
2019-06-22 02:32:58,664 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,664 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:58,761 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,762 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:58,775 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,777 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:58,789 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:58,796 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_it.h
2019-06-22 02:32:58,800 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32xx_hal_msp_c.ftl
2019-06-22 02:32:58,801 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/stm32f4xx_hal_msp.c
2019-06-22 02:32:58,801 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:58
2019-06-22 02:32:58,810 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:58
2019-06-22 02:32:58,810 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:58,810 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,810 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:58,810 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:58,810 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,811 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:58,812 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:58,812 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:58,812 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:58,812 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,812 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:58,812 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:58,837 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c_save
2019-06-22 02:32:58,842 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:58,842 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,843 [DEBUG] cache:81 - Compiling FreeMarker template stm32xx_hal_msp_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32xx_hal_msp_c.ftl
2019-06-22 02:32:58,880 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,881 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:58,972 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,973 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:58,992 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:58,994 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:59,019 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:32:59,034 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\stm32f4xx_hal_msp.c
2019-06-22 02:32:59,038 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\system.ftl
2019-06-22 02:32:59,038 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/MXTmpFiles/system.tmp
2019-06-22 02:32:59,038 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:59
2019-06-22 02:32:59,042 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:59
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:59,043 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,044 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,045 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,064 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp_save
2019-06-22 02:32:59,066 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:59,067 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[system.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,068 [DEBUG] cache:81 - Compiling FreeMarker template system.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\system.ftl
2019-06-22 02:32:59,070 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,070 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:59,163 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,164 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:59,181 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\system.tmp
2019-06-22 02:32:59,182 [DEBUG] CodeGenerator:3095 - generateHALConfCode() - Generate msp.c code done.
2019-06-22 02:32:59,183 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:32:59,183 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/stm32f4xx_hal_conf.h
2019-06-22 02:32:59,183 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:59
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:59
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:59,191 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 3300
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 1
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 0
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 25000000
2019-06-22 02:32:59,192 [DEBUG] TemplateFile:22 - varlist 100
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 32768
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 5000
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 12288000
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 16000000
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 32000
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 0U
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:59,193 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:59,194 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:59,194 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,194 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,194 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,227 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h_save
2019-06-22 02:32:59,240 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:59,240 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,241 [DEBUG] cache:81 - Compiling FreeMarker template stm32f4xx_hal_conf_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\stm32f4xx_hal_conf_h.ftl
2019-06-22 02:32:59,258 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,259 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:59,418 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,419 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:59,475 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:59,486 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\stm32f4xx_hal_conf.h
2019-06-22 02:32:59,489 [DEBUG] CodeGenerator:3031 - generateHALConfCode() - Generate hal_conf.h code done.
2019-06-22 02:32:59,496 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_h.ftl
2019-06-22 02:32:59,496 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Inc/main.h
2019-06-22 02:32:59,497 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:59
2019-06-22 02:32:59,507 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:59
2019-06-22 02:32:59,507 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:59,508 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,508 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:59,508 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:59,508 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:59,508 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,508 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:59,509 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:59,510 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:59,511 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:59,511 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,511 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,511 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,541 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h_save
2019-06-22 02:32:59,549 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:59,549 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_h.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,551 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_h.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_h.ftl
2019-06-22 02:32:59,562 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,563 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:59,658 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,661 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:59,695 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,697 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:59,711 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\tmp
2019-06-22 02:32:59,722 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Inc\main.h
2019-06-22 02:32:59,725 [DEBUG] CodeGenerator:3655 - generateOutputCode() - template path: C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\templates\tpl_main_c.ftl
2019-06-22 02:32:59,725 [DEBUG] CodeGenerator:3664 - generateOutputCode() - code result path: C:/Users/Afonso Muralha/Documents/GitHub/Gif-Player-Badge/Code/Test/Src/main.c
2019-06-22 02:32:59,726 [DEBUG] CodeEngine:60 - 22/06/2019 02:32:59
2019-06-22 02:32:59,738 [DEBUG] TemplateFile:22 - varlist 22/06/2019 02:32:59
2019-06-22 02:32:59,738 [DEBUG] TemplateFile:22 - varlist 2019
2019-06-22 02:32:59,738 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,738 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:59,739 [DEBUG] TemplateFile:22 - varlist STM32F401CCFx
2019-06-22 02:32:59,739 [DEBUG] TemplateFile:22 - varlist DIE423
2019-06-22 02:32:59,739 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,739 [DEBUG] TemplateFile:22 - varlist MXTmpFiles
2019-06-22 02:32:59,739 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,739 [DEBUG] TemplateFile:22 - varlist 
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist ARM_CORTEX_M4
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist NVIC_PRIORITYGROUP_4
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist HAL
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist stm32f4xx_hal_conf.h
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist HALCompliant
2019-06-22 02:32:59,740 [DEBUG] TemplateFile:22 - varlist STM32F4
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist Arm Cortex-M4
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist STM32F401
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,741 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist main.h
2019-06-22 02:32:59,742 [DEBUG] TemplateFile:22 - varlist boot0
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist 1.24.1
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist TIM_HandleTypeDef
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist SysTick_IRQn
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist hsystick
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist SysTick
2019-06-22 02:32:59,743 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,744 [DEBUG] TemplateFile:22 - varlist true
2019-06-22 02:32:59,744 [DEBUG] TemplateFile:22 - varlist false
2019-06-22 02:32:59,789 [INFO] CodeEngine:190 - oldGeneratedFile, C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c_save
2019-06-22 02:32:59,796 [DEBUG] CodeEngine:265 - test template existe:true
2019-06-22 02:32:59,796 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[tpl_main_c.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,798 [DEBUG] cache:81 - Compiling FreeMarker template tpl_main_c.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\tpl_main_c.ftl
2019-06-22 02:32:59,824 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,825 [DEBUG] cache:81 - Compiling FreeMarker template common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\common.ftl
2019-06-22 02:32:59,929 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[mw_common.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,930 [DEBUG] cache:81 - Compiling FreeMarker template mw_common.ftl[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\mw_common.ftl
2019-06-22 02:32:59,950 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[MXTmpFiles/license.tmp[en_US,Cp1252,parsed] ]
2019-06-22 02:32:59,952 [DEBUG] cache:81 - Compiling FreeMarker template MXTmpFiles/license.tmp[en_US,Cp1252,parsed]  from C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\MXTmpFiles\license.tmp
2019-06-22 02:32:59,955 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,956 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,956 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,957 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,958 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,959 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,959 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,960 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,961 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,962 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,963 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,964 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,964 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,965 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,966 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,966 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,967 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,968 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,970 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,972 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,973 [DEBUG] beans:81 - Key 'methods' was not found on instance of com.st.microxplorer.codegenerator.Config. Introspection information for the class is: {getClass=public final native java.lang.Class java.lang.Object.getClass(), getName=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(), hasLibMethod=public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod(), componentList=java.beans.PropertyDescriptor[name=componentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)], getRespectOrder=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(), updateArguments=freemarker.ext.beans.MethodMap@1e4bab48, respectOrder=java.beans.PropertyDescriptor[name=respectOrder; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)], java.lang.Object@4c15ece=freemarker.ext.beans.MethodMap@5a9e6d55, getDefineList=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(), setComponentList=public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List), getMspCallBackList=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(), getComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList(), getComments=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(), listOfTmpCode=java.beans.PropertyDescriptor[name=listOfTmpCode; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()], setIpName=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String), setConfigFileList=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List), containsInitMethod=public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod(), setBspComponentList=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List), getListOfTmpCode=public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode(), getBspComponentList=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(), configFileList=java.beans.PropertyDescriptor[name=configFileList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)], getALLCalledLibMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod(), ipName=java.beans.PropertyDescriptor[name=ipName; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)], parser=java.beans.PropertyDescriptor[name=parser; propertyType=class com.st.microxplorer.util.LogicalParser; readMethod=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)], name=java.beans.PropertyDescriptor[name=name; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getName(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)], getArguments=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments(), conditions=java.beans.PropertyDescriptor[name=conditions; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)], setName=public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String), libMethod=java.beans.PropertyDescriptor[name=libMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getLibMethod(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)], removeLibMethod=public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List), defineList=java.beans.PropertyDescriptor[name=defineList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)], setRespectOrder=public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String), setLibMethod=public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List), valid=java.beans.PropertyDescriptor[name=valid; propertyType=boolean; readMethod=public boolean com.st.microxplorer.codegenerator.Config.isValid(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setValid(boolean)], setMspCallBackList=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List), ALLCalledLibMethod=java.beans.PropertyDescriptor[name=ALLCalledLibMethod; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()], setConditions=public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List), setParser=public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser), hashCode=public native int java.lang.Object.hashCode(), getParser=public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser(), hasRefConfigFile=public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile(), setDefineList=public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List), getConfigFileList=public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList(), getIpName=public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName(), setComments=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String), class=java.beans.PropertyDescriptor[name=class; propertyType=class java.lang.Class; readMethod=public final native java.lang.Class java.lang.Object.getClass()], java.lang.Object@18dcb103={public java.lang.String java.lang.Object.toString()=[Ljava.lang.Class;@491ef9c0, public com.st.microxplorer.util.LogicalParser com.st.microxplorer.codegenerator.Config.getParser()=[Ljava.lang.Class;@2cf7d8f6, public java.util.List com.st.microxplorer.codegenerator.Config.getComponentList()=[Ljava.lang.Class;@6fa527cb, public void com.st.microxplorer.codegenerator.Config.setParser(com.st.microxplorer.util.LogicalParser)=[Ljava.lang.Class;@46781baf, public void com.st.microxplorer.codegenerator.Config.setConditions(java.util.List)=[Ljava.lang.Class;@78963a59, public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList()=[Ljava.lang.Class;@6a346dd5, public void com.st.microxplorer.codegenerator.Config.setComponentList(java.util.List)=[Ljava.lang.Class;@2ce99427, public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)=[Ljava.lang.Class;@2aca4776, public java.util.List com.st.microxplorer.codegenerator.Config.getDefineList()=[Ljava.lang.Class;@6347f484, public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)=[Ljava.lang.Class;@2a5477fc, public void com.st.microxplorer.codegenerator.Config.setIpName(java.lang.String)=[Ljava.lang.Class;@4afc863d, public java.lang.String com.st.microxplorer.codegenerator.Config.getIpName()=[Ljava.lang.Class;@327589e3, public boolean java.lang.Object.equals(java.lang.Object)=[Ljava.lang.Class;@6e4ab8fd, public java.util.List com.st.microxplorer.codegenerator.Config.getConfigFileList()=[Ljava.lang.Class;@67a8d95f, public boolean com.st.microxplorer.codegenerator.Config.hasRefConfigFile()=[Ljava.lang.Class;@49cb66f9, public void com.st.microxplorer.codegenerator.Config.setDefineList(java.util.List)=[Ljava.lang.Class;@576fc4b2, public java.lang.String com.st.microxplorer.codegenerator.Config.getComments()=[Ljava.lang.Class;@6c5903f2, public void com.st.microxplorer.codegenerator.Config.removeLibMethod(java.util.List)=[Ljava.lang.Class;@4d9a4d07, public boolean com.st.microxplorer.codegenerator.Config.hasLibMethod()=[Ljava.lang.Class;@5f7406e3, public java.lang.String com.st.microxplorer.codegenerator.Config.getName()=[Ljava.lang.Class;@769703eb, public void com.st.microxplorer.codegenerator.Config.setName(java.lang.String)=[Ljava.lang.Class;@5275d858, public void com.st.microxplorer.codegenerator.Config.setLibMethod(java.util.List)=[Ljava.lang.Class;@4d984564, public void com.st.microxplorer.codegenerator.Config.setRespectOrder(java.lang.String)=[Ljava.lang.Class;@32a4012a, public java.lang.String com.st.microxplorer.codegenerator.Config.getRespectOrder()=[Ljava.lang.Class;@7ce2c4ce, public native int java.lang.Object.hashCode()=[Ljava.lang.Class;@296412, public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()=[Ljava.lang.Class;@f95b216, public boolean com.st.microxplorer.codegenerator.Config.isValid()=[Ljava.lang.Class;@1daa4f9f, public boolean com.st.microxplorer.codegenerator.Config.containsInitMethod()=[Ljava.lang.Class;@77042c50, public void com.st.microxplorer.codegenerator.Config.setValid(boolean)=[Ljava.lang.Class;@3c46cf56, public void com.st.microxplorer.codegenerator.Config.setConfigFileList(java.util.List)=[Ljava.lang.Class;@1ee1dfca, public java.util.List com.st.microxplorer.codegenerator.Config.getALLCalledLibMethod()=[Ljava.lang.Class;@51f8bd3e, public final native java.lang.Class java.lang.Object.getClass()=[Ljava.lang.Class;@7486dfd, public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList()=[Ljava.lang.Class;@dfe2e3d, public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List)=[Ljava.lang.Class;@1df1afc7, public java.util.List com.st.microxplorer.codegenerator.Config.getConditions()=[Ljava.lang.Class;@9f4e00a, public java.util.List com.st.microxplorer.codegenerator.Config.getListOfTmpCode()=[Ljava.lang.Class;@4d97534c, public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)=[Ljava.lang.Class;@31640305}, setValid=public void com.st.microxplorer.codegenerator.Config.setValid(boolean), comments=java.beans.PropertyDescriptor[name=comments; propertyType=class java.lang.String; readMethod=public java.lang.String com.st.microxplorer.codegenerator.Config.getComments(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setComments(java.lang.String)], getLibMethod=freemarker.ext.beans.MethodMap@21fb0d79, isValid=public boolean com.st.microxplorer.codegenerator.Config.isValid(), addLibMethod=public void com.st.microxplorer.codegenerator.Config.addLibMethod(java.util.List), getConditions=public java.util.List com.st.microxplorer.codegenerator.Config.getConditions(), getgpioLibMethod=freemarker.ext.beans.MethodMap@f215dfc, mspCallBackList=java.beans.PropertyDescriptor[name=mspCallBackList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getMspCallBackList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setMspCallBackList(java.util.List)], equals=public boolean java.lang.Object.equals(java.lang.Object), arguments=java.beans.PropertyDescriptor[name=arguments; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getArguments()], toString=public java.lang.String java.lang.Object.toString(), bspComponentList=java.beans.PropertyDescriptor[name=bspComponentList; propertyType=interface java.util.List; readMethod=public java.util.List com.st.microxplorer.codegenerator.Config.getBspComponentList(); writeMethod=public void com.st.microxplorer.codegenerator.Config.setBspComponentList(java.util.List)]}
2019-06-22 02:32:59,986 [DEBUG] CodeEngine:295 - tmp file : C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\tmp
2019-06-22 02:33:00,010 [INFO] CodeEngine:208 - Generated code: C:\Users\Afonso Muralha\Documents\GitHub\Gif-Player-Badge\Code\Test\Src\main.c
2019-06-22 02:33:00,257 [DEBUG] CodeGenerator:1120 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:33:00,258 [DEBUG] CodeGenerator:1121 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c, Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c]
2019-06-22 02:33:00,258 [DEBUG] CodeGenerator:1122 - Debug: RefComponents: [Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_flash_ramfunc.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h, Drivers/STM32F4xx_HAL_Driver/Inc/Legacy/stm32_hal_legacy.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h, Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_exti.h]
2019-06-22 02:33:01,348 [INFO] ProjectBuilder:1489 - Time for Copy HAL[1] : 298mS.
2019-06-22 02:33:01,352 [INFO] ProjectBuilder:2057 - Project Generator version: 3.2.0
2019-06-22 02:33:01,354 [DEBUG] cache:81 - Could not find template in cache, creating new one; id=[fileConfig.ftl[en_US,Cp1252,parsed] ]
2019-06-22 02:33:01,356 [DEBUG] cache:81 - Compiling FreeMarker template fileConfig.ftl[en_US,Cp1252,parsed]  from C:\ST\STM32CubeIDE_1.0.0\STM32CubeIDE\plugins\com.st.stm32cube.common.mx_1.0.0.201904230831\db\plugins\projectmanager\fileConfig.ftl
2019-06-22 02:33:01,692 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:33:01,692 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:33:01,692 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:33:01,701 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:33:02,489 [INFO] ConfigFileManager:880 - The Die is : DIE423
2019-06-22 02:33:02,490 [DEBUG] Updater:271 - Updater getSpecificTask: 3
2019-06-22 02:33:02,490 [DEBUG] Updater:271 - Updater getSpecificTask: 13
2019-06-22 02:33:02,490 [DEBUG] MainUpdater:1364 - mainStatus changed to 8
2019-06-22 02:33:02,496 [DEBUG] MainUpdater:1377 - mainStatus changed to MainStatus_NoneCte from : 8
2019-06-22 02:33:02,497 [DEBUG] MicroXplorer:577 - configName ==Arm Cortex-M4
2019-06-22 02:33:03,130 [DEBUG] MicroXplorer:577 - memory ==name="RAM" access="xrw" start="0x20000000" size="64"
2019-06-22 02:33:03,131 [DEBUG] MicroXplorer:577 - memory ==name="FLASH" access="rx" start="0x8000000" size="256"
2019-06-22 02:33:03,590 [DEBUG] MicroXplorer:577 - namefile= STM32CubeIDE
2019-06-22 02:33:03,591 [DEBUG] root:167 - 3rd party IDE plugIn contribution found (cf. UC30 required properties file):
2019-06-22 02:33:03,591 [DEBUG] root:168 - 	Key name = STM32CubeIDE
2019-06-22 02:33:03,591 [DEBUG] root:169 - 	Display name = STM32CubeIDE
2019-06-22 02:33:03,591 [DEBUG] root:170 - 	Class = class com.st.stm32cube.ide.mcu.ide.process.MxIdePlugInProjectGenerator
2019-06-22 02:33:03,591 [DEBUG] MicroXplorer:577 - method name===============update
2019-06-22 02:33:04,164 [INFO] ProjectBuilder:2150 - Time for Generating toolchain IDE Files: 2813mS.
2019-06-22 02:33:04,165 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 1mS.
2019-06-22 02:33:04,169 [INFO] ProjectBuilder:1380 - Time for Copy CMSIS : 0mS.
2019-06-22 02:33:04,335 [DEBUG] MXPropertyChangeSupport:44 - Start MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 02:33:04,335 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:33:04,335 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: End_Generate_Project
2019-06-22 02:33:04,336 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:33:04,336 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : End_Generate_Project
2019-06-22 02:33:04,337 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:33:04,337 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : End_Generate_Project
2019-06-22 02:33:04,337 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:33:04,337 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: End_Generate_Project
2019-06-22 02:33:04,337 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:33:04,338 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : End_Generate_Project
2019-06-22 02:33:04,338 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : End_Generate_Project
2019-06-22 02:33:04,338 [DEBUG] MainPanel:779 - End propertyChange MainPanel : End_Generate_Project
2019-06-22 02:33:04,339 [DEBUG] MXPropertyChangeSupport:47 - End MXSystem firePropertyChange: End_Generate_Project old
2019-06-22 16:02:10,787 [DEBUG] PinoutAndConfigurationView:578 - sp_PinoutAndSystemViews - pce.getPropertyName() : dividerLocation1.0
2019-06-22 16:02:11,143 [DEBUG] PinoutAndConfigurationView:1659 - Resize component
2019-06-22 16:02:11,143 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: 0.5
2019-06-22 16:02:11,299 [DEBUG] PinoutAndConfigurationView:1659 - Resize component
2019-06-22 16:02:11,300 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: 0.5
2019-06-22 16:02:20,716 [DEBUG] PinoutAndConfigurationView:578 - sp_PinoutAndSystemViews - pce.getPropertyName() : dividerLocation1.0
2019-06-22 16:02:20,722 [DEBUG] PinoutAndConfigurationView:1659 - Resize component
2019-06-22 16:02:20,722 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: 1.0
2019-06-22 16:03:54,814 [DEBUG] PinoutAndConfigurationView:1659 - Resize component
2019-06-22 16:03:54,815 [DEBUG] PinOutPanel:705 - fitInWindow Computed Zoom: 0.9
2019-06-24 18:31:04,714 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,734 [DEBUG] BlockDiagram:1235 - Start updateAllDiagram  
2019-06-24 18:31:04,814 [DEBUG] BlockDiagram:1017 - start updateBtnsStatus
2019-06-24 18:31:04,814 [DEBUG] BlockDiagram:1124 - -----------------------------
2019-06-24 18:31:04,824 [DEBUG] BlockDiagram:1126 - ---------- End --------------
2019-06-24 18:31:04,824 [DEBUG] BlockDiagram:1128 - end updateBtnsStatus
2019-06-24 18:31:04,824 [DEBUG] BlockDiagram:1953 - start ghatherIpErrorStates(map)
2019-06-24 18:31:04,824 [DEBUG] BlockDiagram:1970 - end ghatherIpErrorStates(map)
2019-06-24 18:31:04,824 [DEBUG] BlockDiagram:1892 - start checkBlockDiagramState
2019-06-24 18:31:04,824 [DEBUG] BlockDiagram:1900 - end checkBlockDiagramState
2019-06-24 18:31:04,824 [DEBUG] MXPropertyChangeSupport:62 - Start MXSystem Refreshing firePropertyChange: EventGuiConfigurationError true
2019-06-24 18:31:04,824 [DEBUG] IPPluginView:407 - Start propertyChange IPPluginView: EventGuiConfigurationError
2019-06-24 18:31:04,834 [DEBUG] IPPluginView:452 - End propertyChange IPPluginView: EventGuiConfigurationError
2019-06-24 18:31:04,834 [DEBUG] PeripheralsSelectionPanel:483 - Start propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-24 18:31:04,873 [DEBUG] PeripheralsSelectionPanel:629 - End propertyChange PeripheralsSelectionPanel : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] PinOutPanel:759 - Start propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] PinOutPanel:954 - End propertyChange PinoutPanel : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] BlockDiagram:1316 - Start propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] BlockDiagram:1536 - End propertyChange BlockDiagram: EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] MainPanel:706 - Start propertyChange MainPanel : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] MainPanel:779 - End propertyChange MainPanel : EventGuiConfigurationError
2019-06-24 18:31:04,883 [DEBUG] MXPropertyChangeSupport:66 - End MXSystem Refreshing firePropertyChange: EventGuiConfigurationError true
2019-06-24 18:31:04,883 [DEBUG] BlockDiagram:1261 - End updateAllDiagram  
2019-06-24 18:31:04,883 [DEBUG] MxSystem:282 - Added com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement@6c7bc8ac by com.st.microxplorer.plugins.ipmanager.pluginmanagement.IpPluginManagement.updateAllDiagram / Number of listeners = 25
2019-06-24 18:31:04,883 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,893 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,893 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,893 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,893 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,903 [DEBUG] PinoutAndConfigurationView:1013 - Start propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:04,903 [DEBUG] PinoutAndConfigurationView:1148 - End propertyChange PinoutAndConfigurationView : ancestor
2019-06-24 18:31:09,836 [DEBUG] FileManagerView:196 - iTypeTask=15, clParamTask=null
2019-06-24 18:31:09,836 [DEBUG] FileManagerView:196 - iTypeTask=9, clParamTask=null
2019-06-24 18:31:10,649 [DEBUG] MxSystem:356 - Removed null@6275c2cd by com.st.stm32cube.common.mx.editor.CubeMxEditor.removeListeners / Number of listeners = 24
